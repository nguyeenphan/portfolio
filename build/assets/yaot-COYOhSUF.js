import{g as Z}from"./@react-three-DVrNtQ6i.js";import{r as L}from"./rafor-CUl-zpLj.js";var X=$;function $(i,n,t,o){this.x=typeof i=="number"?i:0,this.y=typeof n=="number"?n:0,this.z=typeof t=="number"?t:0,this.half=typeof o=="number"?o:0}$.prototype.contains=function(n,t,o){var r=this.half;return this.x-r<=n&&n<this.x+r&&this.y-r<=t&&t<this.y+r&&this.z-r<=o&&o<this.z+r};var M=X,H=4,J=w;function w(i){this.bounds=i,this.q0=null,this.q1=null,this.q2=null,this.q3=null,this.q4=null,this.q5=null,this.q6=null,this.q7=null,this.items=null}w.prototype.subdivide=function(){var n=this.bounds,t=n.half/2;this.q0=new w(new M(n.x-t,n.y-t,n.z-t,t)),this.q1=new w(new M(n.x+t,n.y-t,n.z-t,t)),this.q2=new w(new M(n.x-t,n.y+t,n.z-t,t)),this.q3=new w(new M(n.x+t,n.y+t,n.z-t,t)),this.q4=new w(new M(n.x-t,n.y-t,n.z+t,t)),this.q5=new w(new M(n.x+t,n.y-t,n.z+t,t)),this.q6=new w(new M(n.x-t,n.y+t,n.z+t,t)),this.q7=new w(new M(n.x+t,n.y+t,n.z+t,t))};w.prototype.insert=function(n,t,o){var r=this.q0===null;if(r){if(this.items===null?this.items=[n]:this.items.push(n),this.items.length>=H&&o<16){this.subdivide();for(var N=0;N<this.items.length;++N)this.insert(this.items[N],t,o+1);this.items=null}}else{var P=t[n],q=t[n+1],b=t[n+2],Y=this.bounds,F=0;P>Y.x&&(F+=1),q>Y.y&&(F+=2),b>Y.z&&(F+=4);var S=K(this,F);S.insert(n,t,o+1)}};w.prototype.query=function(n,t,o,r){if(o(this.bounds)){var N=this.items,P=typeof r=="function";if(N)for(var q=0;q<N.length;++q){var b=N[q];P?r(t[b],t[b+1],t[b+2])&&n.push(b):n.push(b)}this.q0&&(this.q0.query(n,t,o,r),this.q1.query(n,t,o,r),this.q2.query(n,t,o,r),this.q3.query(n,t,o,r),this.q4.query(n,t,o,r),this.q5.query(n,t,o,r),this.q6.query(n,t,o,r),this.q7.query(n,t,o,r))}};function K(i,n){if(n===0)return i.q0;if(n===1)return i.q1;if(n===2)return i.q2;if(n===3)return i.q3;if(n===4)return i.q4;if(n===5)return i.q5;if(n===6)return i.q6;if(n===7)return i.q7}var V=X,G=J,Q=new V,U=L,W=A;function A(i){var n=[],t,o,r={initAsync:F,init:Y,bounds:j,intersectRay:b,intersectSphere:P,getRoot:N};return r;function N(){return t}function P(e,s,v,m){if(!t)return n;var l=[],a=m*m;return t.query(l,o,z,y),l;function z(f){var u=a,h=f.half;return e<f.x-h?u-=q(e-(f.x-h)):e>f.x+h&&(u-=q(e-(f.x+h))),s<f.y-h?u-=q(s-(f.y-h)):s>f.y+h&&(u-=q(s-(f.y+h))),v<f.z-h?u-=q(v-(f.z-h)):v>f.z+h&&(u-=q(v-(f.z+h))),u>0}function y(f,u,h){return q(f-e)+q(u-s)+q(h-v)<a}}function q(e){return e*e}function b(e,s,v,m){if(!t)return n;v===void 0&&(v=0),m===void 0&&(m=Number.POSITIVE_INFINITY),v*=v,m*=m;var l=[];return t.query(l,o,a,z),l.sort(y);function a(f){var u=f.half,h=(f.x-u-e.x)/s.x,I=(f.x+u-e.x)/s.x,E=(f.y+u-e.y)/s.y,T=(f.y-u-e.y)/s.y,x=(f.z-u-e.z)/s.z,R=(f.z+u-e.z)/s.z,_=Math.min(Math.min(Math.max(h,I),Math.max(E,T)),Math.max(x,R)),p;return _<0?!1:(p=Math.max(Math.max(Math.min(h,I),Math.min(E,T)),Math.min(x,R)),p<=_&&p<=m)}function z(f,u,h){var I=(f-e.x)*(f-e.x)+(u-e.y)*(u-e.y)+(h-e.z)*(h-e.z);return v<=I&&I<=m}function y(f,u){var h=e[f],I=e[f+1],E=e[f+2],T=(h-e.x)*(h-e.x)+(I-e.y)*(I-e.y)+(E-e.z)*(E-e.z),x=e[u],R=e[u+1],_=e[u+2],p=(x-e.x)*(x-e.x)+(R-e.y)*(R-e.y)+(_-e.z)*(_-e.z);return T-p}}function Y(e){S(e),o=e,t=B(e);for(var s=0;s<e.length;s+=3)t.insert(s,o,0)}function F(e,s){S(e);var v=B(e);U(e,m,l,{step:3});function m(a,z){v.insert(z,e,0)}function l(){o=e,t=v,typeof s=="function"&&s(r)}}function S(e){if(!e)throw new Error("Points array is required for quadtree to work");if(typeof e.length!="number")throw new Error("Points should be array-like object");if(e.length%3!==0)throw new Error("Points array should consist of series of x,y,z coordinates and be multiple of 3")}function j(){return t?t.bounds:Q}function B(e){if(e.length===0){var s=new V;return new G(s)}for(var v=Number.POSITIVE_INFINITY,m=Number.POSITIVE_INFINITY,l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY,z=Number.NEGATIVE_INFINITY,y=Number.NEGATIVE_INFINITY,f=0;f<e.length;f+=3){var u=e[f],h=e[f+1],I=e[f+2];u<v&&(v=u),u>a&&(a=u),h<m&&(m=h),h>z&&(z=h),I<l&&(l=I),I>y&&(y=I)}var E=Math.max(Math.max(a-v,z-m),y-l);E+=2,v-=1,m-=1,l-=1;var T=E/2,x=new V(v+T,m+T,l+T,T);return new G(x)}}const k=Z(W);export{k as y};
