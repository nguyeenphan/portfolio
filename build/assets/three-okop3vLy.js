/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const vf="170",Mn={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Mo={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Kb=0,pg=1,jb=2,VA=3,HA=0,xy=1,Jb=2,ns=3,js=0,Yi=1,ss=2,hs=0,Co=1,mg=2,gg=3,yg=4,Qb=5,Ar=100,eS=101,tS=102,iS=103,nS=104,sS=200,rS=201,oS=202,aS=203,fd=204,pd=205,lS=206,cS=207,hS=208,uS=209,dS=210,fS=211,pS=212,mS=213,gS=214,md=0,gd=1,yd=2,Fo=3,xd=4,_d=5,vd=6,bd=7,jc=0,yS=1,xS=2,Hs=0,_S=1,vS=2,bS=3,SS=4,MS=5,TS=6,wS=7,xg="attached",AS="detached",bf=300,Js=301,Fr=302,bc=303,Sc=304,gl=306,Mc=1e3,Nn=1001,Tc=1002,Ci=1003,_y=1004,WA=1004,ka=1005,$A=1005,ci=1006,rc=1007,XA=1007,os=1008,qA=1008,fs=1009,vy=1010,by=1011,ol=1012,Sf=1013,Qs=1014,rn=1015,$o=1016,Mf=1017,Tf=1018,Uo=1020,Sy=35902,My=1021,Ty=1022,qi=1023,wy=1024,Ay=1025,Ro=1026,Bo=1027,wf=1028,Jc=1029,Ey=1030,Af=1031,YA=1032,Ef=1033,oc=33776,ac=33777,lc=33778,cc=33779,Sd=35840,Md=35841,Td=35842,wd=35843,Ad=36196,Ed=37492,Cd=37496,Rd=37808,Nd=37809,Pd=37810,Id=37811,Dd=37812,Ld=37813,Fd=37814,Ud=37815,Bd=37816,Od=37817,zd=37818,kd=37819,Gd=37820,Vd=37821,hc=36492,Hd=36494,Wd=36495,Cy=36283,$d=36284,Xd=36285,qd=36286,ES=2200,CS=2201,RS=2202,wc=2300,Yd=2301,td=2302,To=2400,wo=2401,Ac=2402,Cf=2500,Ry=2501,NS=0,PS=1,_g=2,IS=3200,DS=3201,ZA=3202,KA=3203,Gr=0,LS=1,Os="",sn="srgb",Xo="srgb-linear",Qc="linear",Dt="srgb",jA=0,fo=7680,JA=7681,QA=7682,e1=7683,t1=34055,i1=34056,n1=5386,s1=512,r1=513,o1=514,a1=515,l1=516,c1=517,h1=518,vg=519,FS=512,US=513,BS=514,Ny=515,OS=516,zS=517,kS=518,GS=519,Ec=35044,u1=35048,d1=35040,f1=35045,p1=35049,m1=35041,g1=35046,y1=35050,x1=35042,_1="100",bg="300 es",as=2e3,Cc=2001;let ys=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const n=this._listeners[e];if(n!==void 0){const s=n.indexOf(t);s!==-1&&n.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let s=0,r=n.length;s<r;s++)n[s].call(this,e);e.target=null}}};const Ii=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let l_=1234567;const No=Math.PI/180,al=180/Math.PI;function Tn(){const o=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Ii[o&255]+Ii[o>>8&255]+Ii[o>>16&255]+Ii[o>>24&255]+"-"+Ii[e&255]+Ii[e>>8&255]+"-"+Ii[e>>16&15|64]+Ii[e>>24&255]+"-"+Ii[t&63|128]+Ii[t>>8&255]+"-"+Ii[t>>16&255]+Ii[t>>24&255]+Ii[i&255]+Ii[i>>8&255]+Ii[i>>16&255]+Ii[i>>24&255]).toLowerCase()}function Yt(o,e,t){return Math.max(e,Math.min(t,o))}function Py(o,e){return(o%e+e)%e}function v1(o,e,t,i,n){return i+(o-e)*(n-i)/(t-e)}function b1(o,e,t){return o!==e?(t-o)/(e-o):0}function uc(o,e,t){return(1-t)*o+t*e}function S1(o,e,t,i){return uc(o,e,1-Math.exp(-t*i))}function M1(o,e=1){return e-Math.abs(Py(o,e*2)-e)}function T1(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*(3-2*o))}function w1(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*o*(o*(o*6-15)+10))}function A1(o,e){return o+Math.floor(Math.random()*(e-o+1))}function E1(o,e){return o+Math.random()*(e-o)}function C1(o){return o*(.5-Math.random())}function R1(o){o!==void 0&&(l_=o);let e=l_+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function N1(o){return o*No}function P1(o){return o*al}function I1(o){return(o&o-1)===0&&o!==0}function D1(o){return Math.pow(2,Math.ceil(Math.log(o)/Math.LN2))}function L1(o){return Math.pow(2,Math.floor(Math.log(o)/Math.LN2))}function F1(o,e,t,i,n){const s=Math.cos,r=Math.sin,a=s(t/2),l=r(t/2),c=s((e+i)/2),h=r((e+i)/2),u=s((e-i)/2),d=r((e-i)/2),f=s((i-e)/2),p=r((i-e)/2);switch(n){case"XYX":o.set(a*h,l*u,l*d,a*c);break;case"YZY":o.set(l*d,a*h,l*u,a*c);break;case"ZXZ":o.set(l*u,l*d,a*h,a*c);break;case"XZX":o.set(a*h,l*p,l*f,a*c);break;case"YXY":o.set(l*f,a*h,l*p,a*c);break;case"ZYZ":o.set(l*p,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function $i(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return o/4294967295;case Uint16Array:return o/65535;case Uint8Array:return o/255;case Int32Array:return Math.max(o/2147483647,-1);case Int16Array:return Math.max(o/32767,-1);case Int8Array:return Math.max(o/127,-1);default:throw new Error("Invalid component type.")}}function it(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return Math.round(o*4294967295);case Uint16Array:return Math.round(o*65535);case Uint8Array:return Math.round(o*255);case Int32Array:return Math.round(o*2147483647);case Int16Array:return Math.round(o*32767);case Int8Array:return Math.round(o*127);default:throw new Error("Invalid component type.")}}const Rc={DEG2RAD:No,RAD2DEG:al,generateUUID:Tn,clamp:Yt,euclideanModulo:Py,mapLinear:v1,inverseLerp:b1,lerp:uc,damp:S1,pingpong:M1,smoothstep:T1,smootherstep:w1,randInt:A1,randFloat:E1,randFloatSpread:C1,seededRandom:R1,degToRad:N1,radToDeg:P1,isPowerOfTwo:I1,ceilPowerOfTwo:D1,floorPowerOfTwo:L1,setQuaternionFromProperEuler:F1,normalize:it,denormalize:$i};let Z=class VS{constructor(e=0,t=0){VS.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Yt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),s=this.x-e.x,r=this.y-e.y;return this.x=s*i-r*n+e.x,this.y=s*n+r*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},lt=class HS{constructor(e,t,i,n,s,r,a,l,c){HS.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,r,a,l,c)}set(e,t,i,n,s,r,a,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=s,h[5]=l,h[6]=i,h[7]=r,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,r=i[0],a=i[3],l=i[6],c=i[1],h=i[4],u=i[7],d=i[2],f=i[5],p=i[8],m=n[0],g=n[3],y=n[6],x=n[1],_=n[4],v=n[7],A=n[2],T=n[5],M=n[8];return s[0]=r*m+a*x+l*A,s[3]=r*g+a*_+l*T,s[6]=r*y+a*v+l*M,s[1]=c*m+h*x+u*A,s[4]=c*g+h*_+u*T,s[7]=c*y+h*v+u*M,s[2]=d*m+f*x+p*A,s[5]=d*g+f*_+p*T,s[8]=d*y+f*v+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*r*h-t*a*c-i*s*h+i*a*l+n*s*c-n*r*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=h*r-a*c,d=a*l-h*s,f=c*s-r*l,p=t*u+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=u*m,e[1]=(n*c-h*i)*m,e[2]=(a*i-n*r)*m,e[3]=d*m,e[4]=(h*t-n*l)*m,e[5]=(n*s-a*t)*m,e[6]=f*m,e[7]=(i*l-c*t)*m,e[8]=(r*t-i*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,s,r,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*r+c*a)+r+e,-n*c,n*l,-n*(-c*r+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(gp.makeScale(e,t)),this}rotate(e){return this.premultiply(gp.makeRotation(-e)),this}translate(e,t){return this.premultiply(gp.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}};const gp=new lt;function WS(o){for(let e=o.length-1;e>=0;--e)if(o[e]>=65535)return!0;return!1}const U1={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Ga(o,e){return new U1[o](e)}function Nc(o){return document.createElementNS("http://www.w3.org/1999/xhtml",o)}function $S(){const o=Nc("canvas");return o.style.display="block",o}const c_={};function Ql(o){o in c_||(c_[o]=!0,console.warn(o))}function B1(o,e,t){return new Promise(function(i,n){function s(){switch(o.clientWaitSync(e,o.SYNC_FLUSH_COMMANDS_BIT,0)){case o.WAIT_FAILED:n();break;case o.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:i()}}setTimeout(s,t)})}function O1(o){const e=o.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function z1(o){const e=o.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const yt={enabled:!0,workingColorSpace:Xo,spaces:{},convert:function(o,e,t){return this.enabled===!1||e===t||!e||!t||(this.spaces[e].transfer===Dt&&(o.r=Ws(o.r),o.g=Ws(o.g),o.b=Ws(o.b)),this.spaces[e].primaries!==this.spaces[t].primaries&&(o.applyMatrix3(this.spaces[e].toXYZ),o.applyMatrix3(this.spaces[t].fromXYZ)),this.spaces[t].transfer===Dt&&(o.r=Ja(o.r),o.g=Ja(o.g),o.b=Ja(o.b))),o},fromWorkingColorSpace:function(o,e){return this.convert(o,this.workingColorSpace,e)},toWorkingColorSpace:function(o,e){return this.convert(o,e,this.workingColorSpace)},getPrimaries:function(o){return this.spaces[o].primaries},getTransfer:function(o){return o===Os?Qc:this.spaces[o].transfer},getLuminanceCoefficients:function(o,e=this.workingColorSpace){return o.fromArray(this.spaces[e].luminanceCoefficients)},define:function(o){Object.assign(this.spaces,o)},_getMatrix:function(o,e,t){return o.copy(this.spaces[e].toXYZ).multiply(this.spaces[t].fromXYZ)},_getDrawingBufferColorSpace:function(o){return this.spaces[o].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(o=this.workingColorSpace){return this.spaces[o].workingColorSpaceConfig.unpackColorSpace}};function Ws(o){return o<.04045?o*.0773993808:Math.pow(o*.9478672986+.0521327014,2.4)}function Ja(o){return o<.0031308?o*12.92:1.055*Math.pow(o,.41666)-.055}const h_=[.64,.33,.3,.6,.15,.06],u_=[.2126,.7152,.0722],d_=[.3127,.329],f_=new lt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),p_=new lt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);yt.define({[Xo]:{primaries:h_,whitePoint:d_,transfer:Qc,toXYZ:f_,fromXYZ:p_,luminanceCoefficients:u_,workingColorSpaceConfig:{unpackColorSpace:sn},outputColorSpaceConfig:{drawingBufferColorSpace:sn}},[sn]:{primaries:h_,whitePoint:d_,transfer:Dt,toXYZ:f_,fromXYZ:p_,luminanceCoefficients:u_,outputColorSpaceConfig:{drawingBufferColorSpace:sn}}});let ta,XS=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ta===void 0&&(ta=Nc("canvas")),ta.width=e.width,ta.height=e.height;const i=ta.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=ta}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Nc("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),s=n.data;for(let r=0;r<s.length;r++)s[r]=Ws(s[r]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Ws(t[i]/255)*255):t[i]=Ws(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},k1=0,Ao=class{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:k1++}),this.uuid=Tn(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let r=0,a=n.length;r<a;r++)n[r].isDataTexture?s.push(yp(n[r].image)):s.push(yp(n[r]))}else s=yp(n);i.url=s}return t||(e.images[this.uuid]=i),i}};function yp(o){return typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&o instanceof ImageBitmap?XS.getDataURL(o):o.data?{data:Array.from(o.data),width:o.width,height:o.height,type:o.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let G1=0,xi=class id extends ys{constructor(e=id.DEFAULT_IMAGE,t=id.DEFAULT_MAPPING,i=Nn,n=Nn,s=ci,r=os,a=qi,l=fs,c=id.DEFAULT_ANISOTROPY,h=Os){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:G1++}),this.uuid=Tn(),this.name="",this.source=new Ao(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=r,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Z(0,0),this.repeat=new Z(1,1),this.center=new Z(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new lt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==bf)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Mc:e.x=e.x-Math.floor(e.x);break;case Nn:e.x=e.x<0?0:1;break;case Tc:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Mc:e.y=e.y-Math.floor(e.y);break;case Nn:e.y=e.y<0?0:1;break;case Tc:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}};xi.DEFAULT_IMAGE=null;xi.DEFAULT_MAPPING=bf;xi.DEFAULT_ANISOTROPY=1;let gt=class qS{constructor(e=0,t=0,i=0,n=1){qS.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=this.w,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n+r[12]*s,this.y=r[1]*t+r[5]*i+r[9]*n+r[13]*s,this.z=r[2]*t+r[6]*i+r[10]*n+r[14]*s,this.w=r[3]*t+r[7]*i+r[11]*n+r[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,s;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],p=l[9],m=l[2],g=l[6],y=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-m)<.01&&Math.abs(p-g)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+m)<.1&&Math.abs(p+g)<.1&&Math.abs(c+f+y-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const _=(c+1)/2,v=(f+1)/2,A=(y+1)/2,T=(h+d)/4,M=(u+m)/4,w=(p+g)/4;return _>v&&_>A?_<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(_),n=T/i,s=M/i):v>A?v<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(v),i=T/n,s=w/n):A<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(A),i=M/s,n=w/s),this.set(i,n,s,t),this}let x=Math.sqrt((g-p)*(g-p)+(u-m)*(u-m)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(g-p)/x,this.y=(u-m)/x,this.z=(d-h)/x,this.w=Math.acos((c+f+y-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},YS=class extends ys{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new gt(0,0,e,t),this.scissorTest=!1,this.viewport=new gt(0,0,e,t);const n={width:e,height:t,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ci,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const s=new xi(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);s.flipY=!1,s.generateMipmaps=i.generateMipmaps,s.internalFormat=i.internalFormat,this.textures=[];const r=i.count;for(let a=0;a<r;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,s=this.textures.length;n<s;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let i=0,n=e.textures.length;i<n;i++)this.textures[i]=e.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Ao(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},Dn=class extends YS{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}},Rf=class extends xi{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Ci,this.minFilter=Ci,this.wrapR=Nn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}};class V1 extends Dn{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new Rf(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class Iy extends xi{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Ci,this.minFilter=Ci,this.wrapR=Nn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class H1 extends Dn{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new Iy(null,e,t,i),this.texture.isRenderTargetTexture=!0}}let hi=class{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,s,r,a){let l=i[n+0],c=i[n+1],h=i[n+2],u=i[n+3];const d=s[r+0],f=s[r+1],p=s[r+2],m=s[r+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=m;return}if(u!==m||l!==d||c!==f||h!==p){let g=1-a;const y=l*d+c*f+h*p+u*m,x=y>=0?1:-1,_=1-y*y;if(_>Number.EPSILON){const A=Math.sqrt(_),T=Math.atan2(A,y*x);g=Math.sin(g*T)/A,a=Math.sin(a*T)/A}const v=a*x;if(l=l*g+d*v,c=c*g+f*v,h=h*g+p*v,u=u*g+m*v,g===1-a){const A=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=A,c*=A,h*=A,u*=A}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,n,s,r){const a=i[n],l=i[n+1],c=i[n+2],h=i[n+3],u=s[r],d=s[r+1],f=s[r+2],p=s[r+3];return e[t]=a*p+h*u+l*f-c*d,e[t+1]=l*p+h*d+c*u-a*f,e[t+2]=c*p+h*f+a*d-l*u,e[t+3]=h*p-a*u-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,s=e._z,r=e._order,a=Math.cos,l=Math.sin,c=a(i/2),h=a(n/2),u=a(s/2),d=l(i/2),f=l(n/2),p=l(s/2);switch(r){case"XYZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"YZX":this._x=d*h*u+c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u-d*f*p;break;case"XZY":this._x=d*h*u-c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],s=t[8],r=t[1],a=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=i+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(s-c)*f,this._z=(r-n)*f}else if(i>a&&i>u){const f=2*Math.sqrt(1+i-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(n+r)/f,this._z=(s+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-i-u);this._w=(s-c)/f,this._x=(n+r)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-i-a);this._w=(r-n)/f,this._x=(s+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Yt(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,s=e._z,r=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+r*a+n*c-s*l,this._y=n*h+r*l+s*a-i*c,this._z=s*h+r*c+i*l-n*a,this._w=r*h-i*a-n*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,s=this._z,r=this._w;let a=r*e._w+i*e._x+n*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=r,this._x=i,this._y=n,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*r+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=r*u+this._w*d,this._x=i*u+this._x*d,this._y=n*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},R=class ZS{constructor(e=0,t=0,i=0){ZS.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(m_.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(m_.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*n,this.y=s[1]*t+s[4]*i+s[7]*n,this.z=s[2]*t+s[5]*i+s[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=e.elements,r=1/(s[3]*t+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*n+s[12])*r,this.y=(s[1]*t+s[5]*i+s[9]*n+s[13])*r,this.z=(s[2]*t+s[6]*i+s[10]*n+s[14])*r,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,s=e.x,r=e.y,a=e.z,l=e.w,c=2*(r*n-a*i),h=2*(a*t-s*n),u=2*(s*i-r*t);return this.x=t+l*c+r*u-a*h,this.y=i+l*h+a*c-s*u,this.z=n+l*u+s*h-r*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n,this.y=s[1]*t+s[5]*i+s[9]*n,this.z=s[2]*t+s[6]*i+s[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,s=e.z,r=t.x,a=t.y,l=t.z;return this.x=n*l-s*a,this.y=s*r-i*l,this.z=i*a-n*r,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return xp.copy(this).projectOnVector(e),this.sub(xp)}reflect(e){return this.sub(xp.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Yt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const xp=new R,m_=new hi;let mi=class{constructor(e=new R(1/0,1/0,1/0),t=new R(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(Bn.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(Bn.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Bn.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let r=0,a=s.count;r<a;r++)e.isMesh===!0?e.getVertexPosition(r,Bn):Bn.fromBufferAttribute(s,r),Bn.applyMatrix4(e.matrixWorld),this.expandByPoint(Bn);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Mh.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Mh.copy(i.boundingBox)),Mh.applyMatrix4(e.matrixWorld),this.union(Mh)}const n=e.children;for(let s=0,r=n.length;s<r;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Bn),Bn.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Cl),Th.subVectors(this.max,Cl),ia.subVectors(e.a,Cl),na.subVectors(e.b,Cl),sa.subVectors(e.c,Cl),lr.subVectors(na,ia),cr.subVectors(sa,na),Yr.subVectors(ia,sa);let t=[0,-lr.z,lr.y,0,-cr.z,cr.y,0,-Yr.z,Yr.y,lr.z,0,-lr.x,cr.z,0,-cr.x,Yr.z,0,-Yr.x,-lr.y,lr.x,0,-cr.y,cr.x,0,-Yr.y,Yr.x,0];return!_p(t,ia,na,sa,Th)||(t=[1,0,0,0,1,0,0,0,1],!_p(t,ia,na,sa,Th))?!1:(wh.crossVectors(lr,cr),t=[wh.x,wh.y,wh.z],_p(t,ia,na,sa,Th))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Bn).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Bn).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Ss[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ss[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ss[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ss[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ss[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ss[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ss[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ss[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ss),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};const Ss=[new R,new R,new R,new R,new R,new R,new R,new R],Bn=new R,Mh=new mi,ia=new R,na=new R,sa=new R,lr=new R,cr=new R,Yr=new R,Cl=new R,Th=new R,wh=new R,Zr=new R;function _p(o,e,t,i,n){for(let s=0,r=o.length-3;s<=r;s+=3){Zr.fromArray(o,s);const a=n.x*Math.abs(Zr.x)+n.y*Math.abs(Zr.y)+n.z*Math.abs(Zr.z),l=e.dot(Zr),c=t.dot(Zr),h=i.dot(Zr);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const W1=new mi,Rl=new R,vp=new R;let gi=class{constructor(e=new R,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):W1.setFromPoints(e).getCenter(i);let n=0;for(let s=0,r=e.length;s<r;s++)n=Math.max(n,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Rl.subVectors(e,this.center);const t=Rl.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(Rl,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(vp.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Rl.copy(e.center).add(vp)),this.expandByPoint(Rl.copy(e.center).sub(vp))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};const Ms=new R,bp=new R,Ah=new R,hr=new R,Sp=new R,Eh=new R,Mp=new R;let qo=class{constructor(e=new R,t=new R(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ms)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ms.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ms.copy(this.origin).addScaledVector(this.direction,t),Ms.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){bp.copy(e).add(t).multiplyScalar(.5),Ah.copy(t).sub(e).normalize(),hr.copy(this.origin).sub(bp);const s=e.distanceTo(t)*.5,r=-this.direction.dot(Ah),a=hr.dot(this.direction),l=-hr.dot(Ah),c=hr.lengthSq(),h=Math.abs(1-r*r);let u,d,f,p;if(h>0)if(u=r*l-a,d=r*a-l,p=s*h,u>=0)if(d>=-p)if(d<=p){const m=1/h;u*=m,d*=m,f=u*(u+r*d+2*a)+d*(r*u+d+2*l)+c}else d=s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d=-s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-p?(u=Math.max(0,-(-r*s+a)),d=u>0?-s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c):d<=p?(u=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(u=Math.max(0,-(r*s+a)),d=u>0?s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c);else d=r>0?-s:s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,u),n&&n.copy(bp).addScaledVector(Ah,d),f}intersectSphere(e,t){Ms.subVectors(e.center,this.origin);const i=Ms.dot(this.direction),n=Ms.dot(Ms)-i*i,s=e.radius*e.radius;if(n>s)return null;const r=Math.sqrt(s-n),a=i-r,l=i+r;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,s,r,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(i=(e.min.x-d.x)*c,n=(e.max.x-d.x)*c):(i=(e.max.x-d.x)*c,n=(e.min.x-d.x)*c),h>=0?(s=(e.min.y-d.y)*h,r=(e.max.y-d.y)*h):(s=(e.max.y-d.y)*h,r=(e.min.y-d.y)*h),i>r||s>n||((s>i||isNaN(i))&&(i=s),(r<n||isNaN(n))&&(n=r),u>=0?(a=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,Ms)!==null}intersectTriangle(e,t,i,n,s){Sp.subVectors(t,e),Eh.subVectors(i,e),Mp.crossVectors(Sp,Eh);let r=this.direction.dot(Mp),a;if(r>0){if(n)return null;a=1}else if(r<0)a=-1,r=-r;else return null;hr.subVectors(this.origin,e);const l=a*this.direction.dot(Eh.crossVectors(hr,Eh));if(l<0)return null;const c=a*this.direction.dot(Sp.cross(hr));if(c<0||l+c>r)return null;const h=-a*hr.dot(Mp);return h<0?null:this.at(h/r,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},Ye=class Sg{constructor(e,t,i,n,s,r,a,l,c,h,u,d,f,p,m,g){Sg.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,r,a,l,c,h,u,d,f,p,m,g)}set(e,t,i,n,s,r,a,l,c,h,u,d,f,p,m,g){const y=this.elements;return y[0]=e,y[4]=t,y[8]=i,y[12]=n,y[1]=s,y[5]=r,y[9]=a,y[13]=l,y[2]=c,y[6]=h,y[10]=u,y[14]=d,y[3]=f,y[7]=p,y[11]=m,y[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Sg().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/ra.setFromMatrixColumn(e,0).length(),s=1/ra.setFromMatrixColumn(e,1).length(),r=1/ra.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*r,t[9]=i[9]*r,t[10]=i[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,s=e.z,r=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const d=r*h,f=r*u,p=a*h,m=a*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=f+p*c,t[5]=d-m*c,t[9]=-a*l,t[2]=m-d*c,t[6]=p+f*c,t[10]=r*l}else if(e.order==="YXZ"){const d=l*h,f=l*u,p=c*h,m=c*u;t[0]=d+m*a,t[4]=p*a-f,t[8]=r*c,t[1]=r*u,t[5]=r*h,t[9]=-a,t[2]=f*a-p,t[6]=m+d*a,t[10]=r*l}else if(e.order==="ZXY"){const d=l*h,f=l*u,p=c*h,m=c*u;t[0]=d-m*a,t[4]=-r*u,t[8]=p+f*a,t[1]=f+p*a,t[5]=r*h,t[9]=m-d*a,t[2]=-r*c,t[6]=a,t[10]=r*l}else if(e.order==="ZYX"){const d=r*h,f=r*u,p=a*h,m=a*u;t[0]=l*h,t[4]=p*c-f,t[8]=d*c+m,t[1]=l*u,t[5]=m*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=r*l}else if(e.order==="YZX"){const d=r*l,f=r*c,p=a*l,m=a*c;t[0]=l*h,t[4]=m-d*u,t[8]=p*u+f,t[1]=u,t[5]=r*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*u+p,t[10]=d-m*u}else if(e.order==="XZY"){const d=r*l,f=r*c,p=a*l,m=a*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+m,t[5]=r*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=a*h,t[10]=m*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose($1,e,X1)}lookAt(e,t,i){const n=this.elements;return pn.subVectors(e,t),pn.lengthSq()===0&&(pn.z=1),pn.normalize(),ur.crossVectors(i,pn),ur.lengthSq()===0&&(Math.abs(i.z)===1?pn.x+=1e-4:pn.z+=1e-4,pn.normalize(),ur.crossVectors(i,pn)),ur.normalize(),Ch.crossVectors(pn,ur),n[0]=ur.x,n[4]=Ch.x,n[8]=pn.x,n[1]=ur.y,n[5]=Ch.y,n[9]=pn.y,n[2]=ur.z,n[6]=Ch.z,n[10]=pn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,r=i[0],a=i[4],l=i[8],c=i[12],h=i[1],u=i[5],d=i[9],f=i[13],p=i[2],m=i[6],g=i[10],y=i[14],x=i[3],_=i[7],v=i[11],A=i[15],T=n[0],M=n[4],w=n[8],S=n[12],b=n[1],N=n[5],z=n[9],L=n[13],k=n[2],q=n[6],H=n[10],ae=n[14],X=n[3],le=n[7],ue=n[11],xe=n[15];return s[0]=r*T+a*b+l*k+c*X,s[4]=r*M+a*N+l*q+c*le,s[8]=r*w+a*z+l*H+c*ue,s[12]=r*S+a*L+l*ae+c*xe,s[1]=h*T+u*b+d*k+f*X,s[5]=h*M+u*N+d*q+f*le,s[9]=h*w+u*z+d*H+f*ue,s[13]=h*S+u*L+d*ae+f*xe,s[2]=p*T+m*b+g*k+y*X,s[6]=p*M+m*N+g*q+y*le,s[10]=p*w+m*z+g*H+y*ue,s[14]=p*S+m*L+g*ae+y*xe,s[3]=x*T+_*b+v*k+A*X,s[7]=x*M+_*N+v*q+A*le,s[11]=x*w+_*z+v*H+A*ue,s[15]=x*S+_*L+v*ae+A*xe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],s=e[12],r=e[1],a=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],m=e[7],g=e[11],y=e[15];return p*(+s*l*u-n*c*u-s*a*d+i*c*d+n*a*f-i*l*f)+m*(+t*l*f-t*c*d+s*r*d-n*r*f+n*c*h-s*l*h)+g*(+t*c*u-t*a*f-s*r*u+i*r*f+s*a*h-i*c*h)+y*(-n*a*h-t*l*u+t*a*d+n*r*u-i*r*d+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],m=e[13],g=e[14],y=e[15],x=u*g*c-m*d*c+m*l*f-a*g*f-u*l*y+a*d*y,_=p*d*c-h*g*c-p*l*f+r*g*f+h*l*y-r*d*y,v=h*m*c-p*u*c+p*a*f-r*m*f-h*a*y+r*u*y,A=p*u*l-h*m*l-p*a*d+r*m*d+h*a*g-r*u*g,T=t*x+i*_+n*v+s*A;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/T;return e[0]=x*M,e[1]=(m*d*s-u*g*s-m*n*f+i*g*f+u*n*y-i*d*y)*M,e[2]=(a*g*s-m*l*s+m*n*c-i*g*c-a*n*y+i*l*y)*M,e[3]=(u*l*s-a*d*s-u*n*c+i*d*c+a*n*f-i*l*f)*M,e[4]=_*M,e[5]=(h*g*s-p*d*s+p*n*f-t*g*f-h*n*y+t*d*y)*M,e[6]=(p*l*s-r*g*s-p*n*c+t*g*c+r*n*y-t*l*y)*M,e[7]=(r*d*s-h*l*s+h*n*c-t*d*c-r*n*f+t*l*f)*M,e[8]=v*M,e[9]=(p*u*s-h*m*s-p*i*f+t*m*f+h*i*y-t*u*y)*M,e[10]=(r*m*s-p*a*s+p*i*c-t*m*c-r*i*y+t*a*y)*M,e[11]=(h*a*s-r*u*s-h*i*c+t*u*c+r*i*f-t*a*f)*M,e[12]=A*M,e[13]=(h*m*n-p*u*n+p*i*d-t*m*d-h*i*g+t*u*g)*M,e[14]=(p*a*n-r*m*n-p*i*l+t*m*l+r*i*g-t*a*g)*M,e[15]=(r*u*n-h*a*n+h*i*l-t*u*l-r*i*d+t*a*d)*M,this}scale(e){const t=this.elements,i=e.x,n=e.y,s=e.z;return t[0]*=i,t[4]*=n,t[8]*=s,t[1]*=i,t[5]*=n,t[9]*=s,t[2]*=i,t[6]*=n,t[10]*=s,t[3]*=i,t[7]*=n,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),s=1-i,r=e.x,a=e.y,l=e.z,c=s*r,h=s*a;return this.set(c*r+i,c*a-n*l,c*l+n*a,0,c*a+n*l,h*a+i,h*l-n*r,0,c*l-n*a,h*l+n*r,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,s,r){return this.set(1,i,s,0,e,1,r,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,s=t._x,r=t._y,a=t._z,l=t._w,c=s+s,h=r+r,u=a+a,d=s*c,f=s*h,p=s*u,m=r*h,g=r*u,y=a*u,x=l*c,_=l*h,v=l*u,A=i.x,T=i.y,M=i.z;return n[0]=(1-(m+y))*A,n[1]=(f+v)*A,n[2]=(p-_)*A,n[3]=0,n[4]=(f-v)*T,n[5]=(1-(d+y))*T,n[6]=(g+x)*T,n[7]=0,n[8]=(p+_)*M,n[9]=(g-x)*M,n[10]=(1-(d+m))*M,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let s=ra.set(n[0],n[1],n[2]).length();const r=ra.set(n[4],n[5],n[6]).length(),a=ra.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),e.x=n[12],e.y=n[13],e.z=n[14],On.copy(this);const c=1/s,h=1/r,u=1/a;return On.elements[0]*=c,On.elements[1]*=c,On.elements[2]*=c,On.elements[4]*=h,On.elements[5]*=h,On.elements[6]*=h,On.elements[8]*=u,On.elements[9]*=u,On.elements[10]*=u,t.setFromRotationMatrix(On),i.x=s,i.y=r,i.z=a,this}makePerspective(e,t,i,n,s,r,a=as){const l=this.elements,c=2*s/(t-e),h=2*s/(i-n),u=(t+e)/(t-e),d=(i+n)/(i-n);let f,p;if(a===as)f=-(r+s)/(r-s),p=-2*r*s/(r-s);else if(a===Cc)f=-r/(r-s),p=-r*s/(r-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,s,r,a=as){const l=this.elements,c=1/(t-e),h=1/(i-n),u=1/(r-s),d=(t+e)*c,f=(i+n)*h;let p,m;if(a===as)p=(r+s)*u,m=-2*u;else if(a===Cc)p=s*u,m=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=m,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}};const ra=new R,On=new Ye,$1=new R(0,0,0),X1=new R(1,1,1),ur=new R,Ch=new R,pn=new R,g_=new Ye,y_=new hi;let Yn=class KS{constructor(e=0,t=0,i=0,n=KS.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,s=n[0],r=n[4],a=n[8],l=n[1],c=n[5],h=n[9],u=n[2],d=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(Yt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Yt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(Yt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-r,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Yt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-r,c));break;case"YZX":this._z=Math.asin(Yt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Yt(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return g_.makeRotationFromQuaternion(e),this.setFromRotationMatrix(g_,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return y_.setFromEuler(this),this.setFromQuaternion(y_,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};Yn.DEFAULT_ORDER="XYZ";let Nf=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},q1=0;const x_=new R,oa=new hi,Ts=new Ye,Rh=new R,Nl=new R,Y1=new R,Z1=new hi,__=new R(1,0,0),v_=new R(0,1,0),b_=new R(0,0,1),S_={type:"added"},K1={type:"removed"},aa={type:"childadded",child:null},Tp={type:"childremoved",child:null};let Nt=class nd extends ys{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:q1++}),this.uuid=Tn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=nd.DEFAULT_UP.clone();const e=new R,t=new Yn,i=new hi,n=new R(1,1,1);function s(){i.setFromEuler(t,!1)}function r(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Ye},normalMatrix:{value:new lt}}),this.matrix=new Ye,this.matrixWorld=new Ye,this.matrixAutoUpdate=nd.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=nd.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Nf,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return oa.setFromAxisAngle(e,t),this.quaternion.multiply(oa),this}rotateOnWorldAxis(e,t){return oa.setFromAxisAngle(e,t),this.quaternion.premultiply(oa),this}rotateX(e){return this.rotateOnAxis(__,e)}rotateY(e){return this.rotateOnAxis(v_,e)}rotateZ(e){return this.rotateOnAxis(b_,e)}translateOnAxis(e,t){return x_.copy(e).applyQuaternion(this.quaternion),this.position.add(x_.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(__,e)}translateY(e){return this.translateOnAxis(v_,e)}translateZ(e){return this.translateOnAxis(b_,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ts.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Rh.copy(e):Rh.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),Nl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ts.lookAt(Nl,Rh,this.up):Ts.lookAt(Rh,Nl,this.up),this.quaternion.setFromRotationMatrix(Ts),n&&(Ts.extractRotation(n.matrixWorld),oa.setFromRotationMatrix(Ts),this.quaternion.premultiply(oa.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(S_),aa.child=e,this.dispatchEvent(aa),aa.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(K1),Tp.child=e,this.dispatchEvent(Tp),Tp.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ts.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ts.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ts),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(S_),aa.child=e,this.dispatchEvent(aa),aa.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const r=this.children[i].getObjectByProperty(e,t);if(r!==void 0)return r}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let s=0,r=n.length;s<r;s++)n[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Nl,e,Y1),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Nl,Z1,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let s=0,r=n.length;s<r;s++)n[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];s(e.shapes,u)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));n.material=a}else n.material=s(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(s(e.animations,l))}}if(t){const a=r(e.geometries),l=r(e.materials),c=r(e.textures),h=r(e.images),u=r(e.shapes),d=r(e.skeletons),f=r(e.animations),p=r(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function r(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}};Nt.DEFAULT_UP=new R(0,1,0);Nt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Nt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const zn=new R,ws=new R,wp=new R,As=new R,la=new R,ca=new R,M_=new R,Ap=new R,Ep=new R,Cp=new R,Rp=new gt,Np=new gt,Pp=new gt;let Er=class Oa{constructor(e=new R,t=new R,i=new R){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),zn.subVectors(e,t),n.cross(zn);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(e,t,i,n,s){zn.subVectors(n,t),ws.subVectors(i,t),wp.subVectors(e,t);const r=zn.dot(zn),a=zn.dot(ws),l=zn.dot(wp),c=ws.dot(ws),h=ws.dot(wp),u=r*c-a*a;if(u===0)return s.set(0,0,0),null;const d=1/u,f=(c*l-a*h)*d,p=(r*h-a*l)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,As)===null?!1:As.x>=0&&As.y>=0&&As.x+As.y<=1}static getInterpolation(e,t,i,n,s,r,a,l){return this.getBarycoord(e,t,i,n,As)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,As.x),l.addScaledVector(r,As.y),l.addScaledVector(a,As.z),l)}static getInterpolatedAttribute(e,t,i,n,s,r){return Rp.setScalar(0),Np.setScalar(0),Pp.setScalar(0),Rp.fromBufferAttribute(e,t),Np.fromBufferAttribute(e,i),Pp.fromBufferAttribute(e,n),r.setScalar(0),r.addScaledVector(Rp,s.x),r.addScaledVector(Np,s.y),r.addScaledVector(Pp,s.z),r}static isFrontFacing(e,t,i,n){return zn.subVectors(i,t),ws.subVectors(e,t),zn.cross(ws).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return zn.subVectors(this.c,this.b),ws.subVectors(this.a,this.b),zn.cross(ws).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Oa.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Oa.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,s){return Oa.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}containsPoint(e){return Oa.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Oa.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,s=this.c;let r,a;la.subVectors(n,i),ca.subVectors(s,i),Ap.subVectors(e,i);const l=la.dot(Ap),c=ca.dot(Ap);if(l<=0&&c<=0)return t.copy(i);Ep.subVectors(e,n);const h=la.dot(Ep),u=ca.dot(Ep);if(h>=0&&u<=h)return t.copy(n);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return r=l/(l-h),t.copy(i).addScaledVector(la,r);Cp.subVectors(e,s);const f=la.dot(Cp),p=ca.dot(Cp);if(p>=0&&f<=p)return t.copy(s);const m=f*c-l*p;if(m<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(ca,a);const g=h*p-f*u;if(g<=0&&u-h>=0&&f-p>=0)return M_.subVectors(s,n),a=(u-h)/(u-h+(f-p)),t.copy(n).addScaledVector(M_,a);const y=1/(g+m+d);return r=m*y,a=d*y,t.copy(i).addScaledVector(la,r).addScaledVector(ca,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};const jS={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},dr={h:0,s:0,l:0},Nh={h:0,s:0,l:0};function Ip(o,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?o+(e-o)*6*t:t<1/2?e:t<2/3?o+(e-o)*6*(2/3-t):o}let Ce=class{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=sn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,yt.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=yt.workingColorSpace){return this.r=e,this.g=t,this.b=i,yt.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=yt.workingColorSpace){if(e=Py(e,1),t=Yt(t,0,1),i=Yt(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,r=2*i-s;this.r=Ip(r,s,e+1/3),this.g=Ip(r,s,e),this.b=Ip(r,s,e-1/3)}return yt.toWorkingColorSpace(this,n),this}setStyle(e,t=sn){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=n[1],r=s.length;if(r===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(r===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=sn){const i=jS[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ws(e.r),this.g=Ws(e.g),this.b=Ws(e.b),this}copyLinearToSRGB(e){return this.r=Ja(e.r),this.g=Ja(e.g),this.b=Ja(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=sn){return yt.fromWorkingColorSpace(Di.copy(this),e),Math.round(Yt(Di.r*255,0,255))*65536+Math.round(Yt(Di.g*255,0,255))*256+Math.round(Yt(Di.b*255,0,255))}getHexString(e=sn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=yt.workingColorSpace){yt.fromWorkingColorSpace(Di.copy(this),t);const i=Di.r,n=Di.g,s=Di.b,r=Math.max(i,n,s),a=Math.min(i,n,s);let l,c;const h=(a+r)/2;if(a===r)l=0,c=0;else{const u=r-a;switch(c=h<=.5?u/(r+a):u/(2-r-a),r){case i:l=(n-s)/u+(n<s?6:0);break;case n:l=(s-i)/u+2;break;case s:l=(i-n)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=yt.workingColorSpace){return yt.fromWorkingColorSpace(Di.copy(this),t),e.r=Di.r,e.g=Di.g,e.b=Di.b,e}getStyle(e=sn){yt.fromWorkingColorSpace(Di.copy(this),e);const t=Di.r,i=Di.g,n=Di.b;return e!==sn?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(dr),this.setHSL(dr.h+e,dr.s+t,dr.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(dr),e.getHSL(Nh);const i=uc(dr.h,Nh.h,t),n=uc(dr.s,Nh.s,t),s=uc(dr.l,Nh.l,t);return this.setHSL(i,n,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*n,this.g=s[1]*t+s[4]*i+s[7]*n,this.b=s[2]*t+s[5]*i+s[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const Di=new Ce;Ce.NAMES=jS;let j1=0,zi=class extends ys{static get type(){return"Material"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:j1++}),this.uuid=Tn(),this.name="",this.blending=Co,this.side=js,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=fd,this.blendDst=pd,this.blendEquation=Ar,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ce(0,0,0),this.blendAlpha=0,this.depthFunc=Fo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=vg,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=fo,this.stencilZFail=fo,this.stencilZPass=fo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Co&&(i.blending=this.blending),this.side!==js&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==fd&&(i.blendSrc=this.blendSrc),this.blendDst!==pd&&(i.blendDst=this.blendDst),this.blendEquation!==Ar&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Fo&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==vg&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==fo&&(i.stencilFail=this.stencilFail),this.stencilZFail!==fo&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==fo&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const r=[];for(const a in s){const l=s[a];delete l.metadata,r.push(l)}return r}if(t){const s=n(e.textures),r=n(e.images);s.length>0&&(i.textures=s),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}},Vr=class extends zi{static get type(){return"MeshBasicMaterial"}constructor(e){super(),this.isMeshBasicMaterial=!0,this.color=new Ce(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Yn,this.combine=jc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};const zs=J1();function J1(){const o=new ArrayBuffer(4),e=new Float32Array(o),t=new Uint32Array(o),i=new Uint32Array(512),n=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,n[l]=24,n[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,n[l]=-c-1,n[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,n[l]=13,n[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,n[l]=24,n[l|256]=24):(i[l]=31744,i[l|256]=64512,n[l]=13,n[l|256]=13)}const s=new Uint32Array(2048),r=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;!(c&8388608);)c<<=1,h-=8388608;c&=-8388609,h+=947912704,s[l]=c|h}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)r[l]=l<<23;r[31]=1199570944,r[32]=2147483648;for(let l=33;l<63;++l)r[l]=2147483648+(l-32<<23);r[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:n,mantissaTable:s,exponentTable:r,offsetTable:a}}function nn(o){Math.abs(o)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),o=Yt(o,-65504,65504),zs.floatView[0]=o;const e=zs.uint32View[0],t=e>>23&511;return zs.baseTable[t]+((e&8388607)>>zs.shiftTable[t])}function ec(o){const e=o>>10;return zs.uint32View[0]=zs.mantissaTable[zs.offsetTable[e]+(o&1023)]+zs.exponentTable[e],zs.floatView[0]}const Q1={toHalfFloat:nn,fromHalfFloat:ec},Qt=new R,Ph=new Z;let bt=class{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=Ec,this.updateRanges=[],this.gpuType=rn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)Ph.fromBufferAttribute(this,t),Ph.applyMatrix3(e),this.setXY(t,Ph.x,Ph.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Qt.fromBufferAttribute(this,t),Qt.applyMatrix3(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Qt.fromBufferAttribute(this,t),Qt.applyMatrix4(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Qt.fromBufferAttribute(this,t),Qt.applyNormalMatrix(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Qt.fromBufferAttribute(this,t),Qt.transformDirection(e),this.setXYZ(t,Qt.x,Qt.y,Qt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=$i(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=it(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=$i(t,this.array)),t}setX(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=$i(t,this.array)),t}setY(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=$i(t,this.array)),t}setZ(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=$i(t,this.array)),t}setW(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array),s=it(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ec&&(e.usage=this.usage),e}};class eE extends bt{constructor(e,t,i){super(new Int8Array(e),t,i)}}class tE extends bt{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class iE extends bt{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class nE extends bt{constructor(e,t,i){super(new Int16Array(e),t,i)}}let Dy=class extends bt{constructor(e,t,i){super(new Uint16Array(e),t,i)}};class sE extends bt{constructor(e,t,i){super(new Int32Array(e),t,i)}}let Ly=class extends bt{constructor(e,t,i){super(new Uint32Array(e),t,i)}},rE=class extends bt{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=ec(this.array[e*this.itemSize]);return this.normalized&&(t=$i(t,this.array)),t}setX(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize]=nn(t),this}getY(e){let t=ec(this.array[e*this.itemSize+1]);return this.normalized&&(t=$i(t,this.array)),t}setY(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+1]=nn(t),this}getZ(e){let t=ec(this.array[e*this.itemSize+2]);return this.normalized&&(t=$i(t,this.array)),t}setZ(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+2]=nn(t),this}getW(e){let t=ec(this.array[e*this.itemSize+3]);return this.normalized&&(t=$i(t,this.array)),t}setW(e,t){return this.normalized&&(t=it(t,this.array)),this.array[e*this.itemSize+3]=nn(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array)),this.array[e+0]=nn(t),this.array[e+1]=nn(i),this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array)),this.array[e+0]=nn(t),this.array[e+1]=nn(i),this.array[e+2]=nn(n),this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array),s=it(s,this.array)),this.array[e+0]=nn(t),this.array[e+1]=nn(i),this.array[e+2]=nn(n),this.array[e+3]=nn(s),this}},Ne=class extends bt{constructor(e,t,i){super(new Float32Array(e),t,i)}},oE=0;const En=new Ye,Dp=new Nt,ha=new R,mn=new mi,Pl=new mi,fi=new R;let ct=class JS extends ys{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:oE++}),this.uuid=Tn(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(WS(e)?Ly:Dy)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new lt().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return En.makeRotationFromQuaternion(e),this.applyMatrix4(En),this}rotateX(e){return En.makeRotationX(e),this.applyMatrix4(En),this}rotateY(e){return En.makeRotationY(e),this.applyMatrix4(En),this}rotateZ(e){return En.makeRotationZ(e),this.applyMatrix4(En),this}translate(e,t,i){return En.makeTranslation(e,t,i),this.applyMatrix4(En),this}scale(e,t,i){return En.makeScale(e,t,i),this.applyMatrix4(En),this}lookAt(e){return Dp.lookAt(e),Dp.updateMatrix(),this.applyMatrix4(Dp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ha).negate(),this.translate(ha.x,ha.y,ha.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let n=0,s=e.length;n<s;n++){const r=e[n];i.push(r.x,r.y,r.z||0)}this.setAttribute("position",new Ne(i,3))}else{for(let i=0,n=t.count;i<n;i++){const s=e[i];t.setXYZ(i,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new mi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new R(-1/0,-1/0,-1/0),new R(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const s=t[i];mn.setFromBufferAttribute(s),this.morphTargetsRelative?(fi.addVectors(this.boundingBox.min,mn.min),this.boundingBox.expandByPoint(fi),fi.addVectors(this.boundingBox.max,mn.max),this.boundingBox.expandByPoint(fi)):(this.boundingBox.expandByPoint(mn.min),this.boundingBox.expandByPoint(mn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new gi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new R,1/0);return}if(e){const i=this.boundingSphere.center;if(mn.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++){const a=t[s];Pl.setFromBufferAttribute(a),this.morphTargetsRelative?(fi.addVectors(mn.min,Pl.min),mn.expandByPoint(fi),fi.addVectors(mn.max,Pl.max),mn.expandByPoint(fi)):(mn.expandByPoint(Pl.min),mn.expandByPoint(Pl.max))}mn.getCenter(i);let n=0;for(let s=0,r=e.count;s<r;s++)fi.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(fi));if(t)for(let s=0,r=t.length;s<r;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)fi.fromBufferAttribute(a,c),l&&(ha.fromBufferAttribute(e,c),fi.add(ha)),n=Math.max(n,i.distanceToSquared(fi))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new bt(new Float32Array(4*i.count),4));const r=this.getAttribute("tangent"),a=[],l=[];for(let w=0;w<i.count;w++)a[w]=new R,l[w]=new R;const c=new R,h=new R,u=new R,d=new Z,f=new Z,p=new Z,m=new R,g=new R;function y(w,S,b){c.fromBufferAttribute(i,w),h.fromBufferAttribute(i,S),u.fromBufferAttribute(i,b),d.fromBufferAttribute(s,w),f.fromBufferAttribute(s,S),p.fromBufferAttribute(s,b),h.sub(c),u.sub(c),f.sub(d),p.sub(d);const N=1/(f.x*p.y-p.x*f.y);isFinite(N)&&(m.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(N),g.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(N),a[w].add(m),a[S].add(m),a[b].add(m),l[w].add(g),l[S].add(g),l[b].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let w=0,S=x.length;w<S;++w){const b=x[w],N=b.start,z=b.count;for(let L=N,k=N+z;L<k;L+=3)y(e.getX(L+0),e.getX(L+1),e.getX(L+2))}const _=new R,v=new R,A=new R,T=new R;function M(w){A.fromBufferAttribute(n,w),T.copy(A);const S=a[w];_.copy(S),_.sub(A.multiplyScalar(A.dot(S))).normalize(),v.crossVectors(T,S);const N=v.dot(l[w])<0?-1:1;r.setXYZW(w,_.x,_.y,_.z,N)}for(let w=0,S=x.length;w<S;++w){const b=x[w],N=b.start,z=b.count;for(let L=N,k=N+z;L<k;L+=3)M(e.getX(L+0)),M(e.getX(L+1)),M(e.getX(L+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new bt(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new R,s=new R,r=new R,a=new R,l=new R,c=new R,h=new R,u=new R;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),m=e.getX(d+1),g=e.getX(d+2);n.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),r.fromBufferAttribute(t,g),h.subVectors(r,s),u.subVectors(n,s),h.cross(u),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),c.fromBufferAttribute(i,g),a.add(h),l.add(h),c.add(h),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(m,l.x,l.y,l.z),i.setXYZ(g,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)n.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),r.fromBufferAttribute(t,d+2),h.subVectors(r,s),u.subVectors(n,s),h.cross(u),i.setXYZ(d+0,h.x,h.y,h.z),i.setXYZ(d+1,h.x,h.y,h.z),i.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)fi.fromBufferAttribute(e,t),fi.normalize(),e.setXYZ(t,fi.x,fi.y,fi.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,p=0;for(let m=0,g=l.length;m<g;m++){a.isInterleavedBufferAttribute?f=l[m]*a.data.stride+a.offset:f=l[m]*h;for(let y=0;y<h;y++)d[p++]=c[f++]}return new bt(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new JS,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=e(d,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,l=r.length;a<l;a++){const c=r[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(e.data))}h.length>0&&(n[l]=h,s=!0)}s&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const s=e.morphAttributes;for(const c in s){const h=[],u=s[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let c=0,h=r.length;c<h;c++){const u=r[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const T_=new Ye,Kr=new qo,Ih=new gi,w_=new R,Dh=new R,Lh=new R,Fh=new R,Lp=new R,Uh=new R,A_=new R,Bh=new R;let Kt=class extends Nt{constructor(e=new ct,t=new Vr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=n.length;s<r;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,r=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(s&&a){Uh.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const h=a[l],u=s[l];h!==0&&(Lp.fromBufferAttribute(u,e),r?Uh.addScaledVector(Lp,h):Uh.addScaledVector(Lp.sub(t),h))}t.add(Uh)}return t}raycast(e,t){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Ih.copy(i.boundingSphere),Ih.applyMatrix4(s),Kr.copy(e.ray).recast(e.near),!(Ih.containsPoint(Kr.origin)===!1&&(Kr.intersectSphere(Ih,w_)===null||Kr.origin.distanceToSquared(w_)>(e.far-e.near)**2))&&(T_.copy(s).invert(),Kr.copy(e.ray).applyMatrix4(T_),!(i.boundingBox!==null&&Kr.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,Kr)))}_computeIntersections(e,t,i){let n;const s=this.geometry,r=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,h=s.attributes.uv1,u=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const g=d[p],y=r[g.materialIndex],x=Math.max(g.start,f.start),_=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let v=x,A=_;v<A;v+=3){const T=a.getX(v),M=a.getX(v+1),w=a.getX(v+2);n=Oh(this,y,e,i,c,h,u,T,M,w),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),m=Math.min(a.count,f.start+f.count);for(let g=p,y=m;g<y;g+=3){const x=a.getX(g),_=a.getX(g+1),v=a.getX(g+2);n=Oh(this,r,e,i,c,h,u,x,_,v),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const g=d[p],y=r[g.materialIndex],x=Math.max(g.start,f.start),_=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let v=x,A=_;v<A;v+=3){const T=v,M=v+1,w=v+2;n=Oh(this,y,e,i,c,h,u,T,M,w),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),m=Math.min(l.count,f.start+f.count);for(let g=p,y=m;g<y;g+=3){const x=g,_=g+1,v=g+2;n=Oh(this,r,e,i,c,h,u,x,_,v),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}}};function aE(o,e,t,i,n,s,r,a){let l;if(e.side===Yi?l=i.intersectTriangle(r,s,n,!0,a):l=i.intersectTriangle(n,s,r,e.side===js,a),l===null)return null;Bh.copy(a),Bh.applyMatrix4(o.matrixWorld);const c=t.ray.origin.distanceTo(Bh);return c<t.near||c>t.far?null:{distance:c,point:Bh.clone(),object:o}}function Oh(o,e,t,i,n,s,r,a,l,c){o.getVertexPosition(a,Dh),o.getVertexPosition(l,Lh),o.getVertexPosition(c,Fh);const h=aE(o,e,t,i,Dh,Lh,Fh,A_);if(h){const u=new R;Er.getBarycoord(A_,Dh,Lh,Fh,u),n&&(h.uv=Er.getInterpolatedAttribute(n,a,l,c,u,new Z)),s&&(h.uv1=Er.getInterpolatedAttribute(s,a,l,c,u,new Z)),r&&(h.normal=Er.getInterpolatedAttribute(r,a,l,c,u,new R),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new R,materialIndex:0};Er.getNormal(Dh,Lh,Fh,d.normal),h.face=d,h.barycoord=u}return h}let eh=class QS extends ct{constructor(e=1,t=1,i=1,n=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:s,depthSegments:r};const a=this;n=Math.floor(n),s=Math.floor(s),r=Math.floor(r);const l=[],c=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,i,t,e,r,s,0),p("z","y","x",1,-1,i,t,-e,r,s,1),p("x","z","y",1,1,e,i,t,n,r,2),p("x","z","y",1,-1,e,i,-t,n,r,3),p("x","y","z",1,-1,e,t,i,n,s,4),p("x","y","z",-1,-1,e,t,-i,n,s,5),this.setIndex(l),this.setAttribute("position",new Ne(c,3)),this.setAttribute("normal",new Ne(h,3)),this.setAttribute("uv",new Ne(u,2));function p(m,g,y,x,_,v,A,T,M,w,S){const b=v/M,N=A/w,z=v/2,L=A/2,k=T/2,q=M+1,H=w+1;let ae=0,X=0;const le=new R;for(let ue=0;ue<H;ue++){const xe=ue*N-L;for(let $e=0;$e<q;$e++){const tt=$e*b-z;le[m]=tt*x,le[g]=xe*_,le[y]=k,c.push(le.x,le.y,le.z),le[m]=0,le[g]=0,le[y]=T>0?1:-1,h.push(le.x,le.y,le.z),u.push($e/M),u.push(1-ue/w),ae+=1}}for(let ue=0;ue<w;ue++)for(let xe=0;xe<M;xe++){const $e=d+xe+q*ue,tt=d+xe+q*(ue+1),J=d+(xe+1)+q*(ue+1),ce=d+(xe+1)+q*ue;l.push($e,tt,ce),l.push(tt,J,ce),X+=6}a.addGroup(f,X,S),f+=X,d+=ae}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new QS(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function ll(o){const e={};for(const t in o){e[t]={};for(const i in o[t]){const n=o[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function Vi(o){const e={};for(let t=0;t<o.length;t++){const i=ll(o[t]);for(const n in i)e[n]=i[n]}return e}function lE(o){const e=[];for(let t=0;t<o.length;t++)e.push(o[t].clone());return e}function eM(o){const e=o.getRenderTarget();return e===null?o.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:yt.workingColorSpace}const th={clone:ll,merge:Vi};var cE=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,hE=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let cn=class extends zi{static get type(){return"ShaderMaterial"}constructor(e){super(),this.isShaderMaterial=!0,this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=cE,this.fragmentShader=hE,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ll(e.uniforms),this.uniformsGroups=lE(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}},Pf=class extends Nt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ye,this.projectionMatrix=new Ye,this.projectionMatrixInverse=new Ye,this.coordinateSystem=as}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const fr=new R,E_=new Z,C_=new Z;let wi=class extends Pf{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=al*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(No*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return al*2*Math.atan(Math.tan(No*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){fr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(fr.x,fr.y).multiplyScalar(-e/fr.z),fr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(fr.x,fr.y).multiplyScalar(-e/fr.z)}getViewSize(e,t){return this.getViewBounds(e,E_,C_),t.subVectors(C_,E_)}setViewOffset(e,t,i,n,s,r){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(No*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,s=-.5*n;const r=this.view;if(this.view!==null&&this.view.enabled){const l=r.fullWidth,c=r.fullHeight;s+=r.offsetX*n/l,t-=r.offsetY*i/c,n*=r.width/l,i*=r.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};const ua=-90,da=1;let tM=class extends Nt{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new wi(ua,da,e,t);n.layers=this.layers,this.add(n);const s=new wi(ua,da,e,t);s.layers=this.layers,this.add(s);const r=new wi(ua,da,e,t);r.layers=this.layers,this.add(r);const a=new wi(ua,da,e,t);a.layers=this.layers,this.add(a);const l=new wi(ua,da,e,t);l.layers=this.layers,this.add(l);const c=new wi(ua,da,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,s,r,a,l]=t;for(const c of t)this.remove(c);if(e===as)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Cc)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,r,a,l,c,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const m=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,s),e.setRenderTarget(i,1,n),e.render(t,r),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=m,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}},ih=class extends xi{constructor(e,t,i,n,s,r,a,l,c,h){e=e!==void 0?e:[],t=t!==void 0?t:Js,super(e,t,i,n,s,r,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},iM=class extends Dn{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new ih(n,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:ci}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new eh(5,5,5),s=new cn({name:"CubemapFromEquirect",uniforms:ll(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Yi,blending:hs});s.uniforms.tEquirect.value=t;const r=new Kt(n,s),a=t.minFilter;return t.minFilter===os&&(t.minFilter=ci),new tM(1,10,this).update(e,r),t.minFilter=a,r.geometry.dispose(),r.material.dispose(),this}clear(e,t,i,n){const s=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,i,n);e.setRenderTarget(s)}};const Fp=new R,uE=new R,dE=new lt;let Fs=class{constructor(e=new R(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=Fp.subVectors(i,t).cross(uE.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Fp),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||dE.getNormalMatrix(e),n=this.coplanarPoint(Fp).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};const jr=new gi,zh=new R;let nh=class{constructor(e=new Fs,t=new Fs,i=new Fs,n=new Fs,s=new Fs,r=new Fs){this.planes=[e,t,i,n,s,r]}set(e,t,i,n,s,r){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(s),a[5].copy(r),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=as){const i=this.planes,n=e.elements,s=n[0],r=n[1],a=n[2],l=n[3],c=n[4],h=n[5],u=n[6],d=n[7],f=n[8],p=n[9],m=n[10],g=n[11],y=n[12],x=n[13],_=n[14],v=n[15];if(i[0].setComponents(l-s,d-c,g-f,v-y).normalize(),i[1].setComponents(l+s,d+c,g+f,v+y).normalize(),i[2].setComponents(l+r,d+h,g+p,v+x).normalize(),i[3].setComponents(l-r,d-h,g-p,v-x).normalize(),i[4].setComponents(l-a,d-u,g-m,v-_).normalize(),t===as)i[5].setComponents(l+a,d+u,g+m,v+_).normalize();else if(t===Cc)i[5].setComponents(a,u,m,_).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),jr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),jr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(jr)}intersectsSprite(e){return jr.center.set(0,0,0),jr.radius=.7071067811865476,jr.applyMatrix4(e.matrixWorld),this.intersectsSphere(jr)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(zh.x=n.normal.x>0?e.max.x:e.min.x,zh.y=n.normal.y>0?e.max.y:e.min.y,zh.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(zh)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function nM(){let o=null,e=!1,t=null,i=null;function n(s,r){t(s,r),i=o.requestAnimationFrame(n)}return{start:function(){e!==!0&&t!==null&&(i=o.requestAnimationFrame(n),e=!0)},stop:function(){o.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){o=s}}}function fE(o){const e=new WeakMap;function t(a,l){const c=a.array,h=a.usage,u=c.byteLength,d=o.createBuffer();o.bindBuffer(l,d),o.bufferData(l,c,h),a.onUploadCallback();let f;if(c instanceof Float32Array)f=o.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=o.HALF_FLOAT:f=o.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=o.SHORT;else if(c instanceof Uint32Array)f=o.UNSIGNED_INT;else if(c instanceof Int32Array)f=o.INT;else if(c instanceof Int8Array)f=o.BYTE;else if(c instanceof Uint8Array)f=o.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=o.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:u}}function i(a,l,c){const h=l.array,u=l.updateRanges;if(o.bindBuffer(c,a),u.length===0)o.bufferSubData(c,0,h);else{u.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<u.length;f++){const p=u[d],m=u[f];m.start<=p.start+p.count+1?p.count=Math.max(p.count,m.start+m.count-p.start):(++d,u[d]=m)}u.length=d+1;for(let f=0,p=u.length;f<p;f++){const m=u[f];o.bufferSubData(c,m.start*h.BYTES_PER_ELEMENT,h,m.start,m.count)}l.clearUpdateRanges()}l.onUploadCallback()}function n(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(o.deleteBuffer(l.buffer),e.delete(a))}function r(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,a,l),c.version=a.version}}return{get:n,remove:s,update:r}}class yl extends ct{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const s=e/2,r=t/2,a=Math.floor(i),l=Math.floor(n),c=a+1,h=l+1,u=e/a,d=t/l,f=[],p=[],m=[],g=[];for(let y=0;y<h;y++){const x=y*d-r;for(let _=0;_<c;_++){const v=_*u-s;p.push(v,-x,0),m.push(0,0,1),g.push(_/a),g.push(1-y/l)}}for(let y=0;y<l;y++)for(let x=0;x<a;x++){const _=x+c*y,v=x+c*(y+1),A=x+1+c*(y+1),T=x+1+c*y;f.push(_,v,T),f.push(v,A,T)}this.setIndex(f),this.setAttribute("position",new Ne(p,3)),this.setAttribute("normal",new Ne(m,3)),this.setAttribute("uv",new Ne(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new yl(e.width,e.height,e.widthSegments,e.heightSegments)}}var pE=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,mE=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,gE=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,yE=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,xE=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,_E=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,vE=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,bE=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,SE=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,ME=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,TE=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,wE=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,AE=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,EE=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,CE=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,RE=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,NE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,PE=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,IE=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,DE=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,LE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,FE=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,UE=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,BE=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,OE=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,zE=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,kE=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,GE=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,VE=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,HE=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,WE="gl_FragColor = linearToOutputTexel( gl_FragColor );",$E=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,XE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,qE=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,YE=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,ZE=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,KE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,jE=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,JE=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,QE=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,eC=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,tC=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,iC=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,nC=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,sC=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,rC=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,oC=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,aC=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,lC=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,cC=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,hC=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,uC=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,dC=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,fC=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,pC=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,mC=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,gC=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,yC=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,xC=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,_C=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,vC=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,bC=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,SC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,MC=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,TC=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,wC=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,AC=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,EC=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,CC=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,RC=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,NC=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,PC=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,IC=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,DC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,LC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,FC=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,UC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,BC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,OC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,zC=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,kC=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,GC=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,VC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,HC=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,WC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,$C=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,XC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,qC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,YC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,ZC=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,KC=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,jC=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,JC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,QC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,eR=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,tR=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,iR=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,nR=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,sR=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,rR=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,oR=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,aR=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,lR=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,cR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,hR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,uR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,dR=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const fR=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,pR=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,mR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,gR=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,yR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,xR=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,_R=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,vR=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,bR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,SR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,MR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,TR=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,wR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,AR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,ER=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,CR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,RR=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,NR=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,PR=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,IR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,DR=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,LR=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,FR=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,UR=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,BR=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,OR=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zR=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,kR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,GR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,VR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,HR=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,WR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,$R=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,XR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,at={alphahash_fragment:pE,alphahash_pars_fragment:mE,alphamap_fragment:gE,alphamap_pars_fragment:yE,alphatest_fragment:xE,alphatest_pars_fragment:_E,aomap_fragment:vE,aomap_pars_fragment:bE,batching_pars_vertex:SE,batching_vertex:ME,begin_vertex:TE,beginnormal_vertex:wE,bsdfs:AE,iridescence_fragment:EE,bumpmap_pars_fragment:CE,clipping_planes_fragment:RE,clipping_planes_pars_fragment:NE,clipping_planes_pars_vertex:PE,clipping_planes_vertex:IE,color_fragment:DE,color_pars_fragment:LE,color_pars_vertex:FE,color_vertex:UE,common:BE,cube_uv_reflection_fragment:OE,defaultnormal_vertex:zE,displacementmap_pars_vertex:kE,displacementmap_vertex:GE,emissivemap_fragment:VE,emissivemap_pars_fragment:HE,colorspace_fragment:WE,colorspace_pars_fragment:$E,envmap_fragment:XE,envmap_common_pars_fragment:qE,envmap_pars_fragment:YE,envmap_pars_vertex:ZE,envmap_physical_pars_fragment:oC,envmap_vertex:KE,fog_vertex:jE,fog_pars_vertex:JE,fog_fragment:QE,fog_pars_fragment:eC,gradientmap_pars_fragment:tC,lightmap_pars_fragment:iC,lights_lambert_fragment:nC,lights_lambert_pars_fragment:sC,lights_pars_begin:rC,lights_toon_fragment:aC,lights_toon_pars_fragment:lC,lights_phong_fragment:cC,lights_phong_pars_fragment:hC,lights_physical_fragment:uC,lights_physical_pars_fragment:dC,lights_fragment_begin:fC,lights_fragment_maps:pC,lights_fragment_end:mC,logdepthbuf_fragment:gC,logdepthbuf_pars_fragment:yC,logdepthbuf_pars_vertex:xC,logdepthbuf_vertex:_C,map_fragment:vC,map_pars_fragment:bC,map_particle_fragment:SC,map_particle_pars_fragment:MC,metalnessmap_fragment:TC,metalnessmap_pars_fragment:wC,morphinstance_vertex:AC,morphcolor_vertex:EC,morphnormal_vertex:CC,morphtarget_pars_vertex:RC,morphtarget_vertex:NC,normal_fragment_begin:PC,normal_fragment_maps:IC,normal_pars_fragment:DC,normal_pars_vertex:LC,normal_vertex:FC,normalmap_pars_fragment:UC,clearcoat_normal_fragment_begin:BC,clearcoat_normal_fragment_maps:OC,clearcoat_pars_fragment:zC,iridescence_pars_fragment:kC,opaque_fragment:GC,packing:VC,premultiplied_alpha_fragment:HC,project_vertex:WC,dithering_fragment:$C,dithering_pars_fragment:XC,roughnessmap_fragment:qC,roughnessmap_pars_fragment:YC,shadowmap_pars_fragment:ZC,shadowmap_pars_vertex:KC,shadowmap_vertex:jC,shadowmask_pars_fragment:JC,skinbase_vertex:QC,skinning_pars_vertex:eR,skinning_vertex:tR,skinnormal_vertex:iR,specularmap_fragment:nR,specularmap_pars_fragment:sR,tonemapping_fragment:rR,tonemapping_pars_fragment:oR,transmission_fragment:aR,transmission_pars_fragment:lR,uv_pars_fragment:cR,uv_pars_vertex:hR,uv_vertex:uR,worldpos_vertex:dR,background_vert:fR,background_frag:pR,backgroundCube_vert:mR,backgroundCube_frag:gR,cube_vert:yR,cube_frag:xR,depth_vert:_R,depth_frag:vR,distanceRGBA_vert:bR,distanceRGBA_frag:SR,equirect_vert:MR,equirect_frag:TR,linedashed_vert:wR,linedashed_frag:AR,meshbasic_vert:ER,meshbasic_frag:CR,meshlambert_vert:RR,meshlambert_frag:NR,meshmatcap_vert:PR,meshmatcap_frag:IR,meshnormal_vert:DR,meshnormal_frag:LR,meshphong_vert:FR,meshphong_frag:UR,meshphysical_vert:BR,meshphysical_frag:OR,meshtoon_vert:zR,meshtoon_frag:kR,points_vert:GR,points_frag:VR,shadow_vert:HR,shadow_frag:WR,sprite_vert:$R,sprite_frag:XR},_e={common:{diffuse:{value:new Ce(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new lt},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new lt}},envmap:{envMap:{value:null},envMapRotation:{value:new lt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new lt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new lt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new lt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new lt},normalScale:{value:new Z(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new lt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new lt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new lt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new lt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ce(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ce(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0},uvTransform:{value:new lt}},sprite:{diffuse:{value:new Ce(16777215)},opacity:{value:1},center:{value:new Z(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new lt},alphaMap:{value:null},alphaMapTransform:{value:new lt},alphaTest:{value:0}}},Hi={basic:{uniforms:Vi([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.fog]),vertexShader:at.meshbasic_vert,fragmentShader:at.meshbasic_frag},lambert:{uniforms:Vi([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,_e.lights,{emissive:{value:new Ce(0)}}]),vertexShader:at.meshlambert_vert,fragmentShader:at.meshlambert_frag},phong:{uniforms:Vi([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,_e.lights,{emissive:{value:new Ce(0)},specular:{value:new Ce(1118481)},shininess:{value:30}}]),vertexShader:at.meshphong_vert,fragmentShader:at.meshphong_frag},standard:{uniforms:Vi([_e.common,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.roughnessmap,_e.metalnessmap,_e.fog,_e.lights,{emissive:{value:new Ce(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:at.meshphysical_vert,fragmentShader:at.meshphysical_frag},toon:{uniforms:Vi([_e.common,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.gradientmap,_e.fog,_e.lights,{emissive:{value:new Ce(0)}}]),vertexShader:at.meshtoon_vert,fragmentShader:at.meshtoon_frag},matcap:{uniforms:Vi([_e.common,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,{matcap:{value:null}}]),vertexShader:at.meshmatcap_vert,fragmentShader:at.meshmatcap_frag},points:{uniforms:Vi([_e.points,_e.fog]),vertexShader:at.points_vert,fragmentShader:at.points_frag},dashed:{uniforms:Vi([_e.common,_e.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:at.linedashed_vert,fragmentShader:at.linedashed_frag},depth:{uniforms:Vi([_e.common,_e.displacementmap]),vertexShader:at.depth_vert,fragmentShader:at.depth_frag},normal:{uniforms:Vi([_e.common,_e.bumpmap,_e.normalmap,_e.displacementmap,{opacity:{value:1}}]),vertexShader:at.meshnormal_vert,fragmentShader:at.meshnormal_frag},sprite:{uniforms:Vi([_e.sprite,_e.fog]),vertexShader:at.sprite_vert,fragmentShader:at.sprite_frag},background:{uniforms:{uvTransform:{value:new lt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:at.background_vert,fragmentShader:at.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new lt}},vertexShader:at.backgroundCube_vert,fragmentShader:at.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:at.cube_vert,fragmentShader:at.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:at.equirect_vert,fragmentShader:at.equirect_frag},distanceRGBA:{uniforms:Vi([_e.common,_e.displacementmap,{referencePosition:{value:new R},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:at.distanceRGBA_vert,fragmentShader:at.distanceRGBA_frag},shadow:{uniforms:Vi([_e.lights,_e.fog,{color:{value:new Ce(0)},opacity:{value:1}}]),vertexShader:at.shadow_vert,fragmentShader:at.shadow_frag}};Hi.physical={uniforms:Vi([Hi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new lt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new lt},clearcoatNormalScale:{value:new Z(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new lt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new lt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new lt},sheen:{value:0},sheenColor:{value:new Ce(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new lt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new lt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new lt},transmissionSamplerSize:{value:new Z},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new lt},attenuationDistance:{value:0},attenuationColor:{value:new Ce(0)},specularColor:{value:new Ce(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new lt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new lt},anisotropyVector:{value:new Z},anisotropyMap:{value:null},anisotropyMapTransform:{value:new lt}}]),vertexShader:at.meshphysical_vert,fragmentShader:at.meshphysical_frag};const kh={r:0,b:0,g:0},Jr=new Yn,qR=new Ye;function YR(o,e,t,i,n,s,r){const a=new Ce(0);let l=s===!0?0:1,c,h,u=null,d=0,f=null;function p(x){let _=x.isScene===!0?x.background:null;return _&&_.isTexture&&(_=(x.backgroundBlurriness>0?t:e).get(_)),_}function m(x){let _=!1;const v=p(x);v===null?y(a,l):v&&v.isColor&&(y(v,1),_=!0);const A=o.xr.getEnvironmentBlendMode();A==="additive"?i.buffers.color.setClear(0,0,0,1,r):A==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,r),(o.autoClear||_)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),o.clear(o.autoClearColor,o.autoClearDepth,o.autoClearStencil))}function g(x,_){const v=p(_);v&&(v.isCubeTexture||v.mapping===gl)?(h===void 0&&(h=new Kt(new eh(1,1,1),new cn({name:"BackgroundCubeMaterial",uniforms:ll(Hi.backgroundCube.uniforms),vertexShader:Hi.backgroundCube.vertexShader,fragmentShader:Hi.backgroundCube.fragmentShader,side:Yi,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(A,T,M){this.matrixWorld.copyPosition(M.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),Jr.copy(_.backgroundRotation),Jr.x*=-1,Jr.y*=-1,Jr.z*=-1,v.isCubeTexture&&v.isRenderTargetTexture===!1&&(Jr.y*=-1,Jr.z*=-1),h.material.uniforms.envMap.value=v,h.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(qR.makeRotationFromEuler(Jr)),h.material.toneMapped=yt.getTransfer(v.colorSpace)!==Dt,(u!==v||d!==v.version||f!==o.toneMapping)&&(h.material.needsUpdate=!0,u=v,d=v.version,f=o.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null)):v&&v.isTexture&&(c===void 0&&(c=new Kt(new yl(2,2),new cn({name:"BackgroundMaterial",uniforms:ll(Hi.background.uniforms),vertexShader:Hi.background.vertexShader,fragmentShader:Hi.background.fragmentShader,side:js,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=v,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=yt.getTransfer(v.colorSpace)!==Dt,v.matrixAutoUpdate===!0&&v.updateMatrix(),c.material.uniforms.uvTransform.value.copy(v.matrix),(u!==v||d!==v.version||f!==o.toneMapping)&&(c.material.needsUpdate=!0,u=v,d=v.version,f=o.toneMapping),c.layers.enableAll(),x.unshift(c,c.geometry,c.material,0,0,null))}function y(x,_){x.getRGB(kh,eM(o)),i.buffers.color.setClear(kh.r,kh.g,kh.b,_,r)}return{getClearColor:function(){return a},setClearColor:function(x,_=1){a.set(x),l=_,y(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(x){l=x,y(a,l)},render:m,addToRenderList:g}}function ZR(o,e){const t=o.getParameter(o.MAX_VERTEX_ATTRIBS),i={},n=d(null);let s=n,r=!1;function a(b,N,z,L,k){let q=!1;const H=u(L,z,N);s!==H&&(s=H,c(s.object)),q=f(b,L,z,k),q&&p(b,L,z,k),k!==null&&e.update(k,o.ELEMENT_ARRAY_BUFFER),(q||r)&&(r=!1,v(b,N,z,L),k!==null&&o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,e.get(k).buffer))}function l(){return o.createVertexArray()}function c(b){return o.bindVertexArray(b)}function h(b){return o.deleteVertexArray(b)}function u(b,N,z){const L=z.wireframe===!0;let k=i[b.id];k===void 0&&(k={},i[b.id]=k);let q=k[N.id];q===void 0&&(q={},k[N.id]=q);let H=q[L];return H===void 0&&(H=d(l()),q[L]=H),H}function d(b){const N=[],z=[],L=[];for(let k=0;k<t;k++)N[k]=0,z[k]=0,L[k]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:N,enabledAttributes:z,attributeDivisors:L,object:b,attributes:{},index:null}}function f(b,N,z,L){const k=s.attributes,q=N.attributes;let H=0;const ae=z.getAttributes();for(const X in ae)if(ae[X].location>=0){const ue=k[X];let xe=q[X];if(xe===void 0&&(X==="instanceMatrix"&&b.instanceMatrix&&(xe=b.instanceMatrix),X==="instanceColor"&&b.instanceColor&&(xe=b.instanceColor)),ue===void 0||ue.attribute!==xe||xe&&ue.data!==xe.data)return!0;H++}return s.attributesNum!==H||s.index!==L}function p(b,N,z,L){const k={},q=N.attributes;let H=0;const ae=z.getAttributes();for(const X in ae)if(ae[X].location>=0){let ue=q[X];ue===void 0&&(X==="instanceMatrix"&&b.instanceMatrix&&(ue=b.instanceMatrix),X==="instanceColor"&&b.instanceColor&&(ue=b.instanceColor));const xe={};xe.attribute=ue,ue&&ue.data&&(xe.data=ue.data),k[X]=xe,H++}s.attributes=k,s.attributesNum=H,s.index=L}function m(){const b=s.newAttributes;for(let N=0,z=b.length;N<z;N++)b[N]=0}function g(b){y(b,0)}function y(b,N){const z=s.newAttributes,L=s.enabledAttributes,k=s.attributeDivisors;z[b]=1,L[b]===0&&(o.enableVertexAttribArray(b),L[b]=1),k[b]!==N&&(o.vertexAttribDivisor(b,N),k[b]=N)}function x(){const b=s.newAttributes,N=s.enabledAttributes;for(let z=0,L=N.length;z<L;z++)N[z]!==b[z]&&(o.disableVertexAttribArray(z),N[z]=0)}function _(b,N,z,L,k,q,H){H===!0?o.vertexAttribIPointer(b,N,z,k,q):o.vertexAttribPointer(b,N,z,L,k,q)}function v(b,N,z,L){m();const k=L.attributes,q=z.getAttributes(),H=N.defaultAttributeValues;for(const ae in q){const X=q[ae];if(X.location>=0){let le=k[ae];if(le===void 0&&(ae==="instanceMatrix"&&b.instanceMatrix&&(le=b.instanceMatrix),ae==="instanceColor"&&b.instanceColor&&(le=b.instanceColor)),le!==void 0){const ue=le.normalized,xe=le.itemSize,$e=e.get(le);if($e===void 0)continue;const tt=$e.buffer,J=$e.type,ce=$e.bytesPerElement,we=J===o.INT||J===o.UNSIGNED_INT||le.gpuType===Sf;if(le.isInterleavedBufferAttribute){const ye=le.data,ke=ye.stride,Ze=le.offset;if(ye.isInstancedInterleavedBuffer){for(let He=0;He<X.locationSize;He++)y(X.location+He,ye.meshPerAttribute);b.isInstancedMesh!==!0&&L._maxInstanceCount===void 0&&(L._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let He=0;He<X.locationSize;He++)g(X.location+He);o.bindBuffer(o.ARRAY_BUFFER,tt);for(let He=0;He<X.locationSize;He++)_(X.location+He,xe/X.locationSize,J,ue,ke*ce,(Ze+xe/X.locationSize*He)*ce,we)}else{if(le.isInstancedBufferAttribute){for(let ye=0;ye<X.locationSize;ye++)y(X.location+ye,le.meshPerAttribute);b.isInstancedMesh!==!0&&L._maxInstanceCount===void 0&&(L._maxInstanceCount=le.meshPerAttribute*le.count)}else for(let ye=0;ye<X.locationSize;ye++)g(X.location+ye);o.bindBuffer(o.ARRAY_BUFFER,tt);for(let ye=0;ye<X.locationSize;ye++)_(X.location+ye,xe/X.locationSize,J,ue,xe*ce,xe/X.locationSize*ye*ce,we)}}else if(H!==void 0){const ue=H[ae];if(ue!==void 0)switch(ue.length){case 2:o.vertexAttrib2fv(X.location,ue);break;case 3:o.vertexAttrib3fv(X.location,ue);break;case 4:o.vertexAttrib4fv(X.location,ue);break;default:o.vertexAttrib1fv(X.location,ue)}}}}x()}function A(){w();for(const b in i){const N=i[b];for(const z in N){const L=N[z];for(const k in L)h(L[k].object),delete L[k];delete N[z]}delete i[b]}}function T(b){if(i[b.id]===void 0)return;const N=i[b.id];for(const z in N){const L=N[z];for(const k in L)h(L[k].object),delete L[k];delete N[z]}delete i[b.id]}function M(b){for(const N in i){const z=i[N];if(z[b.id]===void 0)continue;const L=z[b.id];for(const k in L)h(L[k].object),delete L[k];delete z[b.id]}}function w(){S(),r=!0,s!==n&&(s=n,c(s.object))}function S(){n.geometry=null,n.program=null,n.wireframe=!1}return{setup:a,reset:w,resetDefaultState:S,dispose:A,releaseStatesOfGeometry:T,releaseStatesOfProgram:M,initAttributes:m,enableAttribute:g,disableUnusedAttributes:x}}function KR(o,e,t){let i;function n(c){i=c}function s(c,h){o.drawArrays(i,c,h),t.update(h,i,1)}function r(c,h,u){u!==0&&(o.drawArraysInstanced(i,c,h,u),t.update(h,i,u))}function a(c,h,u){if(u===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,c,0,h,0,u);let f=0;for(let p=0;p<u;p++)f+=h[p];t.update(f,i,1)}function l(c,h,u,d){if(u===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)r(c[p],h[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(i,c,0,h,0,d,0,u);let p=0;for(let m=0;m<u;m++)p+=h[m]*d[m];t.update(p,i,1)}}this.setMode=n,this.render=s,this.renderInstances=r,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function jR(o,e,t,i){let n;function s(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");n=o.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(M){return!(M!==qi&&i.convert(M)!==o.getParameter(o.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(M){const w=M===$o&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(M!==fs&&i.convert(M)!==o.getParameter(o.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==rn&&!w)}function l(M){if(M==="highp"){if(o.getShaderPrecisionFormat(o.VERTEX_SHADER,o.HIGH_FLOAT).precision>0&&o.getShaderPrecisionFormat(o.FRAGMENT_SHADER,o.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&o.getShaderPrecisionFormat(o.VERTEX_SHADER,o.MEDIUM_FLOAT).precision>0&&o.getShaderPrecisionFormat(o.FRAGMENT_SHADER,o.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const u=t.logarithmicDepthBuffer===!0,d=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=o.getParameter(o.MAX_TEXTURE_IMAGE_UNITS),p=o.getParameter(o.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=o.getParameter(o.MAX_TEXTURE_SIZE),g=o.getParameter(o.MAX_CUBE_MAP_TEXTURE_SIZE),y=o.getParameter(o.MAX_VERTEX_ATTRIBS),x=o.getParameter(o.MAX_VERTEX_UNIFORM_VECTORS),_=o.getParameter(o.MAX_VARYING_VECTORS),v=o.getParameter(o.MAX_FRAGMENT_UNIFORM_VECTORS),A=p>0,T=o.getParameter(o.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:r,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:u,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:m,maxCubemapSize:g,maxAttributes:y,maxVertexUniforms:x,maxVaryings:_,maxFragmentUniforms:v,vertexTextures:A,maxSamples:T}}function JR(o){const e=this;let t=null,i=0,n=!1,s=!1;const r=new Fs,a=new lt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||i!==0||n;return n=d,i=u.length,f},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(u,d){t=h(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,m=u.clipIntersection,g=u.clipShadows,y=o.get(u);if(!n||p===null||p.length===0||s&&!g)s?h(null):c();else{const x=s?0:i,_=x*4;let v=y.clippingState||null;l.value=v,v=h(p,d,_,f);for(let A=0;A!==_;++A)v[A]=t[A];y.clippingState=v,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(u,d,f,p){const m=u!==null?u.length:0;let g=null;if(m!==0){if(g=l.value,p!==!0||g===null){const y=f+m*4,x=d.matrixWorldInverse;a.getNormalMatrix(x),(g===null||g.length<y)&&(g=new Float32Array(y));for(let _=0,v=f;_!==m;++_,v+=4)r.copy(u[_]).applyMatrix4(x,a),r.normal.toArray(g,v),g[v+3]=r.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,g}}function QR(o){let e=new WeakMap;function t(r,a){return a===bc?r.mapping=Js:a===Sc&&(r.mapping=Fr),r}function i(r){if(r&&r.isTexture){const a=r.mapping;if(a===bc||a===Sc)if(e.has(r)){const l=e.get(r).texture;return t(l,r.mapping)}else{const l=r.image;if(l&&l.height>0){const c=new iM(l.height);return c.fromEquirectangularTexture(o,r),e.set(r,c),r.addEventListener("dispose",n),t(c.texture,r.mapping)}else return null}}return r}function n(r){const a=r.target;a.removeEventListener("dispose",n);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}let sh=class extends Pf{constructor(e=-1,t=1,i=1,n=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,s,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-e,r=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,r=s+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(s,r,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};const Va=4,R_=[.125,.215,.35,.446,.526,.582],xo=20,Up=new sh,N_=new Ce;let Bp=null,Op=0,zp=0,kp=!1;const po=(1+Math.sqrt(5))/2,fa=1/po,P_=[new R(-po,fa,0),new R(po,fa,0),new R(-fa,0,po),new R(fa,0,po),new R(0,po,-fa),new R(0,po,fa),new R(-1,1,-1),new R(1,1,-1),new R(-1,1,1),new R(1,1,1)];let Mg=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){Bp=this._renderer.getRenderTarget(),Op=this._renderer.getActiveCubeFace(),zp=this._renderer.getActiveMipmapLevel(),kp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,n,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=L_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=D_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Bp,Op,zp),this._renderer.xr.enabled=kp,e.scissorTest=!1,Gh(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Js||e.mapping===Fr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Bp=this._renderer.getRenderTarget(),Op=this._renderer.getActiveCubeFace(),zp=this._renderer.getActiveMipmapLevel(),kp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:ci,minFilter:ci,generateMipmaps:!1,type:$o,format:qi,colorSpace:Xo,depthBuffer:!1},n=I_(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=I_(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=eN(s)),this._blurMaterial=tN(s,e,t)}return n}_compileMaterial(e){const t=new Kt(this._lodPlanes[0],e);this._renderer.compile(t,Up)}_sceneToCubeUV(e,t,i,n){const a=new wi(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,d=h.toneMapping;h.getClearColor(N_),h.toneMapping=Hs,h.autoClear=!1;const f=new Vr({name:"PMREM.Background",side:Yi,depthWrite:!1,depthTest:!1}),p=new Kt(new eh,f);let m=!1;const g=e.background;g?g.isColor&&(f.color.copy(g),e.background=null,m=!0):(f.color.copy(N_),m=!0);for(let y=0;y<6;y++){const x=y%3;x===0?(a.up.set(0,l[y],0),a.lookAt(c[y],0,0)):x===1?(a.up.set(0,0,l[y]),a.lookAt(0,c[y],0)):(a.up.set(0,l[y],0),a.lookAt(0,0,c[y]));const _=this._cubeSize;Gh(n,x*_,y>2?_:0,_,_),h.setRenderTarget(n),m&&h.render(p,a),h.render(e,a)}p.geometry.dispose(),p.material.dispose(),h.toneMapping=d,h.autoClear=u,e.background=g}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===Js||e.mapping===Fr;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=L_()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=D_());const s=n?this._cubemapMaterial:this._equirectMaterial,r=new Kt(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Gh(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(r,Up)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let s=1;s<n;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=P_[(n-s-1)%P_.length];this._blur(e,s-1,s,r,a)}t.autoClear=i}_blur(e,t,i,n,s){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,i,n,"latitudinal",s),this._halfBlur(r,e,i,i,n,"longitudinal",s)}_halfBlur(e,t,i,n,s,r,a){const l=this._renderer,c=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new Kt(this._lodPlanes[n],c),d=c.uniforms,f=this._sizeLods[i]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*xo-1),m=s/p,g=isFinite(s)?1+Math.floor(h*m):xo;g>xo&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${xo}`);const y=[];let x=0;for(let M=0;M<xo;++M){const w=M/m,S=Math.exp(-w*w/2);y.push(S),M===0?x+=S:M<g&&(x+=2*S)}for(let M=0;M<y.length;M++)y[M]=y[M]/x;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=y,d.latitudinal.value=r==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:_}=this;d.dTheta.value=p,d.mipInt.value=_-i;const v=this._sizeLods[n],A=3*v*(n>_-Va?n-_+Va:0),T=4*(this._cubeSize-v);Gh(t,A,T,3*v,2*v),l.setRenderTarget(t),l.render(u,Up)}};function eN(o){const e=[],t=[],i=[];let n=o;const s=o-Va+1+R_.length;for(let r=0;r<s;r++){const a=Math.pow(2,n);t.push(a);let l=1/a;r>o-Va?l=R_[r-o+Va-1]:r===0&&(l=0),i.push(l);const c=1/(a-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,p=6,m=3,g=2,y=1,x=new Float32Array(m*p*f),_=new Float32Array(g*p*f),v=new Float32Array(y*p*f);for(let T=0;T<f;T++){const M=T%3*2/3-1,w=T>2?0:-1,S=[M,w,0,M+2/3,w,0,M+2/3,w+1,0,M,w,0,M+2/3,w+1,0,M,w+1,0];x.set(S,m*p*T),_.set(d,g*p*T);const b=[T,T,T,T,T,T];v.set(b,y*p*T)}const A=new ct;A.setAttribute("position",new bt(x,m)),A.setAttribute("uv",new bt(_,g)),A.setAttribute("faceIndex",new bt(v,y)),e.push(A),n>Va&&n--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function I_(o,e,t){const i=new Dn(o,e,t);return i.texture.mapping=gl,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Gh(o,e,t,i,n){o.viewport.set(e,t,i,n),o.scissor.set(e,t,i,n)}function tN(o,e,t){const i=new Float32Array(xo),n=new R(0,1,0);return new cn({name:"SphericalGaussianBlur",defines:{n:xo,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${o}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:Fy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:hs,depthTest:!1,depthWrite:!1})}function D_(){return new cn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Fy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:hs,depthTest:!1,depthWrite:!1})}function L_(){return new cn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Fy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:hs,depthTest:!1,depthWrite:!1})}function Fy(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function iN(o){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===bc||l===Sc,h=l===Js||l===Fr;if(c||h){let u=e.get(a);const d=u!==void 0?u.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new Mg(o)),u=c?t.fromEquirectangular(a,u):t.fromCubemap(a,u),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),u.texture;if(u!==void 0)return u.texture;{const f=a.image;return c&&f&&f.height>0||h&&f&&n(f)?(t===null&&(t=new Mg(o)),u=c?t.fromEquirectangular(a):t.fromCubemap(a),u.texture.pmremVersion=a.pmremVersion,e.set(a,u),a.addEventListener("dispose",s),u.texture):null}}}return a}function n(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function r(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:r}}function nN(o){const e={};function t(i){if(e[i]!==void 0)return e[i];let n;switch(i){case"WEBGL_depth_texture":n=o.getExtension("WEBGL_depth_texture")||o.getExtension("MOZ_WEBGL_depth_texture")||o.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=o.getExtension("EXT_texture_filter_anisotropic")||o.getExtension("MOZ_EXT_texture_filter_anisotropic")||o.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=o.getExtension("WEBGL_compressed_texture_s3tc")||o.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=o.getExtension("WEBGL_compressed_texture_pvrtc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=o.getExtension(i)}return e[i]=n,n}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const n=t(i);return n===null&&Ql("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function sN(o,e,t,i){const n={},s=new WeakMap;function r(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);for(const p in d.morphAttributes){const m=d.morphAttributes[p];for(let g=0,y=m.length;g<y;g++)e.remove(m[g])}d.removeEventListener("dispose",r),delete n[d.id];const f=s.get(d);f&&(e.remove(f),s.delete(d)),i.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(u,d){return n[d.id]===!0||(d.addEventListener("dispose",r),n[d.id]=!0,t.memory.geometries++),d}function l(u){const d=u.attributes;for(const p in d)e.update(d[p],o.ARRAY_BUFFER);const f=u.morphAttributes;for(const p in f){const m=f[p];for(let g=0,y=m.length;g<y;g++)e.update(m[g],o.ARRAY_BUFFER)}}function c(u){const d=[],f=u.index,p=u.attributes.position;let m=0;if(f!==null){const x=f.array;m=f.version;for(let _=0,v=x.length;_<v;_+=3){const A=x[_+0],T=x[_+1],M=x[_+2];d.push(A,T,T,M,M,A)}}else if(p!==void 0){const x=p.array;m=p.version;for(let _=0,v=x.length/3-1;_<v;_+=3){const A=_+0,T=_+1,M=_+2;d.push(A,T,T,M,M,A)}}else return;const g=new(WS(d)?Ly:Dy)(d,1);g.version=m;const y=s.get(u);y&&e.remove(y),s.set(u,g)}function h(u){const d=s.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&c(u)}else c(u);return s.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function rN(o,e,t){let i;function n(d){i=d}let s,r;function a(d){s=d.type,r=d.bytesPerElement}function l(d,f){o.drawElements(i,f,s,d*r),t.update(f,i,1)}function c(d,f,p){p!==0&&(o.drawElementsInstanced(i,f,s,d*r,p),t.update(f,i,p))}function h(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,f,0,s,d,0,p);let g=0;for(let y=0;y<p;y++)g+=f[y];t.update(g,i,1)}function u(d,f,p,m){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let y=0;y<d.length;y++)c(d[y]/r,f[y],m[y]);else{g.multiDrawElementsInstancedWEBGL(i,f,0,s,d,0,m,0,p);let y=0;for(let x=0;x<p;x++)y+=f[x]*m[x];t.update(y,i,1)}}this.setMode=n,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function oN(o){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,r,a){switch(t.calls++,r){case o.TRIANGLES:t.triangles+=a*(s/3);break;case o.LINES:t.lines+=a*(s/2);break;case o.LINE_STRIP:t.lines+=a*(s-1);break;case o.LINE_LOOP:t.lines+=a*s;break;case o.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r);break}}function n(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:n,update:i}}function aN(o,e,t){const i=new WeakMap,n=new gt;function s(r,a,l){const c=r.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=h!==void 0?h.length:0;let d=i.get(a);if(d===void 0||d.count!==u){let S=function(){M.dispose(),i.delete(a),a.removeEventListener("dispose",S)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,m=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],y=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let _=0;f===!0&&(_=1),p===!0&&(_=2),m===!0&&(_=3);let v=a.attributes.position.count*_,A=1;v>e.maxTextureSize&&(A=Math.ceil(v/e.maxTextureSize),v=e.maxTextureSize);const T=new Float32Array(v*A*4*u),M=new Rf(T,v,A,u);M.type=rn,M.needsUpdate=!0;const w=_*4;for(let b=0;b<u;b++){const N=g[b],z=y[b],L=x[b],k=v*A*4*b;for(let q=0;q<N.count;q++){const H=q*w;f===!0&&(n.fromBufferAttribute(N,q),T[k+H+0]=n.x,T[k+H+1]=n.y,T[k+H+2]=n.z,T[k+H+3]=0),p===!0&&(n.fromBufferAttribute(z,q),T[k+H+4]=n.x,T[k+H+5]=n.y,T[k+H+6]=n.z,T[k+H+7]=0),m===!0&&(n.fromBufferAttribute(L,q),T[k+H+8]=n.x,T[k+H+9]=n.y,T[k+H+10]=n.z,T[k+H+11]=L.itemSize===4?n.w:1)}}d={count:u,texture:M,size:new Z(v,A)},i.set(a,d),a.addEventListener("dispose",S)}if(r.isInstancedMesh===!0&&r.morphTexture!==null)l.getUniforms().setValue(o,"morphTexture",r.morphTexture,t);else{let f=0;for(let m=0;m<c.length;m++)f+=c[m];const p=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(o,"morphTargetBaseInfluence",p),l.getUniforms().setValue(o,"morphTargetInfluences",c)}l.getUniforms().setValue(o,"morphTargetsTexture",d.texture,t),l.getUniforms().setValue(o,"morphTargetsTextureSize",d.size)}return{update:s}}function lN(o,e,t,i){let n=new WeakMap;function s(l){const c=i.render.frame,h=l.geometry,u=e.get(l,h);if(n.get(u)!==c&&(e.update(u),n.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.get(l)!==c&&(t.update(l.instanceMatrix,o.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,o.ARRAY_BUFFER),n.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;n.get(d)!==c&&(d.update(),n.set(d,c))}return u}function r(){n=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:r}}let Uy=class extends xi{constructor(e,t,i,n,s,r,a,l,c,h=Ro){if(h!==Ro&&h!==Bo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===Ro&&(i=Qs),i===void 0&&h===Bo&&(i=Uo),super(null,n,s,r,a,l,h,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Ci,this.minFilter=l!==void 0?l:Ci,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}};const sM=new xi,F_=new Uy(1,1),rM=new Rf,oM=new Iy,aM=new ih,U_=[],B_=[],O_=new Float32Array(16),z_=new Float32Array(9),k_=new Float32Array(4);function xl(o,e,t){const i=o[0];if(i<=0||i>0)return o;const n=e*t;let s=U_[n];if(s===void 0&&(s=new Float32Array(n),U_[n]=s),e!==0){i.toArray(s,0);for(let r=1,a=0;r!==e;++r)a+=t,o[r].toArray(s,a)}return s}function ui(o,e){if(o.length!==e.length)return!1;for(let t=0,i=o.length;t<i;t++)if(o[t]!==e[t])return!1;return!0}function di(o,e){for(let t=0,i=e.length;t<i;t++)o[t]=e[t]}function If(o,e){let t=B_[e];t===void 0&&(t=new Int32Array(e),B_[e]=t);for(let i=0;i!==e;++i)t[i]=o.allocateTextureUnit();return t}function cN(o,e){const t=this.cache;t[0]!==e&&(o.uniform1f(this.addr,e),t[0]=e)}function hN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(o.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ui(t,e))return;o.uniform2fv(this.addr,e),di(t,e)}}function uN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(o.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(o.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(ui(t,e))return;o.uniform3fv(this.addr,e),di(t,e)}}function dN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(o.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ui(t,e))return;o.uniform4fv(this.addr,e),di(t,e)}}function fN(o,e){const t=this.cache,i=e.elements;if(i===void 0){if(ui(t,e))return;o.uniformMatrix2fv(this.addr,!1,e),di(t,e)}else{if(ui(t,i))return;k_.set(i),o.uniformMatrix2fv(this.addr,!1,k_),di(t,i)}}function pN(o,e){const t=this.cache,i=e.elements;if(i===void 0){if(ui(t,e))return;o.uniformMatrix3fv(this.addr,!1,e),di(t,e)}else{if(ui(t,i))return;z_.set(i),o.uniformMatrix3fv(this.addr,!1,z_),di(t,i)}}function mN(o,e){const t=this.cache,i=e.elements;if(i===void 0){if(ui(t,e))return;o.uniformMatrix4fv(this.addr,!1,e),di(t,e)}else{if(ui(t,i))return;O_.set(i),o.uniformMatrix4fv(this.addr,!1,O_),di(t,i)}}function gN(o,e){const t=this.cache;t[0]!==e&&(o.uniform1i(this.addr,e),t[0]=e)}function yN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(o.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ui(t,e))return;o.uniform2iv(this.addr,e),di(t,e)}}function xN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(o.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ui(t,e))return;o.uniform3iv(this.addr,e),di(t,e)}}function _N(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(o.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ui(t,e))return;o.uniform4iv(this.addr,e),di(t,e)}}function vN(o,e){const t=this.cache;t[0]!==e&&(o.uniform1ui(this.addr,e),t[0]=e)}function bN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(o.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ui(t,e))return;o.uniform2uiv(this.addr,e),di(t,e)}}function SN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(o.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ui(t,e))return;o.uniform3uiv(this.addr,e),di(t,e)}}function MN(o,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(o.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ui(t,e))return;o.uniform4uiv(this.addr,e),di(t,e)}}function TN(o,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(o.uniform1i(this.addr,n),i[0]=n);let s;this.type===o.SAMPLER_2D_SHADOW?(F_.compareFunction=Ny,s=F_):s=sM,t.setTexture2D(e||s,n)}function wN(o,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(o.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||oM,n)}function AN(o,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(o.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||aM,n)}function EN(o,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(o.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||rM,n)}function CN(o){switch(o){case 5126:return cN;case 35664:return hN;case 35665:return uN;case 35666:return dN;case 35674:return fN;case 35675:return pN;case 35676:return mN;case 5124:case 35670:return gN;case 35667:case 35671:return yN;case 35668:case 35672:return xN;case 35669:case 35673:return _N;case 5125:return vN;case 36294:return bN;case 36295:return SN;case 36296:return MN;case 35678:case 36198:case 36298:case 36306:case 35682:return TN;case 35679:case 36299:case 36307:return wN;case 35680:case 36300:case 36308:case 36293:return AN;case 36289:case 36303:case 36311:case 36292:return EN}}function RN(o,e){o.uniform1fv(this.addr,e)}function NN(o,e){const t=xl(e,this.size,2);o.uniform2fv(this.addr,t)}function PN(o,e){const t=xl(e,this.size,3);o.uniform3fv(this.addr,t)}function IN(o,e){const t=xl(e,this.size,4);o.uniform4fv(this.addr,t)}function DN(o,e){const t=xl(e,this.size,4);o.uniformMatrix2fv(this.addr,!1,t)}function LN(o,e){const t=xl(e,this.size,9);o.uniformMatrix3fv(this.addr,!1,t)}function FN(o,e){const t=xl(e,this.size,16);o.uniformMatrix4fv(this.addr,!1,t)}function UN(o,e){o.uniform1iv(this.addr,e)}function BN(o,e){o.uniform2iv(this.addr,e)}function ON(o,e){o.uniform3iv(this.addr,e)}function zN(o,e){o.uniform4iv(this.addr,e)}function kN(o,e){o.uniform1uiv(this.addr,e)}function GN(o,e){o.uniform2uiv(this.addr,e)}function VN(o,e){o.uniform3uiv(this.addr,e)}function HN(o,e){o.uniform4uiv(this.addr,e)}function WN(o,e,t){const i=this.cache,n=e.length,s=If(t,n);ui(i,s)||(o.uniform1iv(this.addr,s),di(i,s));for(let r=0;r!==n;++r)t.setTexture2D(e[r]||sM,s[r])}function $N(o,e,t){const i=this.cache,n=e.length,s=If(t,n);ui(i,s)||(o.uniform1iv(this.addr,s),di(i,s));for(let r=0;r!==n;++r)t.setTexture3D(e[r]||oM,s[r])}function XN(o,e,t){const i=this.cache,n=e.length,s=If(t,n);ui(i,s)||(o.uniform1iv(this.addr,s),di(i,s));for(let r=0;r!==n;++r)t.setTextureCube(e[r]||aM,s[r])}function qN(o,e,t){const i=this.cache,n=e.length,s=If(t,n);ui(i,s)||(o.uniform1iv(this.addr,s),di(i,s));for(let r=0;r!==n;++r)t.setTexture2DArray(e[r]||rM,s[r])}function YN(o){switch(o){case 5126:return RN;case 35664:return NN;case 35665:return PN;case 35666:return IN;case 35674:return DN;case 35675:return LN;case 35676:return FN;case 5124:case 35670:return UN;case 35667:case 35671:return BN;case 35668:case 35672:return ON;case 35669:case 35673:return zN;case 5125:return kN;case 36294:return GN;case 36295:return VN;case 36296:return HN;case 35678:case 36198:case 36298:case 36306:case 35682:return WN;case 35679:case 36299:case 36307:return $N;case 35680:case 36300:case 36308:case 36293:return XN;case 36289:case 36303:case 36311:case 36292:return qN}}class ZN{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=CN(t.type)}}class KN{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=YN(t.type)}}class jN{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let s=0,r=n.length;s!==r;++s){const a=n[s];a.setValue(e,t[a.id],i)}}}const Gp=/(\w+)(\])?(\[|\.)?/g;function G_(o,e){o.seq.push(e),o.map[e.id]=e}function JN(o,e,t){const i=o.name,n=i.length;for(Gp.lastIndex=0;;){const s=Gp.exec(i),r=Gp.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&r+2===n){G_(t,c===void 0?new ZN(a,o,e):new KN(a,o,e));break}else{let u=t.map[a];u===void 0&&(u=new jN(a),G_(t,u)),t=u}}}class sd{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const s=e.getActiveUniform(t,n),r=e.getUniformLocation(t,s.name);JN(s,r,this)}}setValue(e,t,i,n){const s=this.map[t];s!==void 0&&s.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];n!==void 0&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let s=0,r=t.length;s!==r;++s){const a=t[s],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,s=e.length;n!==s;++n){const r=e[n];r.id in t&&i.push(r)}return i}}function V_(o,e,t){const i=o.createShader(e);return o.shaderSource(i,t),o.compileShader(i),i}const QN=37297;let eP=0;function tP(o,e){const t=o.split(`
`),i=[],n=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let r=n;r<s;r++){const a=r+1;i.push(`${a===e?">":" "} ${a}: ${t[r]}`)}return i.join(`
`)}const H_=new lt;function iP(o){yt._getMatrix(H_,yt.workingColorSpace,o);const e=`mat3( ${H_.elements.map(t=>t.toFixed(4))} )`;switch(yt.getTransfer(o)){case Qc:return[e,"LinearTransferOETF"];case Dt:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",o),[e,"LinearTransferOETF"]}}function W_(o,e,t){const i=o.getShaderParameter(e,o.COMPILE_STATUS),n=o.getShaderInfoLog(e).trim();if(i&&n==="")return"";const s=/ERROR: 0:(\d+)/.exec(n);if(s){const r=parseInt(s[1]);return t.toUpperCase()+`

`+n+`

`+tP(o.getShaderSource(e),r)}else return n}function nP(o,e){const t=iP(e);return[`vec4 ${o}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function sP(o,e){let t;switch(e){case _S:t="Linear";break;case vS:t="Reinhard";break;case bS:t="Cineon";break;case SS:t="ACESFilmic";break;case TS:t="AgX";break;case wS:t="Neutral";break;case MS:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+o+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Vh=new R;function rP(){yt.getLuminanceCoefficients(Vh);const o=Vh.x.toFixed(4),e=Vh.y.toFixed(4),t=Vh.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${o}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function oP(o){return[o.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",o.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(tc).join(`
`)}function aP(o){const e=[];for(const t in o){const i=o[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function lP(o,e){const t={},i=o.getProgramParameter(e,o.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){const s=o.getActiveAttrib(e,n),r=s.name;let a=1;s.type===o.FLOAT_MAT2&&(a=2),s.type===o.FLOAT_MAT3&&(a=3),s.type===o.FLOAT_MAT4&&(a=4),t[r]={type:s.type,location:o.getAttribLocation(e,r),locationSize:a}}return t}function tc(o){return o!==""}function $_(o,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return o.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function X_(o,e){return o.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const cP=/^[ \t]*#include +<([\w\d./]+)>/gm;function Tg(o){return o.replace(cP,uP)}const hP=new Map;function uP(o,e){let t=at[e];if(t===void 0){const i=hP.get(e);if(i!==void 0)t=at[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return Tg(t)}const dP=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function q_(o){return o.replace(dP,fP)}function fP(o,e,t,i){let n="";for(let s=parseInt(e);s<parseInt(t);s++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return n}function Y_(o){let e=`precision ${o.precision} float;
	precision ${o.precision} int;
	precision ${o.precision} sampler2D;
	precision ${o.precision} samplerCube;
	precision ${o.precision} sampler3D;
	precision ${o.precision} sampler2DArray;
	precision ${o.precision} sampler2DShadow;
	precision ${o.precision} samplerCubeShadow;
	precision ${o.precision} sampler2DArrayShadow;
	precision ${o.precision} isampler2D;
	precision ${o.precision} isampler3D;
	precision ${o.precision} isamplerCube;
	precision ${o.precision} isampler2DArray;
	precision ${o.precision} usampler2D;
	precision ${o.precision} usampler3D;
	precision ${o.precision} usamplerCube;
	precision ${o.precision} usampler2DArray;
	`;return o.precision==="highp"?e+=`
#define HIGH_PRECISION`:o.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:o.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function pP(o){let e="SHADOWMAP_TYPE_BASIC";return o.shadowMapType===xy?e="SHADOWMAP_TYPE_PCF":o.shadowMapType===Jb?e="SHADOWMAP_TYPE_PCF_SOFT":o.shadowMapType===ns&&(e="SHADOWMAP_TYPE_VSM"),e}function mP(o){let e="ENVMAP_TYPE_CUBE";if(o.envMap)switch(o.envMapMode){case Js:case Fr:e="ENVMAP_TYPE_CUBE";break;case gl:e="ENVMAP_TYPE_CUBE_UV";break}return e}function gP(o){let e="ENVMAP_MODE_REFLECTION";if(o.envMap)switch(o.envMapMode){case Fr:e="ENVMAP_MODE_REFRACTION";break}return e}function yP(o){let e="ENVMAP_BLENDING_NONE";if(o.envMap)switch(o.combine){case jc:e="ENVMAP_BLENDING_MULTIPLY";break;case yS:e="ENVMAP_BLENDING_MIX";break;case xS:e="ENVMAP_BLENDING_ADD";break}return e}function xP(o){const e=o.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function _P(o,e,t,i){const n=o.getContext(),s=t.defines;let r=t.vertexShader,a=t.fragmentShader;const l=pP(t),c=mP(t),h=gP(t),u=yP(t),d=xP(t),f=oP(t),p=aP(s),m=n.createProgram();let g,y,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(tc).join(`
`),g.length>0&&(g+=`
`),y=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(tc).join(`
`),y.length>0&&(y+=`
`)):(g=[Y_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(tc).join(`
`),y=[Y_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Hs?"#define TONE_MAPPING":"",t.toneMapping!==Hs?at.tonemapping_pars_fragment:"",t.toneMapping!==Hs?sP("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",at.colorspace_pars_fragment,nP("linearToOutputTexel",t.outputColorSpace),rP(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(tc).join(`
`)),r=Tg(r),r=$_(r,t),r=X_(r,t),a=Tg(a),a=$_(a,t),a=X_(a,t),r=q_(r),a=q_(a),t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,y=["#define varying in",t.glslVersion===bg?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===bg?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const _=x+g+r,v=x+y+a,A=V_(n,n.VERTEX_SHADER,_),T=V_(n,n.FRAGMENT_SHADER,v);n.attachShader(m,A),n.attachShader(m,T),t.index0AttributeName!==void 0?n.bindAttribLocation(m,0,t.index0AttributeName):t.morphTargets===!0&&n.bindAttribLocation(m,0,"position"),n.linkProgram(m);function M(N){if(o.debug.checkShaderErrors){const z=n.getProgramInfoLog(m).trim(),L=n.getShaderInfoLog(A).trim(),k=n.getShaderInfoLog(T).trim();let q=!0,H=!0;if(n.getProgramParameter(m,n.LINK_STATUS)===!1)if(q=!1,typeof o.debug.onShaderError=="function")o.debug.onShaderError(n,m,A,T);else{const ae=W_(n,A,"vertex"),X=W_(n,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(m,n.VALIDATE_STATUS)+`

Material Name: `+N.name+`
Material Type: `+N.type+`

Program Info Log: `+z+`
`+ae+`
`+X)}else z!==""?console.warn("THREE.WebGLProgram: Program Info Log:",z):(L===""||k==="")&&(H=!1);H&&(N.diagnostics={runnable:q,programLog:z,vertexShader:{log:L,prefix:g},fragmentShader:{log:k,prefix:y}})}n.deleteShader(A),n.deleteShader(T),w=new sd(n,m),S=lP(n,m)}let w;this.getUniforms=function(){return w===void 0&&M(this),w};let S;this.getAttributes=function(){return S===void 0&&M(this),S};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=n.getProgramParameter(m,QN)),b},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(m),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=eP++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=A,this.fragmentShader=T,this}let vP=0;class bP{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),s=this._getShaderStage(i),r=this._getShaderCacheForMaterial(e);return r.has(n)===!1&&(r.add(n),n.usedTimes++),r.has(s)===!1&&(r.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new SP(e),t.set(e,i)),i}}class SP{constructor(e){this.id=vP++,this.code=e,this.usedTimes=0}}function MP(o,e,t,i,n,s,r){const a=new Nf,l=new bP,c=new Set,h=[],u=n.logarithmicDepthBuffer,d=n.vertexTextures;let f=n.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(S){return c.add(S),S===0?"uv":`uv${S}`}function g(S,b,N,z,L){const k=z.fog,q=L.geometry,H=S.isMeshStandardMaterial?z.environment:null,ae=(S.isMeshStandardMaterial?t:e).get(S.envMap||H),X=ae&&ae.mapping===gl?ae.image.height:null,le=p[S.type];S.precision!==null&&(f=n.getMaxPrecision(S.precision),f!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",f,"instead."));const ue=q.morphAttributes.position||q.morphAttributes.normal||q.morphAttributes.color,xe=ue!==void 0?ue.length:0;let $e=0;q.morphAttributes.position!==void 0&&($e=1),q.morphAttributes.normal!==void 0&&($e=2),q.morphAttributes.color!==void 0&&($e=3);let tt,J,ce,we;if(le){const It=Hi[le];tt=It.vertexShader,J=It.fragmentShader}else tt=S.vertexShader,J=S.fragmentShader,l.update(S),ce=l.getVertexShaderID(S),we=l.getFragmentShaderID(S);const ye=o.getRenderTarget(),ke=o.state.buffers.depth.getReversed(),Ze=L.isInstancedMesh===!0,He=L.isBatchedMesh===!0,ft=!!S.map,re=!!S.matcap,pe=!!ae,I=!!S.aoMap,Ge=!!S.lightMap,he=!!S.bumpMap,De=!!S.normalMap,ve=!!S.displacementMap,Xe=!!S.emissiveMap,Pe=!!S.metalnessMap,P=!!S.roughnessMap,E=S.anisotropy>0,V=S.clearcoat>0,te=S.dispersion>0,oe=S.iridescence>0,ie=S.sheen>0,Ue=S.transmission>0,Me=E&&!!S.anisotropyMap,Ie=V&&!!S.clearcoatMap,pt=V&&!!S.clearcoatNormalMap,de=V&&!!S.clearcoatRoughnessMap,Le=oe&&!!S.iridescenceMap,qe=oe&&!!S.iridescenceThicknessMap,Ke=ie&&!!S.sheenColorMap,Fe=ie&&!!S.sheenRoughnessMap,xt=!!S.specularMap,ht=!!S.specularColorMap,Ft=!!S.specularIntensityMap,F=Ue&&!!S.transmissionMap,Te=Ue&&!!S.thicknessMap,K=!!S.gradientMap,se=!!S.alphaMap,Re=S.alphaTest>0,Ae=!!S.alphaHash,rt=!!S.extensions;let Xt=Hs;S.toneMapped&&(ye===null||ye.isXRRenderTarget===!0)&&(Xt=o.toneMapping);const Pi={shaderID:le,shaderType:S.type,shaderName:S.name,vertexShader:tt,fragmentShader:J,defines:S.defines,customVertexShaderID:ce,customFragmentShaderID:we,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:f,batching:He,batchingColor:He&&L._colorsTexture!==null,instancing:Ze,instancingColor:Ze&&L.instanceColor!==null,instancingMorph:Ze&&L.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:ye===null?o.outputColorSpace:ye.isXRRenderTarget===!0?ye.texture.colorSpace:Xo,alphaToCoverage:!!S.alphaToCoverage,map:ft,matcap:re,envMap:pe,envMapMode:pe&&ae.mapping,envMapCubeUVHeight:X,aoMap:I,lightMap:Ge,bumpMap:he,normalMap:De,displacementMap:d&&ve,emissiveMap:Xe,normalMapObjectSpace:De&&S.normalMapType===LS,normalMapTangentSpace:De&&S.normalMapType===Gr,metalnessMap:Pe,roughnessMap:P,anisotropy:E,anisotropyMap:Me,clearcoat:V,clearcoatMap:Ie,clearcoatNormalMap:pt,clearcoatRoughnessMap:de,dispersion:te,iridescence:oe,iridescenceMap:Le,iridescenceThicknessMap:qe,sheen:ie,sheenColorMap:Ke,sheenRoughnessMap:Fe,specularMap:xt,specularColorMap:ht,specularIntensityMap:Ft,transmission:Ue,transmissionMap:F,thicknessMap:Te,gradientMap:K,opaque:S.transparent===!1&&S.blending===Co&&S.alphaToCoverage===!1,alphaMap:se,alphaTest:Re,alphaHash:Ae,combine:S.combine,mapUv:ft&&m(S.map.channel),aoMapUv:I&&m(S.aoMap.channel),lightMapUv:Ge&&m(S.lightMap.channel),bumpMapUv:he&&m(S.bumpMap.channel),normalMapUv:De&&m(S.normalMap.channel),displacementMapUv:ve&&m(S.displacementMap.channel),emissiveMapUv:Xe&&m(S.emissiveMap.channel),metalnessMapUv:Pe&&m(S.metalnessMap.channel),roughnessMapUv:P&&m(S.roughnessMap.channel),anisotropyMapUv:Me&&m(S.anisotropyMap.channel),clearcoatMapUv:Ie&&m(S.clearcoatMap.channel),clearcoatNormalMapUv:pt&&m(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:de&&m(S.clearcoatRoughnessMap.channel),iridescenceMapUv:Le&&m(S.iridescenceMap.channel),iridescenceThicknessMapUv:qe&&m(S.iridescenceThicknessMap.channel),sheenColorMapUv:Ke&&m(S.sheenColorMap.channel),sheenRoughnessMapUv:Fe&&m(S.sheenRoughnessMap.channel),specularMapUv:xt&&m(S.specularMap.channel),specularColorMapUv:ht&&m(S.specularColorMap.channel),specularIntensityMapUv:Ft&&m(S.specularIntensityMap.channel),transmissionMapUv:F&&m(S.transmissionMap.channel),thicknessMapUv:Te&&m(S.thicknessMap.channel),alphaMapUv:se&&m(S.alphaMap.channel),vertexTangents:!!q.attributes.tangent&&(De||E),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!q.attributes.color&&q.attributes.color.itemSize===4,pointsUvs:L.isPoints===!0&&!!q.attributes.uv&&(ft||se),fog:!!k,useFog:S.fog===!0,fogExp2:!!k&&k.isFogExp2,flatShading:S.flatShading===!0,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:ke,skinning:L.isSkinnedMesh===!0,morphTargets:q.morphAttributes.position!==void 0,morphNormals:q.morphAttributes.normal!==void 0,morphColors:q.morphAttributes.color!==void 0,morphTargetsCount:xe,morphTextureStride:$e,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:S.dithering,shadowMapEnabled:o.shadowMap.enabled&&N.length>0,shadowMapType:o.shadowMap.type,toneMapping:Xt,decodeVideoTexture:ft&&S.map.isVideoTexture===!0&&yt.getTransfer(S.map.colorSpace)===Dt,decodeVideoTextureEmissive:Xe&&S.emissiveMap.isVideoTexture===!0&&yt.getTransfer(S.emissiveMap.colorSpace)===Dt,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===ss,flipSided:S.side===Yi,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionClipCullDistance:rt&&S.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(rt&&S.extensions.multiDraw===!0||He)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:S.customProgramCacheKey()};return Pi.vertexUv1s=c.has(1),Pi.vertexUv2s=c.has(2),Pi.vertexUv3s=c.has(3),c.clear(),Pi}function y(S){const b=[];if(S.shaderID?b.push(S.shaderID):(b.push(S.customVertexShaderID),b.push(S.customFragmentShaderID)),S.defines!==void 0)for(const N in S.defines)b.push(N),b.push(S.defines[N]);return S.isRawShaderMaterial===!1&&(x(b,S),_(b,S),b.push(o.outputColorSpace)),b.push(S.customProgramCacheKey),b.join()}function x(S,b){S.push(b.precision),S.push(b.outputColorSpace),S.push(b.envMapMode),S.push(b.envMapCubeUVHeight),S.push(b.mapUv),S.push(b.alphaMapUv),S.push(b.lightMapUv),S.push(b.aoMapUv),S.push(b.bumpMapUv),S.push(b.normalMapUv),S.push(b.displacementMapUv),S.push(b.emissiveMapUv),S.push(b.metalnessMapUv),S.push(b.roughnessMapUv),S.push(b.anisotropyMapUv),S.push(b.clearcoatMapUv),S.push(b.clearcoatNormalMapUv),S.push(b.clearcoatRoughnessMapUv),S.push(b.iridescenceMapUv),S.push(b.iridescenceThicknessMapUv),S.push(b.sheenColorMapUv),S.push(b.sheenRoughnessMapUv),S.push(b.specularMapUv),S.push(b.specularColorMapUv),S.push(b.specularIntensityMapUv),S.push(b.transmissionMapUv),S.push(b.thicknessMapUv),S.push(b.combine),S.push(b.fogExp2),S.push(b.sizeAttenuation),S.push(b.morphTargetsCount),S.push(b.morphAttributeCount),S.push(b.numDirLights),S.push(b.numPointLights),S.push(b.numSpotLights),S.push(b.numSpotLightMaps),S.push(b.numHemiLights),S.push(b.numRectAreaLights),S.push(b.numDirLightShadows),S.push(b.numPointLightShadows),S.push(b.numSpotLightShadows),S.push(b.numSpotLightShadowsWithMaps),S.push(b.numLightProbes),S.push(b.shadowMapType),S.push(b.toneMapping),S.push(b.numClippingPlanes),S.push(b.numClipIntersection),S.push(b.depthPacking)}function _(S,b){a.disableAll(),b.supportsVertexTextures&&a.enable(0),b.instancing&&a.enable(1),b.instancingColor&&a.enable(2),b.instancingMorph&&a.enable(3),b.matcap&&a.enable(4),b.envMap&&a.enable(5),b.normalMapObjectSpace&&a.enable(6),b.normalMapTangentSpace&&a.enable(7),b.clearcoat&&a.enable(8),b.iridescence&&a.enable(9),b.alphaTest&&a.enable(10),b.vertexColors&&a.enable(11),b.vertexAlphas&&a.enable(12),b.vertexUv1s&&a.enable(13),b.vertexUv2s&&a.enable(14),b.vertexUv3s&&a.enable(15),b.vertexTangents&&a.enable(16),b.anisotropy&&a.enable(17),b.alphaHash&&a.enable(18),b.batching&&a.enable(19),b.dispersion&&a.enable(20),b.batchingColor&&a.enable(21),S.push(a.mask),a.disableAll(),b.fog&&a.enable(0),b.useFog&&a.enable(1),b.flatShading&&a.enable(2),b.logarithmicDepthBuffer&&a.enable(3),b.reverseDepthBuffer&&a.enable(4),b.skinning&&a.enable(5),b.morphTargets&&a.enable(6),b.morphNormals&&a.enable(7),b.morphColors&&a.enable(8),b.premultipliedAlpha&&a.enable(9),b.shadowMapEnabled&&a.enable(10),b.doubleSided&&a.enable(11),b.flipSided&&a.enable(12),b.useDepthPacking&&a.enable(13),b.dithering&&a.enable(14),b.transmission&&a.enable(15),b.sheen&&a.enable(16),b.opaque&&a.enable(17),b.pointsUvs&&a.enable(18),b.decodeVideoTexture&&a.enable(19),b.decodeVideoTextureEmissive&&a.enable(20),b.alphaToCoverage&&a.enable(21),S.push(a.mask)}function v(S){const b=p[S.type];let N;if(b){const z=Hi[b];N=th.clone(z.uniforms)}else N=S.uniforms;return N}function A(S,b){let N;for(let z=0,L=h.length;z<L;z++){const k=h[z];if(k.cacheKey===b){N=k,++N.usedTimes;break}}return N===void 0&&(N=new _P(o,b,S,s),h.push(N)),N}function T(S){if(--S.usedTimes===0){const b=h.indexOf(S);h[b]=h[h.length-1],h.pop(),S.destroy()}}function M(S){l.remove(S)}function w(){l.dispose()}return{getParameters:g,getProgramCacheKey:y,getUniforms:v,acquireProgram:A,releaseProgram:T,releaseShaderCache:M,programs:h,dispose:w}}function TP(){let o=new WeakMap;function e(r){return o.has(r)}function t(r){let a=o.get(r);return a===void 0&&(a={},o.set(r,a)),a}function i(r){o.delete(r)}function n(r,a,l){o.get(r)[a]=l}function s(){o=new WeakMap}return{has:e,get:t,remove:i,update:n,dispose:s}}function wP(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.material.id!==e.material.id?o.material.id-e.material.id:o.z!==e.z?o.z-e.z:o.id-e.id}function Z_(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?e.z-o.z:o.id-e.id}function K_(){const o=[];let e=0;const t=[],i=[],n=[];function s(){e=0,t.length=0,i.length=0,n.length=0}function r(u,d,f,p,m,g){let y=o[e];return y===void 0?(y={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:m,group:g},o[e]=y):(y.id=u.id,y.object=u,y.geometry=d,y.material=f,y.groupOrder=p,y.renderOrder=u.renderOrder,y.z=m,y.group=g),e++,y}function a(u,d,f,p,m,g){const y=r(u,d,f,p,m,g);f.transmission>0?i.push(y):f.transparent===!0?n.push(y):t.push(y)}function l(u,d,f,p,m,g){const y=r(u,d,f,p,m,g);f.transmission>0?i.unshift(y):f.transparent===!0?n.unshift(y):t.unshift(y)}function c(u,d){t.length>1&&t.sort(u||wP),i.length>1&&i.sort(d||Z_),n.length>1&&n.sort(d||Z_)}function h(){for(let u=e,d=o.length;u<d;u++){const f=o[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:i,transparent:n,init:s,push:a,unshift:l,finish:h,sort:c}}function AP(){let o=new WeakMap;function e(i,n){const s=o.get(i);let r;return s===void 0?(r=new K_,o.set(i,[r])):n>=s.length?(r=new K_,s.push(r)):r=s[n],r}function t(){o=new WeakMap}return{get:e,dispose:t}}function EP(){const o={};return{get:function(e){if(o[e.id]!==void 0)return o[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new R,color:new Ce};break;case"SpotLight":t={position:new R,direction:new R,color:new Ce,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new R,color:new Ce,distance:0,decay:0};break;case"HemisphereLight":t={direction:new R,skyColor:new Ce,groundColor:new Ce};break;case"RectAreaLight":t={color:new Ce,position:new R,halfWidth:new R,halfHeight:new R};break}return o[e.id]=t,t}}}function CP(){const o={};return{get:function(e){if(o[e.id]!==void 0)return o[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Z};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Z};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Z,shadowCameraNear:1,shadowCameraFar:1e3};break}return o[e.id]=t,t}}}let RP=0;function NP(o,e){return(e.castShadow?2:0)-(o.castShadow?2:0)+(e.map?1:0)-(o.map?1:0)}function PP(o){const e=new EP,t=CP(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new R);const n=new R,s=new Ye,r=new Ye;function a(c){let h=0,u=0,d=0;for(let S=0;S<9;S++)i.probe[S].set(0,0,0);let f=0,p=0,m=0,g=0,y=0,x=0,_=0,v=0,A=0,T=0,M=0;c.sort(NP);for(let S=0,b=c.length;S<b;S++){const N=c[S],z=N.color,L=N.intensity,k=N.distance,q=N.shadow&&N.shadow.map?N.shadow.map.texture:null;if(N.isAmbientLight)h+=z.r*L,u+=z.g*L,d+=z.b*L;else if(N.isLightProbe){for(let H=0;H<9;H++)i.probe[H].addScaledVector(N.sh.coefficients[H],L);M++}else if(N.isDirectionalLight){const H=e.get(N);if(H.color.copy(N.color).multiplyScalar(N.intensity),N.castShadow){const ae=N.shadow,X=t.get(N);X.shadowIntensity=ae.intensity,X.shadowBias=ae.bias,X.shadowNormalBias=ae.normalBias,X.shadowRadius=ae.radius,X.shadowMapSize=ae.mapSize,i.directionalShadow[f]=X,i.directionalShadowMap[f]=q,i.directionalShadowMatrix[f]=N.shadow.matrix,x++}i.directional[f]=H,f++}else if(N.isSpotLight){const H=e.get(N);H.position.setFromMatrixPosition(N.matrixWorld),H.color.copy(z).multiplyScalar(L),H.distance=k,H.coneCos=Math.cos(N.angle),H.penumbraCos=Math.cos(N.angle*(1-N.penumbra)),H.decay=N.decay,i.spot[m]=H;const ae=N.shadow;if(N.map&&(i.spotLightMap[A]=N.map,A++,ae.updateMatrices(N),N.castShadow&&T++),i.spotLightMatrix[m]=ae.matrix,N.castShadow){const X=t.get(N);X.shadowIntensity=ae.intensity,X.shadowBias=ae.bias,X.shadowNormalBias=ae.normalBias,X.shadowRadius=ae.radius,X.shadowMapSize=ae.mapSize,i.spotShadow[m]=X,i.spotShadowMap[m]=q,v++}m++}else if(N.isRectAreaLight){const H=e.get(N);H.color.copy(z).multiplyScalar(L),H.halfWidth.set(N.width*.5,0,0),H.halfHeight.set(0,N.height*.5,0),i.rectArea[g]=H,g++}else if(N.isPointLight){const H=e.get(N);if(H.color.copy(N.color).multiplyScalar(N.intensity),H.distance=N.distance,H.decay=N.decay,N.castShadow){const ae=N.shadow,X=t.get(N);X.shadowIntensity=ae.intensity,X.shadowBias=ae.bias,X.shadowNormalBias=ae.normalBias,X.shadowRadius=ae.radius,X.shadowMapSize=ae.mapSize,X.shadowCameraNear=ae.camera.near,X.shadowCameraFar=ae.camera.far,i.pointShadow[p]=X,i.pointShadowMap[p]=q,i.pointShadowMatrix[p]=N.shadow.matrix,_++}i.point[p]=H,p++}else if(N.isHemisphereLight){const H=e.get(N);H.skyColor.copy(N.color).multiplyScalar(L),H.groundColor.copy(N.groundColor).multiplyScalar(L),i.hemi[y]=H,y++}}g>0&&(o.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=_e.LTC_FLOAT_1,i.rectAreaLTC2=_e.LTC_FLOAT_2):(i.rectAreaLTC1=_e.LTC_HALF_1,i.rectAreaLTC2=_e.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=u,i.ambient[2]=d;const w=i.hash;(w.directionalLength!==f||w.pointLength!==p||w.spotLength!==m||w.rectAreaLength!==g||w.hemiLength!==y||w.numDirectionalShadows!==x||w.numPointShadows!==_||w.numSpotShadows!==v||w.numSpotMaps!==A||w.numLightProbes!==M)&&(i.directional.length=f,i.spot.length=m,i.rectArea.length=g,i.point.length=p,i.hemi.length=y,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=_,i.pointShadowMap.length=_,i.spotShadow.length=v,i.spotShadowMap.length=v,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=_,i.spotLightMatrix.length=v+A-T,i.spotLightMap.length=A,i.numSpotLightShadowsWithMaps=T,i.numLightProbes=M,w.directionalLength=f,w.pointLength=p,w.spotLength=m,w.rectAreaLength=g,w.hemiLength=y,w.numDirectionalShadows=x,w.numPointShadows=_,w.numSpotShadows=v,w.numSpotMaps=A,w.numLightProbes=M,i.version=RP++)}function l(c,h){let u=0,d=0,f=0,p=0,m=0;const g=h.matrixWorldInverse;for(let y=0,x=c.length;y<x;y++){const _=c[y];if(_.isDirectionalLight){const v=i.directional[u];v.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),v.direction.sub(n),v.direction.transformDirection(g),u++}else if(_.isSpotLight){const v=i.spot[f];v.position.setFromMatrixPosition(_.matrixWorld),v.position.applyMatrix4(g),v.direction.setFromMatrixPosition(_.matrixWorld),n.setFromMatrixPosition(_.target.matrixWorld),v.direction.sub(n),v.direction.transformDirection(g),f++}else if(_.isRectAreaLight){const v=i.rectArea[p];v.position.setFromMatrixPosition(_.matrixWorld),v.position.applyMatrix4(g),r.identity(),s.copy(_.matrixWorld),s.premultiply(g),r.extractRotation(s),v.halfWidth.set(_.width*.5,0,0),v.halfHeight.set(0,_.height*.5,0),v.halfWidth.applyMatrix4(r),v.halfHeight.applyMatrix4(r),p++}else if(_.isPointLight){const v=i.point[d];v.position.setFromMatrixPosition(_.matrixWorld),v.position.applyMatrix4(g),d++}else if(_.isHemisphereLight){const v=i.hemi[m];v.direction.setFromMatrixPosition(_.matrixWorld),v.direction.transformDirection(g),m++}}}return{setup:a,setupView:l,state:i}}function j_(o){const e=new PP(o),t=[],i=[];function n(h){c.camera=h,t.length=0,i.length=0}function s(h){t.push(h)}function r(h){i.push(h)}function a(){e.setup(t)}function l(h){e.setupView(t,h)}const c={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:n,state:c,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:r}}function IP(o){let e=new WeakMap;function t(n,s=0){const r=e.get(n);let a;return r===void 0?(a=new j_(o),e.set(n,[a])):s>=r.length?(a=new j_(o),r.push(a)):a=r[s],a}function i(){e=new WeakMap}return{get:t,dispose:i}}class By extends zi{static get type(){return"MeshDepthMaterial"}constructor(e){super(),this.isMeshDepthMaterial=!0,this.depthPacking=IS,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Oy extends zi{static get type(){return"MeshDistanceMaterial"}constructor(e){super(),this.isMeshDistanceMaterial=!0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const DP=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,LP=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function FP(o,e,t){let i=new nh;const n=new Z,s=new Z,r=new gt,a=new By({depthPacking:DS}),l=new Oy,c={},h=t.maxTextureSize,u={[js]:Yi,[Yi]:js,[ss]:ss},d=new cn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Z},radius:{value:4}},vertexShader:DP,fragmentShader:LP}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new ct;p.setAttribute("position",new bt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Kt(p,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=xy;let y=this.type;this.render=function(T,M,w){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||T.length===0)return;const S=o.getRenderTarget(),b=o.getActiveCubeFace(),N=o.getActiveMipmapLevel(),z=o.state;z.setBlending(hs),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);const L=y!==ns&&this.type===ns,k=y===ns&&this.type!==ns;for(let q=0,H=T.length;q<H;q++){const ae=T[q],X=ae.shadow;if(X===void 0){console.warn("THREE.WebGLShadowMap:",ae,"has no shadow.");continue}if(X.autoUpdate===!1&&X.needsUpdate===!1)continue;n.copy(X.mapSize);const le=X.getFrameExtents();if(n.multiply(le),s.copy(X.mapSize),(n.x>h||n.y>h)&&(n.x>h&&(s.x=Math.floor(h/le.x),n.x=s.x*le.x,X.mapSize.x=s.x),n.y>h&&(s.y=Math.floor(h/le.y),n.y=s.y*le.y,X.mapSize.y=s.y)),X.map===null||L===!0||k===!0){const xe=this.type!==ns?{minFilter:Ci,magFilter:Ci}:{};X.map!==null&&X.map.dispose(),X.map=new Dn(n.x,n.y,xe),X.map.texture.name=ae.name+".shadowMap",X.camera.updateProjectionMatrix()}o.setRenderTarget(X.map),o.clear();const ue=X.getViewportCount();for(let xe=0;xe<ue;xe++){const $e=X.getViewport(xe);r.set(s.x*$e.x,s.y*$e.y,s.x*$e.z,s.y*$e.w),z.viewport(r),X.updateMatrices(ae,xe),i=X.getFrustum(),v(M,w,X.camera,ae,this.type)}X.isPointLightShadow!==!0&&this.type===ns&&x(X,w),X.needsUpdate=!1}y=this.type,g.needsUpdate=!1,o.setRenderTarget(S,b,N)};function x(T,M){const w=e.update(m);d.defines.VSM_SAMPLES!==T.blurSamples&&(d.defines.VSM_SAMPLES=T.blurSamples,f.defines.VSM_SAMPLES=T.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),T.mapPass===null&&(T.mapPass=new Dn(n.x,n.y)),d.uniforms.shadow_pass.value=T.map.texture,d.uniforms.resolution.value=T.mapSize,d.uniforms.radius.value=T.radius,o.setRenderTarget(T.mapPass),o.clear(),o.renderBufferDirect(M,null,w,d,m,null),f.uniforms.shadow_pass.value=T.mapPass.texture,f.uniforms.resolution.value=T.mapSize,f.uniforms.radius.value=T.radius,o.setRenderTarget(T.map),o.clear(),o.renderBufferDirect(M,null,w,f,m,null)}function _(T,M,w,S){let b=null;const N=w.isPointLight===!0?T.customDistanceMaterial:T.customDepthMaterial;if(N!==void 0)b=N;else if(b=w.isPointLight===!0?l:a,o.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const z=b.uuid,L=M.uuid;let k=c[z];k===void 0&&(k={},c[z]=k);let q=k[L];q===void 0&&(q=b.clone(),k[L]=q,M.addEventListener("dispose",A)),b=q}if(b.visible=M.visible,b.wireframe=M.wireframe,S===ns?b.side=M.shadowSide!==null?M.shadowSide:M.side:b.side=M.shadowSide!==null?M.shadowSide:u[M.side],b.alphaMap=M.alphaMap,b.alphaTest=M.alphaTest,b.map=M.map,b.clipShadows=M.clipShadows,b.clippingPlanes=M.clippingPlanes,b.clipIntersection=M.clipIntersection,b.displacementMap=M.displacementMap,b.displacementScale=M.displacementScale,b.displacementBias=M.displacementBias,b.wireframeLinewidth=M.wireframeLinewidth,b.linewidth=M.linewidth,w.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const z=o.properties.get(b);z.light=w}return b}function v(T,M,w,S,b){if(T.visible===!1)return;if(T.layers.test(M.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&b===ns)&&(!T.frustumCulled||i.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,T.matrixWorld);const L=e.update(T),k=T.material;if(Array.isArray(k)){const q=L.groups;for(let H=0,ae=q.length;H<ae;H++){const X=q[H],le=k[X.materialIndex];if(le&&le.visible){const ue=_(T,le,S,b);T.onBeforeShadow(o,T,M,w,L,ue,X),o.renderBufferDirect(w,null,L,ue,T,X),T.onAfterShadow(o,T,M,w,L,ue,X)}}}else if(k.visible){const q=_(T,k,S,b);T.onBeforeShadow(o,T,M,w,L,q,null),o.renderBufferDirect(w,null,L,q,T,null),T.onAfterShadow(o,T,M,w,L,q,null)}}const z=T.children;for(let L=0,k=z.length;L<k;L++)v(z[L],M,w,S,b)}function A(T){T.target.removeEventListener("dispose",A);for(const w in c){const S=c[w],b=T.target.uuid;b in S&&(S[b].dispose(),delete S[b])}}}const UP={[md]:gd,[yd]:vd,[xd]:bd,[Fo]:_d,[gd]:md,[vd]:yd,[bd]:xd,[_d]:Fo};function BP(o,e){function t(){let F=!1;const Te=new gt;let K=null;const se=new gt(0,0,0,0);return{setMask:function(Re){K!==Re&&!F&&(o.colorMask(Re,Re,Re,Re),K=Re)},setLocked:function(Re){F=Re},setClear:function(Re,Ae,rt,Xt,Pi){Pi===!0&&(Re*=Xt,Ae*=Xt,rt*=Xt),Te.set(Re,Ae,rt,Xt),se.equals(Te)===!1&&(o.clearColor(Re,Ae,rt,Xt),se.copy(Te))},reset:function(){F=!1,K=null,se.set(-1,0,0,0)}}}function i(){let F=!1,Te=!1,K=null,se=null,Re=null;return{setReversed:function(Ae){if(Te!==Ae){const rt=e.get("EXT_clip_control");Te?rt.clipControlEXT(rt.LOWER_LEFT_EXT,rt.ZERO_TO_ONE_EXT):rt.clipControlEXT(rt.LOWER_LEFT_EXT,rt.NEGATIVE_ONE_TO_ONE_EXT);const Xt=Re;Re=null,this.setClear(Xt)}Te=Ae},getReversed:function(){return Te},setTest:function(Ae){Ae?ye(o.DEPTH_TEST):ke(o.DEPTH_TEST)},setMask:function(Ae){K!==Ae&&!F&&(o.depthMask(Ae),K=Ae)},setFunc:function(Ae){if(Te&&(Ae=UP[Ae]),se!==Ae){switch(Ae){case md:o.depthFunc(o.NEVER);break;case gd:o.depthFunc(o.ALWAYS);break;case yd:o.depthFunc(o.LESS);break;case Fo:o.depthFunc(o.LEQUAL);break;case xd:o.depthFunc(o.EQUAL);break;case _d:o.depthFunc(o.GEQUAL);break;case vd:o.depthFunc(o.GREATER);break;case bd:o.depthFunc(o.NOTEQUAL);break;default:o.depthFunc(o.LEQUAL)}se=Ae}},setLocked:function(Ae){F=Ae},setClear:function(Ae){Re!==Ae&&(Te&&(Ae=1-Ae),o.clearDepth(Ae),Re=Ae)},reset:function(){F=!1,K=null,se=null,Re=null,Te=!1}}}function n(){let F=!1,Te=null,K=null,se=null,Re=null,Ae=null,rt=null,Xt=null,Pi=null;return{setTest:function(It){F||(It?ye(o.STENCIL_TEST):ke(o.STENCIL_TEST))},setMask:function(It){Te!==It&&!F&&(o.stencilMask(It),Te=It)},setFunc:function(It,Fn,vs){(K!==It||se!==Fn||Re!==vs)&&(o.stencilFunc(It,Fn,vs),K=It,se=Fn,Re=vs)},setOp:function(It,Fn,vs){(Ae!==It||rt!==Fn||Xt!==vs)&&(o.stencilOp(It,Fn,vs),Ae=It,rt=Fn,Xt=vs)},setLocked:function(It){F=It},setClear:function(It){Pi!==It&&(o.clearStencil(It),Pi=It)},reset:function(){F=!1,Te=null,K=null,se=null,Re=null,Ae=null,rt=null,Xt=null,Pi=null}}}const s=new t,r=new i,a=new n,l=new WeakMap,c=new WeakMap;let h={},u={},d=new WeakMap,f=[],p=null,m=!1,g=null,y=null,x=null,_=null,v=null,A=null,T=null,M=new Ce(0,0,0),w=0,S=!1,b=null,N=null,z=null,L=null,k=null;const q=o.getParameter(o.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let H=!1,ae=0;const X=o.getParameter(o.VERSION);X.indexOf("WebGL")!==-1?(ae=parseFloat(/^WebGL (\d)/.exec(X)[1]),H=ae>=1):X.indexOf("OpenGL ES")!==-1&&(ae=parseFloat(/^OpenGL ES (\d)/.exec(X)[1]),H=ae>=2);let le=null,ue={};const xe=o.getParameter(o.SCISSOR_BOX),$e=o.getParameter(o.VIEWPORT),tt=new gt().fromArray(xe),J=new gt().fromArray($e);function ce(F,Te,K,se){const Re=new Uint8Array(4),Ae=o.createTexture();o.bindTexture(F,Ae),o.texParameteri(F,o.TEXTURE_MIN_FILTER,o.NEAREST),o.texParameteri(F,o.TEXTURE_MAG_FILTER,o.NEAREST);for(let rt=0;rt<K;rt++)F===o.TEXTURE_3D||F===o.TEXTURE_2D_ARRAY?o.texImage3D(Te,0,o.RGBA,1,1,se,0,o.RGBA,o.UNSIGNED_BYTE,Re):o.texImage2D(Te+rt,0,o.RGBA,1,1,0,o.RGBA,o.UNSIGNED_BYTE,Re);return Ae}const we={};we[o.TEXTURE_2D]=ce(o.TEXTURE_2D,o.TEXTURE_2D,1),we[o.TEXTURE_CUBE_MAP]=ce(o.TEXTURE_CUBE_MAP,o.TEXTURE_CUBE_MAP_POSITIVE_X,6),we[o.TEXTURE_2D_ARRAY]=ce(o.TEXTURE_2D_ARRAY,o.TEXTURE_2D_ARRAY,1,1),we[o.TEXTURE_3D]=ce(o.TEXTURE_3D,o.TEXTURE_3D,1,1),s.setClear(0,0,0,1),r.setClear(1),a.setClear(0),ye(o.DEPTH_TEST),r.setFunc(Fo),he(!1),De(pg),ye(o.CULL_FACE),I(hs);function ye(F){h[F]!==!0&&(o.enable(F),h[F]=!0)}function ke(F){h[F]!==!1&&(o.disable(F),h[F]=!1)}function Ze(F,Te){return u[F]!==Te?(o.bindFramebuffer(F,Te),u[F]=Te,F===o.DRAW_FRAMEBUFFER&&(u[o.FRAMEBUFFER]=Te),F===o.FRAMEBUFFER&&(u[o.DRAW_FRAMEBUFFER]=Te),!0):!1}function He(F,Te){let K=f,se=!1;if(F){K=d.get(Te),K===void 0&&(K=[],d.set(Te,K));const Re=F.textures;if(K.length!==Re.length||K[0]!==o.COLOR_ATTACHMENT0){for(let Ae=0,rt=Re.length;Ae<rt;Ae++)K[Ae]=o.COLOR_ATTACHMENT0+Ae;K.length=Re.length,se=!0}}else K[0]!==o.BACK&&(K[0]=o.BACK,se=!0);se&&o.drawBuffers(K)}function ft(F){return p!==F?(o.useProgram(F),p=F,!0):!1}const re={[Ar]:o.FUNC_ADD,[eS]:o.FUNC_SUBTRACT,[tS]:o.FUNC_REVERSE_SUBTRACT};re[iS]=o.MIN,re[nS]=o.MAX;const pe={[sS]:o.ZERO,[rS]:o.ONE,[oS]:o.SRC_COLOR,[fd]:o.SRC_ALPHA,[dS]:o.SRC_ALPHA_SATURATE,[hS]:o.DST_COLOR,[lS]:o.DST_ALPHA,[aS]:o.ONE_MINUS_SRC_COLOR,[pd]:o.ONE_MINUS_SRC_ALPHA,[uS]:o.ONE_MINUS_DST_COLOR,[cS]:o.ONE_MINUS_DST_ALPHA,[fS]:o.CONSTANT_COLOR,[pS]:o.ONE_MINUS_CONSTANT_COLOR,[mS]:o.CONSTANT_ALPHA,[gS]:o.ONE_MINUS_CONSTANT_ALPHA};function I(F,Te,K,se,Re,Ae,rt,Xt,Pi,It){if(F===hs){m===!0&&(ke(o.BLEND),m=!1);return}if(m===!1&&(ye(o.BLEND),m=!0),F!==Qb){if(F!==g||It!==S){if((y!==Ar||v!==Ar)&&(o.blendEquation(o.FUNC_ADD),y=Ar,v=Ar),It)switch(F){case Co:o.blendFuncSeparate(o.ONE,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA);break;case mg:o.blendFunc(o.ONE,o.ONE);break;case gg:o.blendFuncSeparate(o.ZERO,o.ONE_MINUS_SRC_COLOR,o.ZERO,o.ONE);break;case yg:o.blendFuncSeparate(o.ZERO,o.SRC_COLOR,o.ZERO,o.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}else switch(F){case Co:o.blendFuncSeparate(o.SRC_ALPHA,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA);break;case mg:o.blendFunc(o.SRC_ALPHA,o.ONE);break;case gg:o.blendFuncSeparate(o.ZERO,o.ONE_MINUS_SRC_COLOR,o.ZERO,o.ONE);break;case yg:o.blendFunc(o.ZERO,o.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}x=null,_=null,A=null,T=null,M.set(0,0,0),w=0,g=F,S=It}return}Re=Re||Te,Ae=Ae||K,rt=rt||se,(Te!==y||Re!==v)&&(o.blendEquationSeparate(re[Te],re[Re]),y=Te,v=Re),(K!==x||se!==_||Ae!==A||rt!==T)&&(o.blendFuncSeparate(pe[K],pe[se],pe[Ae],pe[rt]),x=K,_=se,A=Ae,T=rt),(Xt.equals(M)===!1||Pi!==w)&&(o.blendColor(Xt.r,Xt.g,Xt.b,Pi),M.copy(Xt),w=Pi),g=F,S=!1}function Ge(F,Te){F.side===ss?ke(o.CULL_FACE):ye(o.CULL_FACE);let K=F.side===Yi;Te&&(K=!K),he(K),F.blending===Co&&F.transparent===!1?I(hs):I(F.blending,F.blendEquation,F.blendSrc,F.blendDst,F.blendEquationAlpha,F.blendSrcAlpha,F.blendDstAlpha,F.blendColor,F.blendAlpha,F.premultipliedAlpha),r.setFunc(F.depthFunc),r.setTest(F.depthTest),r.setMask(F.depthWrite),s.setMask(F.colorWrite);const se=F.stencilWrite;a.setTest(se),se&&(a.setMask(F.stencilWriteMask),a.setFunc(F.stencilFunc,F.stencilRef,F.stencilFuncMask),a.setOp(F.stencilFail,F.stencilZFail,F.stencilZPass)),Xe(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),F.alphaToCoverage===!0?ye(o.SAMPLE_ALPHA_TO_COVERAGE):ke(o.SAMPLE_ALPHA_TO_COVERAGE)}function he(F){b!==F&&(F?o.frontFace(o.CW):o.frontFace(o.CCW),b=F)}function De(F){F!==Kb?(ye(o.CULL_FACE),F!==N&&(F===pg?o.cullFace(o.BACK):F===jb?o.cullFace(o.FRONT):o.cullFace(o.FRONT_AND_BACK))):ke(o.CULL_FACE),N=F}function ve(F){F!==z&&(H&&o.lineWidth(F),z=F)}function Xe(F,Te,K){F?(ye(o.POLYGON_OFFSET_FILL),(L!==Te||k!==K)&&(o.polygonOffset(Te,K),L=Te,k=K)):ke(o.POLYGON_OFFSET_FILL)}function Pe(F){F?ye(o.SCISSOR_TEST):ke(o.SCISSOR_TEST)}function P(F){F===void 0&&(F=o.TEXTURE0+q-1),le!==F&&(o.activeTexture(F),le=F)}function E(F,Te,K){K===void 0&&(le===null?K=o.TEXTURE0+q-1:K=le);let se=ue[K];se===void 0&&(se={type:void 0,texture:void 0},ue[K]=se),(se.type!==F||se.texture!==Te)&&(le!==K&&(o.activeTexture(K),le=K),o.bindTexture(F,Te||we[F]),se.type=F,se.texture=Te)}function V(){const F=ue[le];F!==void 0&&F.type!==void 0&&(o.bindTexture(F.type,null),F.type=void 0,F.texture=void 0)}function te(){try{o.compressedTexImage2D.apply(o,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function oe(){try{o.compressedTexImage3D.apply(o,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ie(){try{o.texSubImage2D.apply(o,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Ue(){try{o.texSubImage3D.apply(o,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Me(){try{o.compressedTexSubImage2D.apply(o,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Ie(){try{o.compressedTexSubImage3D.apply(o,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function pt(){try{o.texStorage2D.apply(o,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function de(){try{o.texStorage3D.apply(o,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Le(){try{o.texImage2D.apply(o,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function qe(){try{o.texImage3D.apply(o,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Ke(F){tt.equals(F)===!1&&(o.scissor(F.x,F.y,F.z,F.w),tt.copy(F))}function Fe(F){J.equals(F)===!1&&(o.viewport(F.x,F.y,F.z,F.w),J.copy(F))}function xt(F,Te){let K=c.get(Te);K===void 0&&(K=new WeakMap,c.set(Te,K));let se=K.get(F);se===void 0&&(se=o.getUniformBlockIndex(Te,F.name),K.set(F,se))}function ht(F,Te){const se=c.get(Te).get(F);l.get(Te)!==se&&(o.uniformBlockBinding(Te,se,F.__bindingPointIndex),l.set(Te,se))}function Ft(){o.disable(o.BLEND),o.disable(o.CULL_FACE),o.disable(o.DEPTH_TEST),o.disable(o.POLYGON_OFFSET_FILL),o.disable(o.SCISSOR_TEST),o.disable(o.STENCIL_TEST),o.disable(o.SAMPLE_ALPHA_TO_COVERAGE),o.blendEquation(o.FUNC_ADD),o.blendFunc(o.ONE,o.ZERO),o.blendFuncSeparate(o.ONE,o.ZERO,o.ONE,o.ZERO),o.blendColor(0,0,0,0),o.colorMask(!0,!0,!0,!0),o.clearColor(0,0,0,0),o.depthMask(!0),o.depthFunc(o.LESS),r.setReversed(!1),o.clearDepth(1),o.stencilMask(4294967295),o.stencilFunc(o.ALWAYS,0,4294967295),o.stencilOp(o.KEEP,o.KEEP,o.KEEP),o.clearStencil(0),o.cullFace(o.BACK),o.frontFace(o.CCW),o.polygonOffset(0,0),o.activeTexture(o.TEXTURE0),o.bindFramebuffer(o.FRAMEBUFFER,null),o.bindFramebuffer(o.DRAW_FRAMEBUFFER,null),o.bindFramebuffer(o.READ_FRAMEBUFFER,null),o.useProgram(null),o.lineWidth(1),o.scissor(0,0,o.canvas.width,o.canvas.height),o.viewport(0,0,o.canvas.width,o.canvas.height),h={},le=null,ue={},u={},d=new WeakMap,f=[],p=null,m=!1,g=null,y=null,x=null,_=null,v=null,A=null,T=null,M=new Ce(0,0,0),w=0,S=!1,b=null,N=null,z=null,L=null,k=null,tt.set(0,0,o.canvas.width,o.canvas.height),J.set(0,0,o.canvas.width,o.canvas.height),s.reset(),r.reset(),a.reset()}return{buffers:{color:s,depth:r,stencil:a},enable:ye,disable:ke,bindFramebuffer:Ze,drawBuffers:He,useProgram:ft,setBlending:I,setMaterial:Ge,setFlipSided:he,setCullFace:De,setLineWidth:ve,setPolygonOffset:Xe,setScissorTest:Pe,activeTexture:P,bindTexture:E,unbindTexture:V,compressedTexImage2D:te,compressedTexImage3D:oe,texImage2D:Le,texImage3D:qe,updateUBOMapping:xt,uniformBlockBinding:ht,texStorage2D:pt,texStorage3D:de,texSubImage2D:ie,texSubImage3D:Ue,compressedTexSubImage2D:Me,compressedTexSubImage3D:Ie,scissor:Ke,viewport:Fe,reset:Ft}}function OP(o,e){const t=o.image&&o.image.width?o.image.width/o.image.height:1;return t>e?(o.repeat.x=1,o.repeat.y=t/e,o.offset.x=0,o.offset.y=(1-o.repeat.y)/2):(o.repeat.x=e/t,o.repeat.y=1,o.offset.x=(1-o.repeat.x)/2,o.offset.y=0),o}function zP(o,e){const t=o.image&&o.image.width?o.image.width/o.image.height:1;return t>e?(o.repeat.x=e/t,o.repeat.y=1,o.offset.x=(1-o.repeat.x)/2,o.offset.y=0):(o.repeat.x=1,o.repeat.y=t/e,o.offset.x=0,o.offset.y=(1-o.repeat.y)/2),o}function kP(o){return o.repeat.x=1,o.repeat.y=1,o.offset.x=0,o.offset.y=0,o}function wg(o,e,t,i){const n=GP(i);switch(t){case My:return o*e;case wy:return o*e;case Ay:return o*e*2;case wf:return o*e/n.components*n.byteLength;case Jc:return o*e/n.components*n.byteLength;case Ey:return o*e*2/n.components*n.byteLength;case Af:return o*e*2/n.components*n.byteLength;case Ty:return o*e*3/n.components*n.byteLength;case qi:return o*e*4/n.components*n.byteLength;case Ef:return o*e*4/n.components*n.byteLength;case oc:case ac:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*8;case lc:case cc:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*16;case Md:case wd:return Math.max(o,16)*Math.max(e,8)/4;case Sd:case Td:return Math.max(o,8)*Math.max(e,8)/2;case Ad:case Ed:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*8;case Cd:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*16;case Rd:return Math.floor((o+3)/4)*Math.floor((e+3)/4)*16;case Nd:return Math.floor((o+4)/5)*Math.floor((e+3)/4)*16;case Pd:return Math.floor((o+4)/5)*Math.floor((e+4)/5)*16;case Id:return Math.floor((o+5)/6)*Math.floor((e+4)/5)*16;case Dd:return Math.floor((o+5)/6)*Math.floor((e+5)/6)*16;case Ld:return Math.floor((o+7)/8)*Math.floor((e+4)/5)*16;case Fd:return Math.floor((o+7)/8)*Math.floor((e+5)/6)*16;case Ud:return Math.floor((o+7)/8)*Math.floor((e+7)/8)*16;case Bd:return Math.floor((o+9)/10)*Math.floor((e+4)/5)*16;case Od:return Math.floor((o+9)/10)*Math.floor((e+5)/6)*16;case zd:return Math.floor((o+9)/10)*Math.floor((e+7)/8)*16;case kd:return Math.floor((o+9)/10)*Math.floor((e+9)/10)*16;case Gd:return Math.floor((o+11)/12)*Math.floor((e+9)/10)*16;case Vd:return Math.floor((o+11)/12)*Math.floor((e+11)/12)*16;case hc:case Hd:case Wd:return Math.ceil(o/4)*Math.ceil(e/4)*16;case Cy:case $d:return Math.ceil(o/4)*Math.ceil(e/4)*8;case Xd:case qd:return Math.ceil(o/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function GP(o){switch(o){case fs:case vy:return{byteLength:1,components:1};case ol:case by:case $o:return{byteLength:2,components:1};case Mf:case Tf:return{byteLength:2,components:4};case Qs:case Sf:case rn:return{byteLength:4,components:1};case Sy:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${o}.`)}const VP={contain:OP,cover:zP,fill:kP,getByteLength:wg};function HP(o,e,t,i,n,s,r){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new Z,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(P,E){return f?new OffscreenCanvas(P,E):Nc("canvas")}function m(P,E,V){let te=1;const oe=Pe(P);if((oe.width>V||oe.height>V)&&(te=V/Math.max(oe.width,oe.height)),te<1)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const ie=Math.floor(te*oe.width),Ue=Math.floor(te*oe.height);u===void 0&&(u=p(ie,Ue));const Me=E?p(ie,Ue):u;return Me.width=ie,Me.height=Ue,Me.getContext("2d").drawImage(P,0,0,ie,Ue),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+oe.width+"x"+oe.height+") to ("+ie+"x"+Ue+")."),Me}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+oe.width+"x"+oe.height+")."),P;return P}function g(P){return P.generateMipmaps}function y(P){o.generateMipmap(P)}function x(P){return P.isWebGLCubeRenderTarget?o.TEXTURE_CUBE_MAP:P.isWebGL3DRenderTarget?o.TEXTURE_3D:P.isWebGLArrayRenderTarget||P.isCompressedArrayTexture?o.TEXTURE_2D_ARRAY:o.TEXTURE_2D}function _(P,E,V,te,oe=!1){if(P!==null){if(o[P]!==void 0)return o[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let ie=E;if(E===o.RED&&(V===o.FLOAT&&(ie=o.R32F),V===o.HALF_FLOAT&&(ie=o.R16F),V===o.UNSIGNED_BYTE&&(ie=o.R8)),E===o.RED_INTEGER&&(V===o.UNSIGNED_BYTE&&(ie=o.R8UI),V===o.UNSIGNED_SHORT&&(ie=o.R16UI),V===o.UNSIGNED_INT&&(ie=o.R32UI),V===o.BYTE&&(ie=o.R8I),V===o.SHORT&&(ie=o.R16I),V===o.INT&&(ie=o.R32I)),E===o.RG&&(V===o.FLOAT&&(ie=o.RG32F),V===o.HALF_FLOAT&&(ie=o.RG16F),V===o.UNSIGNED_BYTE&&(ie=o.RG8)),E===o.RG_INTEGER&&(V===o.UNSIGNED_BYTE&&(ie=o.RG8UI),V===o.UNSIGNED_SHORT&&(ie=o.RG16UI),V===o.UNSIGNED_INT&&(ie=o.RG32UI),V===o.BYTE&&(ie=o.RG8I),V===o.SHORT&&(ie=o.RG16I),V===o.INT&&(ie=o.RG32I)),E===o.RGB_INTEGER&&(V===o.UNSIGNED_BYTE&&(ie=o.RGB8UI),V===o.UNSIGNED_SHORT&&(ie=o.RGB16UI),V===o.UNSIGNED_INT&&(ie=o.RGB32UI),V===o.BYTE&&(ie=o.RGB8I),V===o.SHORT&&(ie=o.RGB16I),V===o.INT&&(ie=o.RGB32I)),E===o.RGBA_INTEGER&&(V===o.UNSIGNED_BYTE&&(ie=o.RGBA8UI),V===o.UNSIGNED_SHORT&&(ie=o.RGBA16UI),V===o.UNSIGNED_INT&&(ie=o.RGBA32UI),V===o.BYTE&&(ie=o.RGBA8I),V===o.SHORT&&(ie=o.RGBA16I),V===o.INT&&(ie=o.RGBA32I)),E===o.RGB&&V===o.UNSIGNED_INT_5_9_9_9_REV&&(ie=o.RGB9_E5),E===o.RGBA){const Ue=oe?Qc:yt.getTransfer(te);V===o.FLOAT&&(ie=o.RGBA32F),V===o.HALF_FLOAT&&(ie=o.RGBA16F),V===o.UNSIGNED_BYTE&&(ie=Ue===Dt?o.SRGB8_ALPHA8:o.RGBA8),V===o.UNSIGNED_SHORT_4_4_4_4&&(ie=o.RGBA4),V===o.UNSIGNED_SHORT_5_5_5_1&&(ie=o.RGB5_A1)}return(ie===o.R16F||ie===o.R32F||ie===o.RG16F||ie===o.RG32F||ie===o.RGBA16F||ie===o.RGBA32F)&&e.get("EXT_color_buffer_float"),ie}function v(P,E){let V;return P?E===null||E===Qs||E===Uo?V=o.DEPTH24_STENCIL8:E===rn?V=o.DEPTH32F_STENCIL8:E===ol&&(V=o.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):E===null||E===Qs||E===Uo?V=o.DEPTH_COMPONENT24:E===rn?V=o.DEPTH_COMPONENT32F:E===ol&&(V=o.DEPTH_COMPONENT16),V}function A(P,E){return g(P)===!0||P.isFramebufferTexture&&P.minFilter!==Ci&&P.minFilter!==ci?Math.log2(Math.max(E.width,E.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?E.mipmaps.length:1}function T(P){const E=P.target;E.removeEventListener("dispose",T),w(E),E.isVideoTexture&&h.delete(E)}function M(P){const E=P.target;E.removeEventListener("dispose",M),b(E)}function w(P){const E=i.get(P);if(E.__webglInit===void 0)return;const V=P.source,te=d.get(V);if(te){const oe=te[E.__cacheKey];oe.usedTimes--,oe.usedTimes===0&&S(P),Object.keys(te).length===0&&d.delete(V)}i.remove(P)}function S(P){const E=i.get(P);o.deleteTexture(E.__webglTexture);const V=P.source,te=d.get(V);delete te[E.__cacheKey],r.memory.textures--}function b(P){const E=i.get(P);if(P.depthTexture&&(P.depthTexture.dispose(),i.remove(P.depthTexture)),P.isWebGLCubeRenderTarget)for(let te=0;te<6;te++){if(Array.isArray(E.__webglFramebuffer[te]))for(let oe=0;oe<E.__webglFramebuffer[te].length;oe++)o.deleteFramebuffer(E.__webglFramebuffer[te][oe]);else o.deleteFramebuffer(E.__webglFramebuffer[te]);E.__webglDepthbuffer&&o.deleteRenderbuffer(E.__webglDepthbuffer[te])}else{if(Array.isArray(E.__webglFramebuffer))for(let te=0;te<E.__webglFramebuffer.length;te++)o.deleteFramebuffer(E.__webglFramebuffer[te]);else o.deleteFramebuffer(E.__webglFramebuffer);if(E.__webglDepthbuffer&&o.deleteRenderbuffer(E.__webglDepthbuffer),E.__webglMultisampledFramebuffer&&o.deleteFramebuffer(E.__webglMultisampledFramebuffer),E.__webglColorRenderbuffer)for(let te=0;te<E.__webglColorRenderbuffer.length;te++)E.__webglColorRenderbuffer[te]&&o.deleteRenderbuffer(E.__webglColorRenderbuffer[te]);E.__webglDepthRenderbuffer&&o.deleteRenderbuffer(E.__webglDepthRenderbuffer)}const V=P.textures;for(let te=0,oe=V.length;te<oe;te++){const ie=i.get(V[te]);ie.__webglTexture&&(o.deleteTexture(ie.__webglTexture),r.memory.textures--),i.remove(V[te])}i.remove(P)}let N=0;function z(){N=0}function L(){const P=N;return P>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+n.maxTextures),N+=1,P}function k(P){const E=[];return E.push(P.wrapS),E.push(P.wrapT),E.push(P.wrapR||0),E.push(P.magFilter),E.push(P.minFilter),E.push(P.anisotropy),E.push(P.internalFormat),E.push(P.format),E.push(P.type),E.push(P.generateMipmaps),E.push(P.premultiplyAlpha),E.push(P.flipY),E.push(P.unpackAlignment),E.push(P.colorSpace),E.join()}function q(P,E){const V=i.get(P);if(P.isVideoTexture&&ve(P),P.isRenderTargetTexture===!1&&P.version>0&&V.__version!==P.version){const te=P.image;if(te===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(te.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{J(V,P,E);return}}t.bindTexture(o.TEXTURE_2D,V.__webglTexture,o.TEXTURE0+E)}function H(P,E){const V=i.get(P);if(P.version>0&&V.__version!==P.version){J(V,P,E);return}t.bindTexture(o.TEXTURE_2D_ARRAY,V.__webglTexture,o.TEXTURE0+E)}function ae(P,E){const V=i.get(P);if(P.version>0&&V.__version!==P.version){J(V,P,E);return}t.bindTexture(o.TEXTURE_3D,V.__webglTexture,o.TEXTURE0+E)}function X(P,E){const V=i.get(P);if(P.version>0&&V.__version!==P.version){ce(V,P,E);return}t.bindTexture(o.TEXTURE_CUBE_MAP,V.__webglTexture,o.TEXTURE0+E)}const le={[Mc]:o.REPEAT,[Nn]:o.CLAMP_TO_EDGE,[Tc]:o.MIRRORED_REPEAT},ue={[Ci]:o.NEAREST,[_y]:o.NEAREST_MIPMAP_NEAREST,[ka]:o.NEAREST_MIPMAP_LINEAR,[ci]:o.LINEAR,[rc]:o.LINEAR_MIPMAP_NEAREST,[os]:o.LINEAR_MIPMAP_LINEAR},xe={[FS]:o.NEVER,[GS]:o.ALWAYS,[US]:o.LESS,[Ny]:o.LEQUAL,[BS]:o.EQUAL,[kS]:o.GEQUAL,[OS]:o.GREATER,[zS]:o.NOTEQUAL};function $e(P,E){if(E.type===rn&&e.has("OES_texture_float_linear")===!1&&(E.magFilter===ci||E.magFilter===rc||E.magFilter===ka||E.magFilter===os||E.minFilter===ci||E.minFilter===rc||E.minFilter===ka||E.minFilter===os)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),o.texParameteri(P,o.TEXTURE_WRAP_S,le[E.wrapS]),o.texParameteri(P,o.TEXTURE_WRAP_T,le[E.wrapT]),(P===o.TEXTURE_3D||P===o.TEXTURE_2D_ARRAY)&&o.texParameteri(P,o.TEXTURE_WRAP_R,le[E.wrapR]),o.texParameteri(P,o.TEXTURE_MAG_FILTER,ue[E.magFilter]),o.texParameteri(P,o.TEXTURE_MIN_FILTER,ue[E.minFilter]),E.compareFunction&&(o.texParameteri(P,o.TEXTURE_COMPARE_MODE,o.COMPARE_REF_TO_TEXTURE),o.texParameteri(P,o.TEXTURE_COMPARE_FUNC,xe[E.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(E.magFilter===Ci||E.minFilter!==ka&&E.minFilter!==os||E.type===rn&&e.has("OES_texture_float_linear")===!1)return;if(E.anisotropy>1||i.get(E).__currentAnisotropy){const V=e.get("EXT_texture_filter_anisotropic");o.texParameterf(P,V.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,n.getMaxAnisotropy())),i.get(E).__currentAnisotropy=E.anisotropy}}}function tt(P,E){let V=!1;P.__webglInit===void 0&&(P.__webglInit=!0,E.addEventListener("dispose",T));const te=E.source;let oe=d.get(te);oe===void 0&&(oe={},d.set(te,oe));const ie=k(E);if(ie!==P.__cacheKey){oe[ie]===void 0&&(oe[ie]={texture:o.createTexture(),usedTimes:0},r.memory.textures++,V=!0),oe[ie].usedTimes++;const Ue=oe[P.__cacheKey];Ue!==void 0&&(oe[P.__cacheKey].usedTimes--,Ue.usedTimes===0&&S(E)),P.__cacheKey=ie,P.__webglTexture=oe[ie].texture}return V}function J(P,E,V){let te=o.TEXTURE_2D;(E.isDataArrayTexture||E.isCompressedArrayTexture)&&(te=o.TEXTURE_2D_ARRAY),E.isData3DTexture&&(te=o.TEXTURE_3D);const oe=tt(P,E),ie=E.source;t.bindTexture(te,P.__webglTexture,o.TEXTURE0+V);const Ue=i.get(ie);if(ie.version!==Ue.__version||oe===!0){t.activeTexture(o.TEXTURE0+V);const Me=yt.getPrimaries(yt.workingColorSpace),Ie=E.colorSpace===Os?null:yt.getPrimaries(E.colorSpace),pt=E.colorSpace===Os||Me===Ie?o.NONE:o.BROWSER_DEFAULT_WEBGL;o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,E.flipY),o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),o.pixelStorei(o.UNPACK_ALIGNMENT,E.unpackAlignment),o.pixelStorei(o.UNPACK_COLORSPACE_CONVERSION_WEBGL,pt);let de=m(E.image,!1,n.maxTextureSize);de=Xe(E,de);const Le=s.convert(E.format,E.colorSpace),qe=s.convert(E.type);let Ke=_(E.internalFormat,Le,qe,E.colorSpace,E.isVideoTexture);$e(te,E);let Fe;const xt=E.mipmaps,ht=E.isVideoTexture!==!0,Ft=Ue.__version===void 0||oe===!0,F=ie.dataReady,Te=A(E,de);if(E.isDepthTexture)Ke=v(E.format===Bo,E.type),Ft&&(ht?t.texStorage2D(o.TEXTURE_2D,1,Ke,de.width,de.height):t.texImage2D(o.TEXTURE_2D,0,Ke,de.width,de.height,0,Le,qe,null));else if(E.isDataTexture)if(xt.length>0){ht&&Ft&&t.texStorage2D(o.TEXTURE_2D,Te,Ke,xt[0].width,xt[0].height);for(let K=0,se=xt.length;K<se;K++)Fe=xt[K],ht?F&&t.texSubImage2D(o.TEXTURE_2D,K,0,0,Fe.width,Fe.height,Le,qe,Fe.data):t.texImage2D(o.TEXTURE_2D,K,Ke,Fe.width,Fe.height,0,Le,qe,Fe.data);E.generateMipmaps=!1}else ht?(Ft&&t.texStorage2D(o.TEXTURE_2D,Te,Ke,de.width,de.height),F&&t.texSubImage2D(o.TEXTURE_2D,0,0,0,de.width,de.height,Le,qe,de.data)):t.texImage2D(o.TEXTURE_2D,0,Ke,de.width,de.height,0,Le,qe,de.data);else if(E.isCompressedTexture)if(E.isCompressedArrayTexture){ht&&Ft&&t.texStorage3D(o.TEXTURE_2D_ARRAY,Te,Ke,xt[0].width,xt[0].height,de.depth);for(let K=0,se=xt.length;K<se;K++)if(Fe=xt[K],E.format!==qi)if(Le!==null)if(ht){if(F)if(E.layerUpdates.size>0){const Re=wg(Fe.width,Fe.height,E.format,E.type);for(const Ae of E.layerUpdates){const rt=Fe.data.subarray(Ae*Re/Fe.data.BYTES_PER_ELEMENT,(Ae+1)*Re/Fe.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(o.TEXTURE_2D_ARRAY,K,0,0,Ae,Fe.width,Fe.height,1,Le,rt)}E.clearLayerUpdates()}else t.compressedTexSubImage3D(o.TEXTURE_2D_ARRAY,K,0,0,0,Fe.width,Fe.height,de.depth,Le,Fe.data)}else t.compressedTexImage3D(o.TEXTURE_2D_ARRAY,K,Ke,Fe.width,Fe.height,de.depth,0,Fe.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else ht?F&&t.texSubImage3D(o.TEXTURE_2D_ARRAY,K,0,0,0,Fe.width,Fe.height,de.depth,Le,qe,Fe.data):t.texImage3D(o.TEXTURE_2D_ARRAY,K,Ke,Fe.width,Fe.height,de.depth,0,Le,qe,Fe.data)}else{ht&&Ft&&t.texStorage2D(o.TEXTURE_2D,Te,Ke,xt[0].width,xt[0].height);for(let K=0,se=xt.length;K<se;K++)Fe=xt[K],E.format!==qi?Le!==null?ht?F&&t.compressedTexSubImage2D(o.TEXTURE_2D,K,0,0,Fe.width,Fe.height,Le,Fe.data):t.compressedTexImage2D(o.TEXTURE_2D,K,Ke,Fe.width,Fe.height,0,Fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ht?F&&t.texSubImage2D(o.TEXTURE_2D,K,0,0,Fe.width,Fe.height,Le,qe,Fe.data):t.texImage2D(o.TEXTURE_2D,K,Ke,Fe.width,Fe.height,0,Le,qe,Fe.data)}else if(E.isDataArrayTexture)if(ht){if(Ft&&t.texStorage3D(o.TEXTURE_2D_ARRAY,Te,Ke,de.width,de.height,de.depth),F)if(E.layerUpdates.size>0){const K=wg(de.width,de.height,E.format,E.type);for(const se of E.layerUpdates){const Re=de.data.subarray(se*K/de.data.BYTES_PER_ELEMENT,(se+1)*K/de.data.BYTES_PER_ELEMENT);t.texSubImage3D(o.TEXTURE_2D_ARRAY,0,0,0,se,de.width,de.height,1,Le,qe,Re)}E.clearLayerUpdates()}else t.texSubImage3D(o.TEXTURE_2D_ARRAY,0,0,0,0,de.width,de.height,de.depth,Le,qe,de.data)}else t.texImage3D(o.TEXTURE_2D_ARRAY,0,Ke,de.width,de.height,de.depth,0,Le,qe,de.data);else if(E.isData3DTexture)ht?(Ft&&t.texStorage3D(o.TEXTURE_3D,Te,Ke,de.width,de.height,de.depth),F&&t.texSubImage3D(o.TEXTURE_3D,0,0,0,0,de.width,de.height,de.depth,Le,qe,de.data)):t.texImage3D(o.TEXTURE_3D,0,Ke,de.width,de.height,de.depth,0,Le,qe,de.data);else if(E.isFramebufferTexture){if(Ft)if(ht)t.texStorage2D(o.TEXTURE_2D,Te,Ke,de.width,de.height);else{let K=de.width,se=de.height;for(let Re=0;Re<Te;Re++)t.texImage2D(o.TEXTURE_2D,Re,Ke,K,se,0,Le,qe,null),K>>=1,se>>=1}}else if(xt.length>0){if(ht&&Ft){const K=Pe(xt[0]);t.texStorage2D(o.TEXTURE_2D,Te,Ke,K.width,K.height)}for(let K=0,se=xt.length;K<se;K++)Fe=xt[K],ht?F&&t.texSubImage2D(o.TEXTURE_2D,K,0,0,Le,qe,Fe):t.texImage2D(o.TEXTURE_2D,K,Ke,Le,qe,Fe);E.generateMipmaps=!1}else if(ht){if(Ft){const K=Pe(de);t.texStorage2D(o.TEXTURE_2D,Te,Ke,K.width,K.height)}F&&t.texSubImage2D(o.TEXTURE_2D,0,0,0,Le,qe,de)}else t.texImage2D(o.TEXTURE_2D,0,Ke,Le,qe,de);g(E)&&y(te),Ue.__version=ie.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function ce(P,E,V){if(E.image.length!==6)return;const te=tt(P,E),oe=E.source;t.bindTexture(o.TEXTURE_CUBE_MAP,P.__webglTexture,o.TEXTURE0+V);const ie=i.get(oe);if(oe.version!==ie.__version||te===!0){t.activeTexture(o.TEXTURE0+V);const Ue=yt.getPrimaries(yt.workingColorSpace),Me=E.colorSpace===Os?null:yt.getPrimaries(E.colorSpace),Ie=E.colorSpace===Os||Ue===Me?o.NONE:o.BROWSER_DEFAULT_WEBGL;o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,E.flipY),o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),o.pixelStorei(o.UNPACK_ALIGNMENT,E.unpackAlignment),o.pixelStorei(o.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ie);const pt=E.isCompressedTexture||E.image[0].isCompressedTexture,de=E.image[0]&&E.image[0].isDataTexture,Le=[];for(let se=0;se<6;se++)!pt&&!de?Le[se]=m(E.image[se],!0,n.maxCubemapSize):Le[se]=de?E.image[se].image:E.image[se],Le[se]=Xe(E,Le[se]);const qe=Le[0],Ke=s.convert(E.format,E.colorSpace),Fe=s.convert(E.type),xt=_(E.internalFormat,Ke,Fe,E.colorSpace),ht=E.isVideoTexture!==!0,Ft=ie.__version===void 0||te===!0,F=oe.dataReady;let Te=A(E,qe);$e(o.TEXTURE_CUBE_MAP,E);let K;if(pt){ht&&Ft&&t.texStorage2D(o.TEXTURE_CUBE_MAP,Te,xt,qe.width,qe.height);for(let se=0;se<6;se++){K=Le[se].mipmaps;for(let Re=0;Re<K.length;Re++){const Ae=K[Re];E.format!==qi?Ke!==null?ht?F&&t.compressedTexSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,Re,0,0,Ae.width,Ae.height,Ke,Ae.data):t.compressedTexImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,Re,xt,Ae.width,Ae.height,0,Ae.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):ht?F&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,Re,0,0,Ae.width,Ae.height,Ke,Fe,Ae.data):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,Re,xt,Ae.width,Ae.height,0,Ke,Fe,Ae.data)}}}else{if(K=E.mipmaps,ht&&Ft){K.length>0&&Te++;const se=Pe(Le[0]);t.texStorage2D(o.TEXTURE_CUBE_MAP,Te,xt,se.width,se.height)}for(let se=0;se<6;se++)if(de){ht?F&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,0,0,Le[se].width,Le[se].height,Ke,Fe,Le[se].data):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,xt,Le[se].width,Le[se].height,0,Ke,Fe,Le[se].data);for(let Re=0;Re<K.length;Re++){const rt=K[Re].image[se].image;ht?F&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,Re+1,0,0,rt.width,rt.height,Ke,Fe,rt.data):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,Re+1,xt,rt.width,rt.height,0,Ke,Fe,rt.data)}}else{ht?F&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,0,0,Ke,Fe,Le[se]):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,0,xt,Ke,Fe,Le[se]);for(let Re=0;Re<K.length;Re++){const Ae=K[Re];ht?F&&t.texSubImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,Re+1,0,0,Ke,Fe,Ae.image[se]):t.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+se,Re+1,xt,Ke,Fe,Ae.image[se])}}}g(E)&&y(o.TEXTURE_CUBE_MAP),ie.__version=oe.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function we(P,E,V,te,oe,ie){const Ue=s.convert(V.format,V.colorSpace),Me=s.convert(V.type),Ie=_(V.internalFormat,Ue,Me,V.colorSpace),pt=i.get(E),de=i.get(V);if(de.__renderTarget=E,!pt.__hasExternalTextures){const Le=Math.max(1,E.width>>ie),qe=Math.max(1,E.height>>ie);oe===o.TEXTURE_3D||oe===o.TEXTURE_2D_ARRAY?t.texImage3D(oe,ie,Ie,Le,qe,E.depth,0,Ue,Me,null):t.texImage2D(oe,ie,Ie,Le,qe,0,Ue,Me,null)}t.bindFramebuffer(o.FRAMEBUFFER,P),De(E)?a.framebufferTexture2DMultisampleEXT(o.FRAMEBUFFER,te,oe,de.__webglTexture,0,he(E)):(oe===o.TEXTURE_2D||oe>=o.TEXTURE_CUBE_MAP_POSITIVE_X&&oe<=o.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&o.framebufferTexture2D(o.FRAMEBUFFER,te,oe,de.__webglTexture,ie),t.bindFramebuffer(o.FRAMEBUFFER,null)}function ye(P,E,V){if(o.bindRenderbuffer(o.RENDERBUFFER,P),E.depthBuffer){const te=E.depthTexture,oe=te&&te.isDepthTexture?te.type:null,ie=v(E.stencilBuffer,oe),Ue=E.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,Me=he(E);De(E)?a.renderbufferStorageMultisampleEXT(o.RENDERBUFFER,Me,ie,E.width,E.height):V?o.renderbufferStorageMultisample(o.RENDERBUFFER,Me,ie,E.width,E.height):o.renderbufferStorage(o.RENDERBUFFER,ie,E.width,E.height),o.framebufferRenderbuffer(o.FRAMEBUFFER,Ue,o.RENDERBUFFER,P)}else{const te=E.textures;for(let oe=0;oe<te.length;oe++){const ie=te[oe],Ue=s.convert(ie.format,ie.colorSpace),Me=s.convert(ie.type),Ie=_(ie.internalFormat,Ue,Me,ie.colorSpace),pt=he(E);V&&De(E)===!1?o.renderbufferStorageMultisample(o.RENDERBUFFER,pt,Ie,E.width,E.height):De(E)?a.renderbufferStorageMultisampleEXT(o.RENDERBUFFER,pt,Ie,E.width,E.height):o.renderbufferStorage(o.RENDERBUFFER,Ie,E.width,E.height)}}o.bindRenderbuffer(o.RENDERBUFFER,null)}function ke(P,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(o.FRAMEBUFFER,P),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const te=i.get(E.depthTexture);te.__renderTarget=E,(!te.__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),q(E.depthTexture,0);const oe=te.__webglTexture,ie=he(E);if(E.depthTexture.format===Ro)De(E)?a.framebufferTexture2DMultisampleEXT(o.FRAMEBUFFER,o.DEPTH_ATTACHMENT,o.TEXTURE_2D,oe,0,ie):o.framebufferTexture2D(o.FRAMEBUFFER,o.DEPTH_ATTACHMENT,o.TEXTURE_2D,oe,0);else if(E.depthTexture.format===Bo)De(E)?a.framebufferTexture2DMultisampleEXT(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.TEXTURE_2D,oe,0,ie):o.framebufferTexture2D(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.TEXTURE_2D,oe,0);else throw new Error("Unknown depthTexture format")}function Ze(P){const E=i.get(P),V=P.isWebGLCubeRenderTarget===!0;if(E.__boundDepthTexture!==P.depthTexture){const te=P.depthTexture;if(E.__depthDisposeCallback&&E.__depthDisposeCallback(),te){const oe=()=>{delete E.__boundDepthTexture,delete E.__depthDisposeCallback,te.removeEventListener("dispose",oe)};te.addEventListener("dispose",oe),E.__depthDisposeCallback=oe}E.__boundDepthTexture=te}if(P.depthTexture&&!E.__autoAllocateDepthBuffer){if(V)throw new Error("target.depthTexture not supported in Cube render targets");ke(E.__webglFramebuffer,P)}else if(V){E.__webglDepthbuffer=[];for(let te=0;te<6;te++)if(t.bindFramebuffer(o.FRAMEBUFFER,E.__webglFramebuffer[te]),E.__webglDepthbuffer[te]===void 0)E.__webglDepthbuffer[te]=o.createRenderbuffer(),ye(E.__webglDepthbuffer[te],P,!1);else{const oe=P.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,ie=E.__webglDepthbuffer[te];o.bindRenderbuffer(o.RENDERBUFFER,ie),o.framebufferRenderbuffer(o.FRAMEBUFFER,oe,o.RENDERBUFFER,ie)}}else if(t.bindFramebuffer(o.FRAMEBUFFER,E.__webglFramebuffer),E.__webglDepthbuffer===void 0)E.__webglDepthbuffer=o.createRenderbuffer(),ye(E.__webglDepthbuffer,P,!1);else{const te=P.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,oe=E.__webglDepthbuffer;o.bindRenderbuffer(o.RENDERBUFFER,oe),o.framebufferRenderbuffer(o.FRAMEBUFFER,te,o.RENDERBUFFER,oe)}t.bindFramebuffer(o.FRAMEBUFFER,null)}function He(P,E,V){const te=i.get(P);E!==void 0&&we(te.__webglFramebuffer,P,P.texture,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,0),V!==void 0&&Ze(P)}function ft(P){const E=P.texture,V=i.get(P),te=i.get(E);P.addEventListener("dispose",M);const oe=P.textures,ie=P.isWebGLCubeRenderTarget===!0,Ue=oe.length>1;if(Ue||(te.__webglTexture===void 0&&(te.__webglTexture=o.createTexture()),te.__version=E.version,r.memory.textures++),ie){V.__webglFramebuffer=[];for(let Me=0;Me<6;Me++)if(E.mipmaps&&E.mipmaps.length>0){V.__webglFramebuffer[Me]=[];for(let Ie=0;Ie<E.mipmaps.length;Ie++)V.__webglFramebuffer[Me][Ie]=o.createFramebuffer()}else V.__webglFramebuffer[Me]=o.createFramebuffer()}else{if(E.mipmaps&&E.mipmaps.length>0){V.__webglFramebuffer=[];for(let Me=0;Me<E.mipmaps.length;Me++)V.__webglFramebuffer[Me]=o.createFramebuffer()}else V.__webglFramebuffer=o.createFramebuffer();if(Ue)for(let Me=0,Ie=oe.length;Me<Ie;Me++){const pt=i.get(oe[Me]);pt.__webglTexture===void 0&&(pt.__webglTexture=o.createTexture(),r.memory.textures++)}if(P.samples>0&&De(P)===!1){V.__webglMultisampledFramebuffer=o.createFramebuffer(),V.__webglColorRenderbuffer=[],t.bindFramebuffer(o.FRAMEBUFFER,V.__webglMultisampledFramebuffer);for(let Me=0;Me<oe.length;Me++){const Ie=oe[Me];V.__webglColorRenderbuffer[Me]=o.createRenderbuffer(),o.bindRenderbuffer(o.RENDERBUFFER,V.__webglColorRenderbuffer[Me]);const pt=s.convert(Ie.format,Ie.colorSpace),de=s.convert(Ie.type),Le=_(Ie.internalFormat,pt,de,Ie.colorSpace,P.isXRRenderTarget===!0),qe=he(P);o.renderbufferStorageMultisample(o.RENDERBUFFER,qe,Le,P.width,P.height),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0+Me,o.RENDERBUFFER,V.__webglColorRenderbuffer[Me])}o.bindRenderbuffer(o.RENDERBUFFER,null),P.depthBuffer&&(V.__webglDepthRenderbuffer=o.createRenderbuffer(),ye(V.__webglDepthRenderbuffer,P,!0)),t.bindFramebuffer(o.FRAMEBUFFER,null)}}if(ie){t.bindTexture(o.TEXTURE_CUBE_MAP,te.__webglTexture),$e(o.TEXTURE_CUBE_MAP,E);for(let Me=0;Me<6;Me++)if(E.mipmaps&&E.mipmaps.length>0)for(let Ie=0;Ie<E.mipmaps.length;Ie++)we(V.__webglFramebuffer[Me][Ie],P,E,o.COLOR_ATTACHMENT0,o.TEXTURE_CUBE_MAP_POSITIVE_X+Me,Ie);else we(V.__webglFramebuffer[Me],P,E,o.COLOR_ATTACHMENT0,o.TEXTURE_CUBE_MAP_POSITIVE_X+Me,0);g(E)&&y(o.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Ue){for(let Me=0,Ie=oe.length;Me<Ie;Me++){const pt=oe[Me],de=i.get(pt);t.bindTexture(o.TEXTURE_2D,de.__webglTexture),$e(o.TEXTURE_2D,pt),we(V.__webglFramebuffer,P,pt,o.COLOR_ATTACHMENT0+Me,o.TEXTURE_2D,0),g(pt)&&y(o.TEXTURE_2D)}t.unbindTexture()}else{let Me=o.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(Me=P.isWebGL3DRenderTarget?o.TEXTURE_3D:o.TEXTURE_2D_ARRAY),t.bindTexture(Me,te.__webglTexture),$e(Me,E),E.mipmaps&&E.mipmaps.length>0)for(let Ie=0;Ie<E.mipmaps.length;Ie++)we(V.__webglFramebuffer[Ie],P,E,o.COLOR_ATTACHMENT0,Me,Ie);else we(V.__webglFramebuffer,P,E,o.COLOR_ATTACHMENT0,Me,0);g(E)&&y(Me),t.unbindTexture()}P.depthBuffer&&Ze(P)}function re(P){const E=P.textures;for(let V=0,te=E.length;V<te;V++){const oe=E[V];if(g(oe)){const ie=x(P),Ue=i.get(oe).__webglTexture;t.bindTexture(ie,Ue),y(ie),t.unbindTexture()}}}const pe=[],I=[];function Ge(P){if(P.samples>0){if(De(P)===!1){const E=P.textures,V=P.width,te=P.height;let oe=o.COLOR_BUFFER_BIT;const ie=P.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT,Ue=i.get(P),Me=E.length>1;if(Me)for(let Ie=0;Ie<E.length;Ie++)t.bindFramebuffer(o.FRAMEBUFFER,Ue.__webglMultisampledFramebuffer),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0+Ie,o.RENDERBUFFER,null),t.bindFramebuffer(o.FRAMEBUFFER,Ue.__webglFramebuffer),o.framebufferTexture2D(o.DRAW_FRAMEBUFFER,o.COLOR_ATTACHMENT0+Ie,o.TEXTURE_2D,null,0);t.bindFramebuffer(o.READ_FRAMEBUFFER,Ue.__webglMultisampledFramebuffer),t.bindFramebuffer(o.DRAW_FRAMEBUFFER,Ue.__webglFramebuffer);for(let Ie=0;Ie<E.length;Ie++){if(P.resolveDepthBuffer&&(P.depthBuffer&&(oe|=o.DEPTH_BUFFER_BIT),P.stencilBuffer&&P.resolveStencilBuffer&&(oe|=o.STENCIL_BUFFER_BIT)),Me){o.framebufferRenderbuffer(o.READ_FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.RENDERBUFFER,Ue.__webglColorRenderbuffer[Ie]);const pt=i.get(E[Ie]).__webglTexture;o.framebufferTexture2D(o.DRAW_FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,pt,0)}o.blitFramebuffer(0,0,V,te,0,0,V,te,oe,o.NEAREST),l===!0&&(pe.length=0,I.length=0,pe.push(o.COLOR_ATTACHMENT0+Ie),P.depthBuffer&&P.resolveDepthBuffer===!1&&(pe.push(ie),I.push(ie),o.invalidateFramebuffer(o.DRAW_FRAMEBUFFER,I)),o.invalidateFramebuffer(o.READ_FRAMEBUFFER,pe))}if(t.bindFramebuffer(o.READ_FRAMEBUFFER,null),t.bindFramebuffer(o.DRAW_FRAMEBUFFER,null),Me)for(let Ie=0;Ie<E.length;Ie++){t.bindFramebuffer(o.FRAMEBUFFER,Ue.__webglMultisampledFramebuffer),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0+Ie,o.RENDERBUFFER,Ue.__webglColorRenderbuffer[Ie]);const pt=i.get(E[Ie]).__webglTexture;t.bindFramebuffer(o.FRAMEBUFFER,Ue.__webglFramebuffer),o.framebufferTexture2D(o.DRAW_FRAMEBUFFER,o.COLOR_ATTACHMENT0+Ie,o.TEXTURE_2D,pt,0)}t.bindFramebuffer(o.DRAW_FRAMEBUFFER,Ue.__webglMultisampledFramebuffer)}else if(P.depthBuffer&&P.resolveDepthBuffer===!1&&l){const E=P.stencilBuffer?o.DEPTH_STENCIL_ATTACHMENT:o.DEPTH_ATTACHMENT;o.invalidateFramebuffer(o.DRAW_FRAMEBUFFER,[E])}}}function he(P){return Math.min(n.maxSamples,P.samples)}function De(P){const E=i.get(P);return P.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function ve(P){const E=r.render.frame;h.get(P)!==E&&(h.set(P,E),P.update())}function Xe(P,E){const V=P.colorSpace,te=P.format,oe=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||V!==Xo&&V!==Os&&(yt.getTransfer(V)===Dt?(te!==qi||oe!==fs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",V)),E}function Pe(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(c.width=P.naturalWidth||P.width,c.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(c.width=P.displayWidth,c.height=P.displayHeight):(c.width=P.width,c.height=P.height),c}this.allocateTextureUnit=L,this.resetTextureUnits=z,this.setTexture2D=q,this.setTexture2DArray=H,this.setTexture3D=ae,this.setTextureCube=X,this.rebindTextures=He,this.setupRenderTarget=ft,this.updateRenderTargetMipmap=re,this.updateMultisampleRenderTarget=Ge,this.setupDepthRenderbuffer=Ze,this.setupFrameBufferTexture=we,this.useMultisampledRTT=De}function lM(o,e){function t(i,n=Os){let s;const r=yt.getTransfer(n);if(i===fs)return o.UNSIGNED_BYTE;if(i===Mf)return o.UNSIGNED_SHORT_4_4_4_4;if(i===Tf)return o.UNSIGNED_SHORT_5_5_5_1;if(i===Sy)return o.UNSIGNED_INT_5_9_9_9_REV;if(i===vy)return o.BYTE;if(i===by)return o.SHORT;if(i===ol)return o.UNSIGNED_SHORT;if(i===Sf)return o.INT;if(i===Qs)return o.UNSIGNED_INT;if(i===rn)return o.FLOAT;if(i===$o)return o.HALF_FLOAT;if(i===My)return o.ALPHA;if(i===Ty)return o.RGB;if(i===qi)return o.RGBA;if(i===wy)return o.LUMINANCE;if(i===Ay)return o.LUMINANCE_ALPHA;if(i===Ro)return o.DEPTH_COMPONENT;if(i===Bo)return o.DEPTH_STENCIL;if(i===wf)return o.RED;if(i===Jc)return o.RED_INTEGER;if(i===Ey)return o.RG;if(i===Af)return o.RG_INTEGER;if(i===Ef)return o.RGBA_INTEGER;if(i===oc||i===ac||i===lc||i===cc)if(r===Dt)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(i===oc)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===ac)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===lc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===cc)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(i===oc)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===ac)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===lc)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===cc)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===Sd||i===Md||i===Td||i===wd)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(i===Sd)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===Md)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===Td)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===wd)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===Ad||i===Ed||i===Cd)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(i===Ad||i===Ed)return r===Dt?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===Cd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Rd||i===Nd||i===Pd||i===Id||i===Dd||i===Ld||i===Fd||i===Ud||i===Bd||i===Od||i===zd||i===kd||i===Gd||i===Vd)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(i===Rd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===Nd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Pd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Id)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Dd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Ld)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Fd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Ud)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Bd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Od)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===zd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===kd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Gd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Vd)return r===Dt?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===hc||i===Hd||i===Wd)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(i===hc)return r===Dt?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Hd)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Wd)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===Cy||i===$d||i===Xd||i===qd)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(i===hc)return s.COMPRESSED_RED_RGTC1_EXT;if(i===$d)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Xd)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===qd)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===Uo?o.UNSIGNED_INT_24_8:o[i]!==void 0?o[i]:null}return{convert:t}}class cM extends wi{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Ha extends Nt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const WP={type:"move"};class Vp{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ha,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ha,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new R,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new R),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ha,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new R,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new R),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let n=null,s=null,r=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){r=!0;for(const m of e.hand.values()){const g=t.getJointPose(m,i),y=this._getHandJoint(c,m);g!==null&&(y.matrix.fromArray(g.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.matrixWorldNeedsUpdate=!0,y.jointRadius=g.radius),y.visible=g!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(n=t.getPose(e.targetRaySpace,i),n===null&&s!==null&&(n=s),n!==null&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(WP)))}return a!==null&&(a.visible=n!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=r!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new Ha;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}const $P=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,XP=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class qP{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){const n=new xi,s=e.properties.get(n);s.__webglTexture=t.texture,(t.depthNear!=i.depthNear||t.depthFar!=i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new cn({vertexShader:$P,fragmentShader:XP,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Kt(new yl(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class YP extends ys{constructor(e,t){super();const i=this;let n=null,s=1,r=null,a="local-floor",l=1,c=null,h=null,u=null,d=null,f=null,p=null;const m=new qP,g=t.getContextAttributes();let y=null,x=null;const _=[],v=[],A=new Z;let T=null;const M=new wi;M.viewport=new gt;const w=new wi;w.viewport=new gt;const S=[M,w],b=new cM;let N=null,z=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(J){let ce=_[J];return ce===void 0&&(ce=new Vp,_[J]=ce),ce.getTargetRaySpace()},this.getControllerGrip=function(J){let ce=_[J];return ce===void 0&&(ce=new Vp,_[J]=ce),ce.getGripSpace()},this.getHand=function(J){let ce=_[J];return ce===void 0&&(ce=new Vp,_[J]=ce),ce.getHandSpace()};function L(J){const ce=v.indexOf(J.inputSource);if(ce===-1)return;const we=_[ce];we!==void 0&&(we.update(J.inputSource,J.frame,c||r),we.dispatchEvent({type:J.type,data:J.inputSource}))}function k(){n.removeEventListener("select",L),n.removeEventListener("selectstart",L),n.removeEventListener("selectend",L),n.removeEventListener("squeeze",L),n.removeEventListener("squeezestart",L),n.removeEventListener("squeezeend",L),n.removeEventListener("end",k),n.removeEventListener("inputsourceschange",q);for(let J=0;J<_.length;J++){const ce=v[J];ce!==null&&(v[J]=null,_[J].disconnect(ce))}N=null,z=null,m.reset(),e.setRenderTarget(y),f=null,d=null,u=null,n=null,x=null,tt.stop(),i.isPresenting=!1,e.setPixelRatio(T),e.setSize(A.width,A.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(J){s=J,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(J){a=J,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||r},this.setReferenceSpace=function(J){c=J},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(J){if(n=J,n!==null){if(y=e.getRenderTarget(),n.addEventListener("select",L),n.addEventListener("selectstart",L),n.addEventListener("selectend",L),n.addEventListener("squeeze",L),n.addEventListener("squeezestart",L),n.addEventListener("squeezeend",L),n.addEventListener("end",k),n.addEventListener("inputsourceschange",q),g.xrCompatible!==!0&&await t.makeXRCompatible(),T=e.getPixelRatio(),e.getSize(A),n.renderState.layers===void 0){const ce={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(n,t,ce),n.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),x=new Dn(f.framebufferWidth,f.framebufferHeight,{format:qi,type:fs,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil})}else{let ce=null,we=null,ye=null;g.depth&&(ye=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ce=g.stencil?Bo:Ro,we=g.stencil?Uo:Qs);const ke={colorFormat:t.RGBA8,depthFormat:ye,scaleFactor:s};u=new XRWebGLBinding(n,t),d=u.createProjectionLayer(ke),n.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),x=new Dn(d.textureWidth,d.textureHeight,{format:qi,type:fs,depthTexture:new Uy(d.textureWidth,d.textureHeight,we,void 0,void 0,void 0,void 0,void 0,void 0,ce),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1})}x.isXRRenderTarget=!0,this.setFoveation(l),c=null,r=await n.requestReferenceSpace(a),tt.setContext(n),tt.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode},this.getDepthTexture=function(){return m.getDepthTexture()};function q(J){for(let ce=0;ce<J.removed.length;ce++){const we=J.removed[ce],ye=v.indexOf(we);ye>=0&&(v[ye]=null,_[ye].disconnect(we))}for(let ce=0;ce<J.added.length;ce++){const we=J.added[ce];let ye=v.indexOf(we);if(ye===-1){for(let Ze=0;Ze<_.length;Ze++)if(Ze>=v.length){v.push(we),ye=Ze;break}else if(v[Ze]===null){v[Ze]=we,ye=Ze;break}if(ye===-1)break}const ke=_[ye];ke&&ke.connect(we)}}const H=new R,ae=new R;function X(J,ce,we){H.setFromMatrixPosition(ce.matrixWorld),ae.setFromMatrixPosition(we.matrixWorld);const ye=H.distanceTo(ae),ke=ce.projectionMatrix.elements,Ze=we.projectionMatrix.elements,He=ke[14]/(ke[10]-1),ft=ke[14]/(ke[10]+1),re=(ke[9]+1)/ke[5],pe=(ke[9]-1)/ke[5],I=(ke[8]-1)/ke[0],Ge=(Ze[8]+1)/Ze[0],he=He*I,De=He*Ge,ve=ye/(-I+Ge),Xe=ve*-I;if(ce.matrixWorld.decompose(J.position,J.quaternion,J.scale),J.translateX(Xe),J.translateZ(ve),J.matrixWorld.compose(J.position,J.quaternion,J.scale),J.matrixWorldInverse.copy(J.matrixWorld).invert(),ke[10]===-1)J.projectionMatrix.copy(ce.projectionMatrix),J.projectionMatrixInverse.copy(ce.projectionMatrixInverse);else{const Pe=He+ve,P=ft+ve,E=he-Xe,V=De+(ye-Xe),te=re*ft/P*Pe,oe=pe*ft/P*Pe;J.projectionMatrix.makePerspective(E,V,te,oe,Pe,P),J.projectionMatrixInverse.copy(J.projectionMatrix).invert()}}function le(J,ce){ce===null?J.matrixWorld.copy(J.matrix):J.matrixWorld.multiplyMatrices(ce.matrixWorld,J.matrix),J.matrixWorldInverse.copy(J.matrixWorld).invert()}this.updateCamera=function(J){if(n===null)return;let ce=J.near,we=J.far;m.texture!==null&&(m.depthNear>0&&(ce=m.depthNear),m.depthFar>0&&(we=m.depthFar)),b.near=w.near=M.near=ce,b.far=w.far=M.far=we,(N!==b.near||z!==b.far)&&(n.updateRenderState({depthNear:b.near,depthFar:b.far}),N=b.near,z=b.far),M.layers.mask=J.layers.mask|2,w.layers.mask=J.layers.mask|4,b.layers.mask=M.layers.mask|w.layers.mask;const ye=J.parent,ke=b.cameras;le(b,ye);for(let Ze=0;Ze<ke.length;Ze++)le(ke[Ze],ye);ke.length===2?X(b,M,w):b.projectionMatrix.copy(M.projectionMatrix),ue(J,b,ye)};function ue(J,ce,we){we===null?J.matrix.copy(ce.matrixWorld):(J.matrix.copy(we.matrixWorld),J.matrix.invert(),J.matrix.multiply(ce.matrixWorld)),J.matrix.decompose(J.position,J.quaternion,J.scale),J.updateMatrixWorld(!0),J.projectionMatrix.copy(ce.projectionMatrix),J.projectionMatrixInverse.copy(ce.projectionMatrixInverse),J.isPerspectiveCamera&&(J.fov=al*2*Math.atan(1/J.projectionMatrix.elements[5]),J.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(J){l=J,d!==null&&(d.fixedFoveation=J),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=J)},this.hasDepthSensing=function(){return m.texture!==null},this.getDepthSensingMesh=function(){return m.getMesh(b)};let xe=null;function $e(J,ce){if(h=ce.getViewerPose(c||r),p=ce,h!==null){const we=h.views;f!==null&&(e.setRenderTargetFramebuffer(x,f.framebuffer),e.setRenderTarget(x));let ye=!1;we.length!==b.cameras.length&&(b.cameras.length=0,ye=!0);for(let Ze=0;Ze<we.length;Ze++){const He=we[Ze];let ft=null;if(f!==null)ft=f.getViewport(He);else{const pe=u.getViewSubImage(d,He);ft=pe.viewport,Ze===0&&(e.setRenderTargetTextures(x,pe.colorTexture,d.ignoreDepthValues?void 0:pe.depthStencilTexture),e.setRenderTarget(x))}let re=S[Ze];re===void 0&&(re=new wi,re.layers.enable(Ze),re.viewport=new gt,S[Ze]=re),re.matrix.fromArray(He.transform.matrix),re.matrix.decompose(re.position,re.quaternion,re.scale),re.projectionMatrix.fromArray(He.projectionMatrix),re.projectionMatrixInverse.copy(re.projectionMatrix).invert(),re.viewport.set(ft.x,ft.y,ft.width,ft.height),Ze===0&&(b.matrix.copy(re.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),ye===!0&&b.cameras.push(re)}const ke=n.enabledFeatures;if(ke&&ke.includes("depth-sensing")){const Ze=u.getDepthInformation(we[0]);Ze&&Ze.isValid&&Ze.texture&&m.init(e,Ze,n.renderState)}}for(let we=0;we<_.length;we++){const ye=v[we],ke=_[we];ye!==null&&ke!==void 0&&ke.update(ye,ce,c||r)}xe&&xe(J,ce),ce.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:ce}),p=null}const tt=new nM;tt.setAnimationLoop($e),this.setAnimationLoop=function(J){xe=J},this.dispose=function(){}}}const Qr=new Yn,ZP=new Ye;function KP(o,e){function t(g,y){g.matrixAutoUpdate===!0&&g.updateMatrix(),y.value.copy(g.matrix)}function i(g,y){y.color.getRGB(g.fogColor.value,eM(o)),y.isFog?(g.fogNear.value=y.near,g.fogFar.value=y.far):y.isFogExp2&&(g.fogDensity.value=y.density)}function n(g,y,x,_,v){y.isMeshBasicMaterial||y.isMeshLambertMaterial?s(g,y):y.isMeshToonMaterial?(s(g,y),u(g,y)):y.isMeshPhongMaterial?(s(g,y),h(g,y)):y.isMeshStandardMaterial?(s(g,y),d(g,y),y.isMeshPhysicalMaterial&&f(g,y,v)):y.isMeshMatcapMaterial?(s(g,y),p(g,y)):y.isMeshDepthMaterial?s(g,y):y.isMeshDistanceMaterial?(s(g,y),m(g,y)):y.isMeshNormalMaterial?s(g,y):y.isLineBasicMaterial?(r(g,y),y.isLineDashedMaterial&&a(g,y)):y.isPointsMaterial?l(g,y,x,_):y.isSpriteMaterial?c(g,y):y.isShadowMaterial?(g.color.value.copy(y.color),g.opacity.value=y.opacity):y.isShaderMaterial&&(y.uniformsNeedUpdate=!1)}function s(g,y){g.opacity.value=y.opacity,y.color&&g.diffuse.value.copy(y.color),y.emissive&&g.emissive.value.copy(y.emissive).multiplyScalar(y.emissiveIntensity),y.map&&(g.map.value=y.map,t(y.map,g.mapTransform)),y.alphaMap&&(g.alphaMap.value=y.alphaMap,t(y.alphaMap,g.alphaMapTransform)),y.bumpMap&&(g.bumpMap.value=y.bumpMap,t(y.bumpMap,g.bumpMapTransform),g.bumpScale.value=y.bumpScale,y.side===Yi&&(g.bumpScale.value*=-1)),y.normalMap&&(g.normalMap.value=y.normalMap,t(y.normalMap,g.normalMapTransform),g.normalScale.value.copy(y.normalScale),y.side===Yi&&g.normalScale.value.negate()),y.displacementMap&&(g.displacementMap.value=y.displacementMap,t(y.displacementMap,g.displacementMapTransform),g.displacementScale.value=y.displacementScale,g.displacementBias.value=y.displacementBias),y.emissiveMap&&(g.emissiveMap.value=y.emissiveMap,t(y.emissiveMap,g.emissiveMapTransform)),y.specularMap&&(g.specularMap.value=y.specularMap,t(y.specularMap,g.specularMapTransform)),y.alphaTest>0&&(g.alphaTest.value=y.alphaTest);const x=e.get(y),_=x.envMap,v=x.envMapRotation;_&&(g.envMap.value=_,Qr.copy(v),Qr.x*=-1,Qr.y*=-1,Qr.z*=-1,_.isCubeTexture&&_.isRenderTargetTexture===!1&&(Qr.y*=-1,Qr.z*=-1),g.envMapRotation.value.setFromMatrix4(ZP.makeRotationFromEuler(Qr)),g.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=y.reflectivity,g.ior.value=y.ior,g.refractionRatio.value=y.refractionRatio),y.lightMap&&(g.lightMap.value=y.lightMap,g.lightMapIntensity.value=y.lightMapIntensity,t(y.lightMap,g.lightMapTransform)),y.aoMap&&(g.aoMap.value=y.aoMap,g.aoMapIntensity.value=y.aoMapIntensity,t(y.aoMap,g.aoMapTransform))}function r(g,y){g.diffuse.value.copy(y.color),g.opacity.value=y.opacity,y.map&&(g.map.value=y.map,t(y.map,g.mapTransform))}function a(g,y){g.dashSize.value=y.dashSize,g.totalSize.value=y.dashSize+y.gapSize,g.scale.value=y.scale}function l(g,y,x,_){g.diffuse.value.copy(y.color),g.opacity.value=y.opacity,g.size.value=y.size*x,g.scale.value=_*.5,y.map&&(g.map.value=y.map,t(y.map,g.uvTransform)),y.alphaMap&&(g.alphaMap.value=y.alphaMap,t(y.alphaMap,g.alphaMapTransform)),y.alphaTest>0&&(g.alphaTest.value=y.alphaTest)}function c(g,y){g.diffuse.value.copy(y.color),g.opacity.value=y.opacity,g.rotation.value=y.rotation,y.map&&(g.map.value=y.map,t(y.map,g.mapTransform)),y.alphaMap&&(g.alphaMap.value=y.alphaMap,t(y.alphaMap,g.alphaMapTransform)),y.alphaTest>0&&(g.alphaTest.value=y.alphaTest)}function h(g,y){g.specular.value.copy(y.specular),g.shininess.value=Math.max(y.shininess,1e-4)}function u(g,y){y.gradientMap&&(g.gradientMap.value=y.gradientMap)}function d(g,y){g.metalness.value=y.metalness,y.metalnessMap&&(g.metalnessMap.value=y.metalnessMap,t(y.metalnessMap,g.metalnessMapTransform)),g.roughness.value=y.roughness,y.roughnessMap&&(g.roughnessMap.value=y.roughnessMap,t(y.roughnessMap,g.roughnessMapTransform)),y.envMap&&(g.envMapIntensity.value=y.envMapIntensity)}function f(g,y,x){g.ior.value=y.ior,y.sheen>0&&(g.sheenColor.value.copy(y.sheenColor).multiplyScalar(y.sheen),g.sheenRoughness.value=y.sheenRoughness,y.sheenColorMap&&(g.sheenColorMap.value=y.sheenColorMap,t(y.sheenColorMap,g.sheenColorMapTransform)),y.sheenRoughnessMap&&(g.sheenRoughnessMap.value=y.sheenRoughnessMap,t(y.sheenRoughnessMap,g.sheenRoughnessMapTransform))),y.clearcoat>0&&(g.clearcoat.value=y.clearcoat,g.clearcoatRoughness.value=y.clearcoatRoughness,y.clearcoatMap&&(g.clearcoatMap.value=y.clearcoatMap,t(y.clearcoatMap,g.clearcoatMapTransform)),y.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=y.clearcoatRoughnessMap,t(y.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),y.clearcoatNormalMap&&(g.clearcoatNormalMap.value=y.clearcoatNormalMap,t(y.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(y.clearcoatNormalScale),y.side===Yi&&g.clearcoatNormalScale.value.negate())),y.dispersion>0&&(g.dispersion.value=y.dispersion),y.iridescence>0&&(g.iridescence.value=y.iridescence,g.iridescenceIOR.value=y.iridescenceIOR,g.iridescenceThicknessMinimum.value=y.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=y.iridescenceThicknessRange[1],y.iridescenceMap&&(g.iridescenceMap.value=y.iridescenceMap,t(y.iridescenceMap,g.iridescenceMapTransform)),y.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=y.iridescenceThicknessMap,t(y.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),y.transmission>0&&(g.transmission.value=y.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),y.transmissionMap&&(g.transmissionMap.value=y.transmissionMap,t(y.transmissionMap,g.transmissionMapTransform)),g.thickness.value=y.thickness,y.thicknessMap&&(g.thicknessMap.value=y.thicknessMap,t(y.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=y.attenuationDistance,g.attenuationColor.value.copy(y.attenuationColor)),y.anisotropy>0&&(g.anisotropyVector.value.set(y.anisotropy*Math.cos(y.anisotropyRotation),y.anisotropy*Math.sin(y.anisotropyRotation)),y.anisotropyMap&&(g.anisotropyMap.value=y.anisotropyMap,t(y.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=y.specularIntensity,g.specularColor.value.copy(y.specularColor),y.specularColorMap&&(g.specularColorMap.value=y.specularColorMap,t(y.specularColorMap,g.specularColorMapTransform)),y.specularIntensityMap&&(g.specularIntensityMap.value=y.specularIntensityMap,t(y.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,y){y.matcap&&(g.matcap.value=y.matcap)}function m(g,y){const x=e.get(y).light;g.referencePosition.value.setFromMatrixPosition(x.matrixWorld),g.nearDistance.value=x.shadow.camera.near,g.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:n}}function jP(o,e,t,i){let n={},s={},r=[];const a=o.getParameter(o.MAX_UNIFORM_BUFFER_BINDINGS);function l(x,_){const v=_.program;i.uniformBlockBinding(x,v)}function c(x,_){let v=n[x.id];v===void 0&&(p(x),v=h(x),n[x.id]=v,x.addEventListener("dispose",g));const A=_.program;i.updateUBOMapping(x,A);const T=e.render.frame;s[x.id]!==T&&(d(x),s[x.id]=T)}function h(x){const _=u();x.__bindingPointIndex=_;const v=o.createBuffer(),A=x.__size,T=x.usage;return o.bindBuffer(o.UNIFORM_BUFFER,v),o.bufferData(o.UNIFORM_BUFFER,A,T),o.bindBuffer(o.UNIFORM_BUFFER,null),o.bindBufferBase(o.UNIFORM_BUFFER,_,v),v}function u(){for(let x=0;x<a;x++)if(r.indexOf(x)===-1)return r.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(x){const _=n[x.id],v=x.uniforms,A=x.__cache;o.bindBuffer(o.UNIFORM_BUFFER,_);for(let T=0,M=v.length;T<M;T++){const w=Array.isArray(v[T])?v[T]:[v[T]];for(let S=0,b=w.length;S<b;S++){const N=w[S];if(f(N,T,S,A)===!0){const z=N.__offset,L=Array.isArray(N.value)?N.value:[N.value];let k=0;for(let q=0;q<L.length;q++){const H=L[q],ae=m(H);typeof H=="number"||typeof H=="boolean"?(N.__data[0]=H,o.bufferSubData(o.UNIFORM_BUFFER,z+k,N.__data)):H.isMatrix3?(N.__data[0]=H.elements[0],N.__data[1]=H.elements[1],N.__data[2]=H.elements[2],N.__data[3]=0,N.__data[4]=H.elements[3],N.__data[5]=H.elements[4],N.__data[6]=H.elements[5],N.__data[7]=0,N.__data[8]=H.elements[6],N.__data[9]=H.elements[7],N.__data[10]=H.elements[8],N.__data[11]=0):(H.toArray(N.__data,k),k+=ae.storage/Float32Array.BYTES_PER_ELEMENT)}o.bufferSubData(o.UNIFORM_BUFFER,z,N.__data)}}}o.bindBuffer(o.UNIFORM_BUFFER,null)}function f(x,_,v,A){const T=x.value,M=_+"_"+v;if(A[M]===void 0)return typeof T=="number"||typeof T=="boolean"?A[M]=T:A[M]=T.clone(),!0;{const w=A[M];if(typeof T=="number"||typeof T=="boolean"){if(w!==T)return A[M]=T,!0}else if(w.equals(T)===!1)return w.copy(T),!0}return!1}function p(x){const _=x.uniforms;let v=0;const A=16;for(let M=0,w=_.length;M<w;M++){const S=Array.isArray(_[M])?_[M]:[_[M]];for(let b=0,N=S.length;b<N;b++){const z=S[b],L=Array.isArray(z.value)?z.value:[z.value];for(let k=0,q=L.length;k<q;k++){const H=L[k],ae=m(H),X=v%A,le=X%ae.boundary,ue=X+le;v+=le,ue!==0&&A-ue<ae.storage&&(v+=A-ue),z.__data=new Float32Array(ae.storage/Float32Array.BYTES_PER_ELEMENT),z.__offset=v,v+=ae.storage}}}const T=v%A;return T>0&&(v+=A-T),x.__size=v,x.__cache={},this}function m(x){const _={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(_.boundary=4,_.storage=4):x.isVector2?(_.boundary=8,_.storage=8):x.isVector3||x.isColor?(_.boundary=16,_.storage=12):x.isVector4?(_.boundary=16,_.storage=16):x.isMatrix3?(_.boundary=48,_.storage=48):x.isMatrix4?(_.boundary=64,_.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),_}function g(x){const _=x.target;_.removeEventListener("dispose",g);const v=r.indexOf(_.__bindingPointIndex);r.splice(v,1),o.deleteBuffer(n[_.id]),delete n[_.id],delete s[_.id]}function y(){for(const x in n)o.deleteBuffer(n[x]);r=[],n={},s={}}return{bind:l,update:c,dispose:y}}class JP{constructor(e={}){const{canvas:t=$S(),context:i=null,depth:n=!0,stencil:s=!1,alpha:r=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=i.getContextAttributes().alpha}else f=r;const p=new Uint32Array(4),m=new Int32Array(4);let g=null,y=null;const x=[],_=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=sn,this.toneMapping=Hs,this.toneMappingExposure=1;const v=this;let A=!1,T=0,M=0,w=null,S=-1,b=null;const N=new gt,z=new gt;let L=null;const k=new Ce(0);let q=0,H=t.width,ae=t.height,X=1,le=null,ue=null;const xe=new gt(0,0,H,ae),$e=new gt(0,0,H,ae);let tt=!1;const J=new nh;let ce=!1,we=!1;const ye=new Ye,ke=new Ye,Ze=new R,He=new gt,ft={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let re=!1;function pe(){return w===null?X:1}let I=i;function Ge(C,B){return t.getContext(C,B)}try{const C={alpha:!0,depth:n,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${vf}`),t.addEventListener("webglcontextlost",se,!1),t.addEventListener("webglcontextrestored",Re,!1),t.addEventListener("webglcontextcreationerror",Ae,!1),I===null){const B="webgl2";if(I=Ge(B,C),I===null)throw Ge(B)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let he,De,ve,Xe,Pe,P,E,V,te,oe,ie,Ue,Me,Ie,pt,de,Le,qe,Ke,Fe,xt,ht,Ft,F;function Te(){he=new nN(I),he.init(),ht=new lM(I,he),De=new jR(I,he,e,ht),ve=new BP(I,he),De.reverseDepthBuffer&&d&&ve.buffers.depth.setReversed(!0),Xe=new oN(I),Pe=new TP,P=new HP(I,he,ve,Pe,De,ht,Xe),E=new QR(v),V=new iN(v),te=new fE(I),Ft=new ZR(I,te),oe=new sN(I,te,Xe,Ft),ie=new lN(I,oe,te,Xe),Ke=new aN(I,De,P),de=new JR(Pe),Ue=new MP(v,E,V,he,De,Ft,de),Me=new KP(v,Pe),Ie=new AP,pt=new IP(he),qe=new YR(v,E,V,ve,ie,f,l),Le=new FP(v,ie,De),F=new jP(I,Xe,De,ve),Fe=new KR(I,he,Xe),xt=new rN(I,he,Xe),Xe.programs=Ue.programs,v.capabilities=De,v.extensions=he,v.properties=Pe,v.renderLists=Ie,v.shadowMap=Le,v.state=ve,v.info=Xe}Te();const K=new YP(v,I);this.xr=K,this.getContext=function(){return I},this.getContextAttributes=function(){return I.getContextAttributes()},this.forceContextLoss=function(){const C=he.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=he.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return X},this.setPixelRatio=function(C){C!==void 0&&(X=C,this.setSize(H,ae,!1))},this.getSize=function(C){return C.set(H,ae)},this.setSize=function(C,B,W=!0){if(K.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}H=C,ae=B,t.width=Math.floor(C*X),t.height=Math.floor(B*X),W===!0&&(t.style.width=C+"px",t.style.height=B+"px"),this.setViewport(0,0,C,B)},this.getDrawingBufferSize=function(C){return C.set(H*X,ae*X).floor()},this.setDrawingBufferSize=function(C,B,W){H=C,ae=B,X=W,t.width=Math.floor(C*W),t.height=Math.floor(B*W),this.setViewport(0,0,C,B)},this.getCurrentViewport=function(C){return C.copy(N)},this.getViewport=function(C){return C.copy(xe)},this.setViewport=function(C,B,W,$){C.isVector4?xe.set(C.x,C.y,C.z,C.w):xe.set(C,B,W,$),ve.viewport(N.copy(xe).multiplyScalar(X).round())},this.getScissor=function(C){return C.copy($e)},this.setScissor=function(C,B,W,$){C.isVector4?$e.set(C.x,C.y,C.z,C.w):$e.set(C,B,W,$),ve.scissor(z.copy($e).multiplyScalar(X).round())},this.getScissorTest=function(){return tt},this.setScissorTest=function(C){ve.setScissorTest(tt=C)},this.setOpaqueSort=function(C){le=C},this.setTransparentSort=function(C){ue=C},this.getClearColor=function(C){return C.copy(qe.getClearColor())},this.setClearColor=function(){qe.setClearColor.apply(qe,arguments)},this.getClearAlpha=function(){return qe.getClearAlpha()},this.setClearAlpha=function(){qe.setClearAlpha.apply(qe,arguments)},this.clear=function(C=!0,B=!0,W=!0){let $=0;if(C){let O=!1;if(w!==null){const me=w.texture.format;O=me===Ef||me===Af||me===Jc}if(O){const me=w.texture.type,Ee=me===fs||me===Qs||me===ol||me===Uo||me===Mf||me===Tf,Be=qe.getClearColor(),Oe=qe.getClearAlpha(),Je=Be.r,ot=Be.g,ze=Be.b;Ee?(p[0]=Je,p[1]=ot,p[2]=ze,p[3]=Oe,I.clearBufferuiv(I.COLOR,0,p)):(m[0]=Je,m[1]=ot,m[2]=ze,m[3]=Oe,I.clearBufferiv(I.COLOR,0,m))}else $|=I.COLOR_BUFFER_BIT}B&&($|=I.DEPTH_BUFFER_BIT),W&&($|=I.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),I.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",se,!1),t.removeEventListener("webglcontextrestored",Re,!1),t.removeEventListener("webglcontextcreationerror",Ae,!1),Ie.dispose(),pt.dispose(),Pe.dispose(),E.dispose(),V.dispose(),ie.dispose(),Ft.dispose(),F.dispose(),Ue.dispose(),K.dispose(),K.removeEventListener("sessionstart",e_),K.removeEventListener("sessionend",t_),qr.stop()};function se(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function Re(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const C=Xe.autoReset,B=Le.enabled,W=Le.autoUpdate,$=Le.needsUpdate,O=Le.type;Te(),Xe.autoReset=C,Le.enabled=B,Le.autoUpdate=W,Le.needsUpdate=$,Le.type=O}function Ae(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function rt(C){const B=C.target;B.removeEventListener("dispose",rt),Xt(B)}function Xt(C){Pi(C),Pe.remove(C)}function Pi(C){const B=Pe.get(C).programs;B!==void 0&&(B.forEach(function(W){Ue.releaseProgram(W)}),C.isShaderMaterial&&Ue.releaseShaderCache(C))}this.renderBufferDirect=function(C,B,W,$,O,me){B===null&&(B=ft);const Ee=O.isMesh&&O.matrixWorld.determinant()<0,Be=zA(C,B,W,$,O);ve.setMaterial($,Ee);let Oe=W.index,Je=1;if($.wireframe===!0){if(Oe=oe.getWireframeAttribute(W),Oe===void 0)return;Je=2}const ot=W.drawRange,ze=W.attributes.position;let St=ot.start*Je,Ut=(ot.start+ot.count)*Je;me!==null&&(St=Math.max(St,me.start*Je),Ut=Math.min(Ut,(me.start+me.count)*Je)),Oe!==null?(St=Math.max(St,0),Ut=Math.min(Ut,Oe.count)):ze!=null&&(St=Math.max(St,0),Ut=Math.min(Ut,ze.count));const Bt=Ut-St;if(Bt<0||Bt===1/0)return;Ft.setup(O,$,Be,W,Oe);let Qi,At=Fe;if(Oe!==null&&(Qi=te.get(Oe),At=xt,At.setIndex(Qi)),O.isMesh)$.wireframe===!0?(ve.setLineWidth($.wireframeLinewidth*pe()),At.setMode(I.LINES)):At.setMode(I.TRIANGLES);else if(O.isLine){let Ve=$.linewidth;Ve===void 0&&(Ve=1),ve.setLineWidth(Ve*pe()),O.isLineSegments?At.setMode(I.LINES):O.isLineLoop?At.setMode(I.LINE_LOOP):At.setMode(I.LINE_STRIP)}else O.isPoints?At.setMode(I.POINTS):O.isSprite&&At.setMode(I.TRIANGLES);if(O.isBatchedMesh)if(O._multiDrawInstances!==null)At.renderMultiDrawInstances(O._multiDrawStarts,O._multiDrawCounts,O._multiDrawCount,O._multiDrawInstances);else if(he.get("WEBGL_multi_draw"))At.renderMultiDraw(O._multiDrawStarts,O._multiDrawCounts,O._multiDrawCount);else{const Ve=O._multiDrawStarts,bs=O._multiDrawCounts,Et=O._multiDrawCount,Un=Oe?te.get(Oe).bytesPerElement:1,ea=Pe.get($).currentProgram.getUniforms();for(let fn=0;fn<Et;fn++)ea.setValue(I,"_gl_DrawID",fn),At.render(Ve[fn]/Un,bs[fn])}else if(O.isInstancedMesh)At.renderInstances(St,Bt,O.count);else if(W.isInstancedBufferGeometry){const Ve=W._maxInstanceCount!==void 0?W._maxInstanceCount:1/0,bs=Math.min(W.instanceCount,Ve);At.renderInstances(St,Bt,bs)}else At.render(St,Bt)};function It(C,B,W){C.transparent===!0&&C.side===ss&&C.forceSinglePass===!1?(C.side=Yi,C.needsUpdate=!0,Sh(C,B,W),C.side=js,C.needsUpdate=!0,Sh(C,B,W),C.side=ss):Sh(C,B,W)}this.compile=function(C,B,W=null){W===null&&(W=C),y=pt.get(W),y.init(B),_.push(y),W.traverseVisible(function(O){O.isLight&&O.layers.test(B.layers)&&(y.pushLight(O),O.castShadow&&y.pushShadow(O))}),C!==W&&C.traverseVisible(function(O){O.isLight&&O.layers.test(B.layers)&&(y.pushLight(O),O.castShadow&&y.pushShadow(O))}),y.setupLights();const $=new Set;return C.traverse(function(O){if(!(O.isMesh||O.isPoints||O.isLine||O.isSprite))return;const me=O.material;if(me)if(Array.isArray(me))for(let Ee=0;Ee<me.length;Ee++){const Be=me[Ee];It(Be,W,O),$.add(Be)}else It(me,W,O),$.add(me)}),_.pop(),y=null,$},this.compileAsync=function(C,B,W=null){const $=this.compile(C,B,W);return new Promise(O=>{function me(){if($.forEach(function(Ee){Pe.get(Ee).currentProgram.isReady()&&$.delete(Ee)}),$.size===0){O(C);return}setTimeout(me,10)}he.get("KHR_parallel_shader_compile")!==null?me():setTimeout(me,10)})};let Fn=null;function vs(C){Fn&&Fn(C)}function e_(){qr.stop()}function t_(){qr.start()}const qr=new nM;qr.setAnimationLoop(vs),typeof self<"u"&&qr.setContext(self),this.setAnimationLoop=function(C){Fn=C,K.setAnimationLoop(C),C===null?qr.stop():qr.start()},K.addEventListener("sessionstart",e_),K.addEventListener("sessionend",t_),this.render=function(C,B){if(B!==void 0&&B.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;if(C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),B.parent===null&&B.matrixWorldAutoUpdate===!0&&B.updateMatrixWorld(),K.enabled===!0&&K.isPresenting===!0&&(K.cameraAutoUpdate===!0&&K.updateCamera(B),B=K.getCamera()),C.isScene===!0&&C.onBeforeRender(v,C,B,w),y=pt.get(C,_.length),y.init(B),_.push(y),ke.multiplyMatrices(B.projectionMatrix,B.matrixWorldInverse),J.setFromProjectionMatrix(ke),we=this.localClippingEnabled,ce=de.init(this.clippingPlanes,we),g=Ie.get(C,x.length),g.init(),x.push(g),K.enabled===!0&&K.isPresenting===!0){const me=v.xr.getDepthSensingMesh();me!==null&&mp(me,B,-1/0,v.sortObjects)}mp(C,B,0,v.sortObjects),g.finish(),v.sortObjects===!0&&g.sort(le,ue),re=K.enabled===!1||K.isPresenting===!1||K.hasDepthSensing()===!1,re&&qe.addToRenderList(g,C),this.info.render.frame++,ce===!0&&de.beginShadows();const W=y.state.shadowsArray;Le.render(W,C,B),ce===!0&&de.endShadows(),this.info.autoReset===!0&&this.info.reset();const $=g.opaque,O=g.transmissive;if(y.setupLights(),B.isArrayCamera){const me=B.cameras;if(O.length>0)for(let Ee=0,Be=me.length;Ee<Be;Ee++){const Oe=me[Ee];n_($,O,C,Oe)}re&&qe.render(C);for(let Ee=0,Be=me.length;Ee<Be;Ee++){const Oe=me[Ee];i_(g,C,Oe,Oe.viewport)}}else O.length>0&&n_($,O,C,B),re&&qe.render(C),i_(g,C,B);w!==null&&(P.updateMultisampleRenderTarget(w),P.updateRenderTargetMipmap(w)),C.isScene===!0&&C.onAfterRender(v,C,B),Ft.resetDefaultState(),S=-1,b=null,_.pop(),_.length>0?(y=_[_.length-1],ce===!0&&de.setGlobalState(v.clippingPlanes,y.state.camera)):y=null,x.pop(),x.length>0?g=x[x.length-1]:g=null};function mp(C,B,W,$){if(C.visible===!1)return;if(C.layers.test(B.layers)){if(C.isGroup)W=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(B);else if(C.isLight)y.pushLight(C),C.castShadow&&y.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||J.intersectsSprite(C)){$&&He.setFromMatrixPosition(C.matrixWorld).applyMatrix4(ke);const Ee=ie.update(C),Be=C.material;Be.visible&&g.push(C,Ee,Be,W,He.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(!C.frustumCulled||J.intersectsObject(C))){const Ee=ie.update(C),Be=C.material;if($&&(C.boundingSphere!==void 0?(C.boundingSphere===null&&C.computeBoundingSphere(),He.copy(C.boundingSphere.center)):(Ee.boundingSphere===null&&Ee.computeBoundingSphere(),He.copy(Ee.boundingSphere.center)),He.applyMatrix4(C.matrixWorld).applyMatrix4(ke)),Array.isArray(Be)){const Oe=Ee.groups;for(let Je=0,ot=Oe.length;Je<ot;Je++){const ze=Oe[Je],St=Be[ze.materialIndex];St&&St.visible&&g.push(C,Ee,St,W,He.z,ze)}}else Be.visible&&g.push(C,Ee,Be,W,He.z,null)}}const me=C.children;for(let Ee=0,Be=me.length;Ee<Be;Ee++)mp(me[Ee],B,W,$)}function i_(C,B,W,$){const O=C.opaque,me=C.transmissive,Ee=C.transparent;y.setupLightsView(W),ce===!0&&de.setGlobalState(v.clippingPlanes,W),$&&ve.viewport(N.copy($)),O.length>0&&bh(O,B,W),me.length>0&&bh(me,B,W),Ee.length>0&&bh(Ee,B,W),ve.buffers.depth.setTest(!0),ve.buffers.depth.setMask(!0),ve.buffers.color.setMask(!0),ve.setPolygonOffset(!1)}function n_(C,B,W,$){if((W.isScene===!0?W.overrideMaterial:null)!==null)return;y.state.transmissionRenderTarget[$.id]===void 0&&(y.state.transmissionRenderTarget[$.id]=new Dn(1,1,{generateMipmaps:!0,type:he.has("EXT_color_buffer_half_float")||he.has("EXT_color_buffer_float")?$o:fs,minFilter:os,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:yt.workingColorSpace}));const me=y.state.transmissionRenderTarget[$.id],Ee=$.viewport||N;me.setSize(Ee.z,Ee.w);const Be=v.getRenderTarget();v.setRenderTarget(me),v.getClearColor(k),q=v.getClearAlpha(),q<1&&v.setClearColor(16777215,.5),v.clear(),re&&qe.render(W);const Oe=v.toneMapping;v.toneMapping=Hs;const Je=$.viewport;if($.viewport!==void 0&&($.viewport=void 0),y.setupLightsView($),ce===!0&&de.setGlobalState(v.clippingPlanes,$),bh(C,W,$),P.updateMultisampleRenderTarget(me),P.updateRenderTargetMipmap(me),he.has("WEBGL_multisampled_render_to_texture")===!1){let ot=!1;for(let ze=0,St=B.length;ze<St;ze++){const Ut=B[ze],Bt=Ut.object,Qi=Ut.geometry,At=Ut.material,Ve=Ut.group;if(At.side===ss&&Bt.layers.test($.layers)){const bs=At.side;At.side=Yi,At.needsUpdate=!0,s_(Bt,W,$,Qi,At,Ve),At.side=bs,At.needsUpdate=!0,ot=!0}}ot===!0&&(P.updateMultisampleRenderTarget(me),P.updateRenderTargetMipmap(me))}v.setRenderTarget(Be),v.setClearColor(k,q),Je!==void 0&&($.viewport=Je),v.toneMapping=Oe}function bh(C,B,W){const $=B.isScene===!0?B.overrideMaterial:null;for(let O=0,me=C.length;O<me;O++){const Ee=C[O],Be=Ee.object,Oe=Ee.geometry,Je=$===null?Ee.material:$,ot=Ee.group;Be.layers.test(W.layers)&&s_(Be,B,W,Oe,Je,ot)}}function s_(C,B,W,$,O,me){C.onBeforeRender(v,B,W,$,O,me),C.modelViewMatrix.multiplyMatrices(W.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),O.onBeforeRender(v,B,W,$,C,me),O.transparent===!0&&O.side===ss&&O.forceSinglePass===!1?(O.side=Yi,O.needsUpdate=!0,v.renderBufferDirect(W,B,$,O,C,me),O.side=js,O.needsUpdate=!0,v.renderBufferDirect(W,B,$,O,C,me),O.side=ss):v.renderBufferDirect(W,B,$,O,C,me),C.onAfterRender(v,B,W,$,O,me)}function Sh(C,B,W){B.isScene!==!0&&(B=ft);const $=Pe.get(C),O=y.state.lights,me=y.state.shadowsArray,Ee=O.state.version,Be=Ue.getParameters(C,O.state,me,B,W),Oe=Ue.getProgramCacheKey(Be);let Je=$.programs;$.environment=C.isMeshStandardMaterial?B.environment:null,$.fog=B.fog,$.envMap=(C.isMeshStandardMaterial?V:E).get(C.envMap||$.environment),$.envMapRotation=$.environment!==null&&C.envMap===null?B.environmentRotation:C.envMapRotation,Je===void 0&&(C.addEventListener("dispose",rt),Je=new Map,$.programs=Je);let ot=Je.get(Oe);if(ot!==void 0){if($.currentProgram===ot&&$.lightsStateVersion===Ee)return o_(C,Be),ot}else Be.uniforms=Ue.getUniforms(C),C.onBeforeCompile(Be,v),ot=Ue.acquireProgram(Be,Oe),Je.set(Oe,ot),$.uniforms=Be.uniforms;const ze=$.uniforms;return(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(ze.clippingPlanes=de.uniform),o_(C,Be),$.needsLights=GA(C),$.lightsStateVersion=Ee,$.needsLights&&(ze.ambientLightColor.value=O.state.ambient,ze.lightProbe.value=O.state.probe,ze.directionalLights.value=O.state.directional,ze.directionalLightShadows.value=O.state.directionalShadow,ze.spotLights.value=O.state.spot,ze.spotLightShadows.value=O.state.spotShadow,ze.rectAreaLights.value=O.state.rectArea,ze.ltc_1.value=O.state.rectAreaLTC1,ze.ltc_2.value=O.state.rectAreaLTC2,ze.pointLights.value=O.state.point,ze.pointLightShadows.value=O.state.pointShadow,ze.hemisphereLights.value=O.state.hemi,ze.directionalShadowMap.value=O.state.directionalShadowMap,ze.directionalShadowMatrix.value=O.state.directionalShadowMatrix,ze.spotShadowMap.value=O.state.spotShadowMap,ze.spotLightMatrix.value=O.state.spotLightMatrix,ze.spotLightMap.value=O.state.spotLightMap,ze.pointShadowMap.value=O.state.pointShadowMap,ze.pointShadowMatrix.value=O.state.pointShadowMatrix),$.currentProgram=ot,$.uniformsList=null,ot}function r_(C){if(C.uniformsList===null){const B=C.currentProgram.getUniforms();C.uniformsList=sd.seqWithValue(B.seq,C.uniforms)}return C.uniformsList}function o_(C,B){const W=Pe.get(C);W.outputColorSpace=B.outputColorSpace,W.batching=B.batching,W.batchingColor=B.batchingColor,W.instancing=B.instancing,W.instancingColor=B.instancingColor,W.instancingMorph=B.instancingMorph,W.skinning=B.skinning,W.morphTargets=B.morphTargets,W.morphNormals=B.morphNormals,W.morphColors=B.morphColors,W.morphTargetsCount=B.morphTargetsCount,W.numClippingPlanes=B.numClippingPlanes,W.numIntersection=B.numClipIntersection,W.vertexAlphas=B.vertexAlphas,W.vertexTangents=B.vertexTangents,W.toneMapping=B.toneMapping}function zA(C,B,W,$,O){B.isScene!==!0&&(B=ft),P.resetTextureUnits();const me=B.fog,Ee=$.isMeshStandardMaterial?B.environment:null,Be=w===null?v.outputColorSpace:w.isXRRenderTarget===!0?w.texture.colorSpace:Xo,Oe=($.isMeshStandardMaterial?V:E).get($.envMap||Ee),Je=$.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,ot=!!W.attributes.tangent&&(!!$.normalMap||$.anisotropy>0),ze=!!W.morphAttributes.position,St=!!W.morphAttributes.normal,Ut=!!W.morphAttributes.color;let Bt=Hs;$.toneMapped&&(w===null||w.isXRRenderTarget===!0)&&(Bt=v.toneMapping);const Qi=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,At=Qi!==void 0?Qi.length:0,Ve=Pe.get($),bs=y.state.lights;if(ce===!0&&(we===!0||C!==b)){const An=C===b&&$.id===S;de.setState($,C,An)}let Et=!1;$.version===Ve.__version?(Ve.needsLights&&Ve.lightsStateVersion!==bs.state.version||Ve.outputColorSpace!==Be||O.isBatchedMesh&&Ve.batching===!1||!O.isBatchedMesh&&Ve.batching===!0||O.isBatchedMesh&&Ve.batchingColor===!0&&O.colorTexture===null||O.isBatchedMesh&&Ve.batchingColor===!1&&O.colorTexture!==null||O.isInstancedMesh&&Ve.instancing===!1||!O.isInstancedMesh&&Ve.instancing===!0||O.isSkinnedMesh&&Ve.skinning===!1||!O.isSkinnedMesh&&Ve.skinning===!0||O.isInstancedMesh&&Ve.instancingColor===!0&&O.instanceColor===null||O.isInstancedMesh&&Ve.instancingColor===!1&&O.instanceColor!==null||O.isInstancedMesh&&Ve.instancingMorph===!0&&O.morphTexture===null||O.isInstancedMesh&&Ve.instancingMorph===!1&&O.morphTexture!==null||Ve.envMap!==Oe||$.fog===!0&&Ve.fog!==me||Ve.numClippingPlanes!==void 0&&(Ve.numClippingPlanes!==de.numPlanes||Ve.numIntersection!==de.numIntersection)||Ve.vertexAlphas!==Je||Ve.vertexTangents!==ot||Ve.morphTargets!==ze||Ve.morphNormals!==St||Ve.morphColors!==Ut||Ve.toneMapping!==Bt||Ve.morphTargetsCount!==At)&&(Et=!0):(Et=!0,Ve.__version=$.version);let Un=Ve.currentProgram;Et===!0&&(Un=Sh($,B,O));let ea=!1,fn=!1,Al=!1;const Ot=Un.getUniforms(),es=Ve.uniforms;if(ve.useProgram(Un.program)&&(ea=!0,fn=!0,Al=!0),$.id!==S&&(S=$.id,fn=!0),ea||b!==C){ve.buffers.depth.getReversed()?(ye.copy(C.projectionMatrix),O1(ye),z1(ye),Ot.setValue(I,"projectionMatrix",ye)):Ot.setValue(I,"projectionMatrix",C.projectionMatrix),Ot.setValue(I,"viewMatrix",C.matrixWorldInverse);const or=Ot.map.cameraPosition;or!==void 0&&or.setValue(I,Ze.setFromMatrixPosition(C.matrixWorld)),De.logarithmicDepthBuffer&&Ot.setValue(I,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&Ot.setValue(I,"isOrthographic",C.isOrthographicCamera===!0),b!==C&&(b=C,fn=!0,Al=!0)}if(O.isSkinnedMesh){Ot.setOptional(I,O,"bindMatrix"),Ot.setOptional(I,O,"bindMatrixInverse");const An=O.skeleton;An&&(An.boneTexture===null&&An.computeBoneTexture(),Ot.setValue(I,"boneTexture",An.boneTexture,P))}O.isBatchedMesh&&(Ot.setOptional(I,O,"batchingTexture"),Ot.setValue(I,"batchingTexture",O._matricesTexture,P),Ot.setOptional(I,O,"batchingIdTexture"),Ot.setValue(I,"batchingIdTexture",O._indirectTexture,P),Ot.setOptional(I,O,"batchingColorTexture"),O._colorsTexture!==null&&Ot.setValue(I,"batchingColorTexture",O._colorsTexture,P));const El=W.morphAttributes;if((El.position!==void 0||El.normal!==void 0||El.color!==void 0)&&Ke.update(O,W,Un),(fn||Ve.receiveShadow!==O.receiveShadow)&&(Ve.receiveShadow=O.receiveShadow,Ot.setValue(I,"receiveShadow",O.receiveShadow)),$.isMeshGouraudMaterial&&$.envMap!==null&&(es.envMap.value=Oe,es.flipEnvMap.value=Oe.isCubeTexture&&Oe.isRenderTargetTexture===!1?-1:1),$.isMeshStandardMaterial&&$.envMap===null&&B.environment!==null&&(es.envMapIntensity.value=B.environmentIntensity),fn&&(Ot.setValue(I,"toneMappingExposure",v.toneMappingExposure),Ve.needsLights&&kA(es,Al),me&&$.fog===!0&&Me.refreshFogUniforms(es,me),Me.refreshMaterialUniforms(es,$,X,ae,y.state.transmissionRenderTarget[C.id]),sd.upload(I,r_(Ve),es,P)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(sd.upload(I,r_(Ve),es,P),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&Ot.setValue(I,"center",O.center),Ot.setValue(I,"modelViewMatrix",O.modelViewMatrix),Ot.setValue(I,"normalMatrix",O.normalMatrix),Ot.setValue(I,"modelMatrix",O.matrixWorld),$.isShaderMaterial||$.isRawShaderMaterial){const An=$.uniformsGroups;for(let or=0,ar=An.length;or<ar;or++){const a_=An[or];F.update(a_,Un),F.bind(a_,Un)}}return Un}function kA(C,B){C.ambientLightColor.needsUpdate=B,C.lightProbe.needsUpdate=B,C.directionalLights.needsUpdate=B,C.directionalLightShadows.needsUpdate=B,C.pointLights.needsUpdate=B,C.pointLightShadows.needsUpdate=B,C.spotLights.needsUpdate=B,C.spotLightShadows.needsUpdate=B,C.rectAreaLights.needsUpdate=B,C.hemisphereLights.needsUpdate=B}function GA(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(C,B,W){Pe.get(C.texture).__webglTexture=B,Pe.get(C.depthTexture).__webglTexture=W;const $=Pe.get(C);$.__hasExternalTextures=!0,$.__autoAllocateDepthBuffer=W===void 0,$.__autoAllocateDepthBuffer||he.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),$.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(C,B){const W=Pe.get(C);W.__webglFramebuffer=B,W.__useDefaultFramebuffer=B===void 0},this.setRenderTarget=function(C,B=0,W=0){w=C,T=B,M=W;let $=!0,O=null,me=!1,Ee=!1;if(C){const Oe=Pe.get(C);if(Oe.__useDefaultFramebuffer!==void 0)ve.bindFramebuffer(I.FRAMEBUFFER,null),$=!1;else if(Oe.__webglFramebuffer===void 0)P.setupRenderTarget(C);else if(Oe.__hasExternalTextures)P.rebindTextures(C,Pe.get(C.texture).__webglTexture,Pe.get(C.depthTexture).__webglTexture);else if(C.depthBuffer){const ze=C.depthTexture;if(Oe.__boundDepthTexture!==ze){if(ze!==null&&Pe.has(ze)&&(C.width!==ze.image.width||C.height!==ze.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");P.setupDepthRenderbuffer(C)}}const Je=C.texture;(Je.isData3DTexture||Je.isDataArrayTexture||Je.isCompressedArrayTexture)&&(Ee=!0);const ot=Pe.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(Array.isArray(ot[B])?O=ot[B][W]:O=ot[B],me=!0):C.samples>0&&P.useMultisampledRTT(C)===!1?O=Pe.get(C).__webglMultisampledFramebuffer:Array.isArray(ot)?O=ot[W]:O=ot,N.copy(C.viewport),z.copy(C.scissor),L=C.scissorTest}else N.copy(xe).multiplyScalar(X).floor(),z.copy($e).multiplyScalar(X).floor(),L=tt;if(ve.bindFramebuffer(I.FRAMEBUFFER,O)&&$&&ve.drawBuffers(C,O),ve.viewport(N),ve.scissor(z),ve.setScissorTest(L),me){const Oe=Pe.get(C.texture);I.framebufferTexture2D(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,I.TEXTURE_CUBE_MAP_POSITIVE_X+B,Oe.__webglTexture,W)}else if(Ee){const Oe=Pe.get(C.texture),Je=B||0;I.framebufferTextureLayer(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,Oe.__webglTexture,W||0,Je)}S=-1},this.readRenderTargetPixels=function(C,B,W,$,O,me,Ee){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Be=Pe.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Ee!==void 0&&(Be=Be[Ee]),Be){ve.bindFramebuffer(I.FRAMEBUFFER,Be);try{const Oe=C.texture,Je=Oe.format,ot=Oe.type;if(!De.textureFormatReadable(Je)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!De.textureTypeReadable(ot)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}B>=0&&B<=C.width-$&&W>=0&&W<=C.height-O&&I.readPixels(B,W,$,O,ht.convert(Je),ht.convert(ot),me)}finally{const Oe=w!==null?Pe.get(w).__webglFramebuffer:null;ve.bindFramebuffer(I.FRAMEBUFFER,Oe)}}},this.readRenderTargetPixelsAsync=async function(C,B,W,$,O,me,Ee){if(!(C&&C.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Be=Pe.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Ee!==void 0&&(Be=Be[Ee]),Be){const Oe=C.texture,Je=Oe.format,ot=Oe.type;if(!De.textureFormatReadable(Je))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!De.textureTypeReadable(ot))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(B>=0&&B<=C.width-$&&W>=0&&W<=C.height-O){ve.bindFramebuffer(I.FRAMEBUFFER,Be);const ze=I.createBuffer();I.bindBuffer(I.PIXEL_PACK_BUFFER,ze),I.bufferData(I.PIXEL_PACK_BUFFER,me.byteLength,I.STREAM_READ),I.readPixels(B,W,$,O,ht.convert(Je),ht.convert(ot),0);const St=w!==null?Pe.get(w).__webglFramebuffer:null;ve.bindFramebuffer(I.FRAMEBUFFER,St);const Ut=I.fenceSync(I.SYNC_GPU_COMMANDS_COMPLETE,0);return I.flush(),await B1(I,Ut,4),I.bindBuffer(I.PIXEL_PACK_BUFFER,ze),I.getBufferSubData(I.PIXEL_PACK_BUFFER,0,me),I.deleteBuffer(ze),I.deleteSync(Ut),me}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(C,B=null,W=0){C.isTexture!==!0&&(Ql("WebGLRenderer: copyFramebufferToTexture function signature has changed."),B=arguments[0]||null,C=arguments[1]);const $=Math.pow(2,-W),O=Math.floor(C.image.width*$),me=Math.floor(C.image.height*$),Ee=B!==null?B.x:0,Be=B!==null?B.y:0;P.setTexture2D(C,0),I.copyTexSubImage2D(I.TEXTURE_2D,W,0,0,Ee,Be,O,me),ve.unbindTexture()},this.copyTextureToTexture=function(C,B,W=null,$=null,O=0){C.isTexture!==!0&&(Ql("WebGLRenderer: copyTextureToTexture function signature has changed."),$=arguments[0]||null,C=arguments[1],B=arguments[2],O=arguments[3]||0,W=null);let me,Ee,Be,Oe,Je,ot,ze,St,Ut;const Bt=C.isCompressedTexture?C.mipmaps[O]:C.image;W!==null?(me=W.max.x-W.min.x,Ee=W.max.y-W.min.y,Be=W.isBox3?W.max.z-W.min.z:1,Oe=W.min.x,Je=W.min.y,ot=W.isBox3?W.min.z:0):(me=Bt.width,Ee=Bt.height,Be=Bt.depth||1,Oe=0,Je=0,ot=0),$!==null?(ze=$.x,St=$.y,Ut=$.z):(ze=0,St=0,Ut=0);const Qi=ht.convert(B.format),At=ht.convert(B.type);let Ve;B.isData3DTexture?(P.setTexture3D(B,0),Ve=I.TEXTURE_3D):B.isDataArrayTexture||B.isCompressedArrayTexture?(P.setTexture2DArray(B,0),Ve=I.TEXTURE_2D_ARRAY):(P.setTexture2D(B,0),Ve=I.TEXTURE_2D),I.pixelStorei(I.UNPACK_FLIP_Y_WEBGL,B.flipY),I.pixelStorei(I.UNPACK_PREMULTIPLY_ALPHA_WEBGL,B.premultiplyAlpha),I.pixelStorei(I.UNPACK_ALIGNMENT,B.unpackAlignment);const bs=I.getParameter(I.UNPACK_ROW_LENGTH),Et=I.getParameter(I.UNPACK_IMAGE_HEIGHT),Un=I.getParameter(I.UNPACK_SKIP_PIXELS),ea=I.getParameter(I.UNPACK_SKIP_ROWS),fn=I.getParameter(I.UNPACK_SKIP_IMAGES);I.pixelStorei(I.UNPACK_ROW_LENGTH,Bt.width),I.pixelStorei(I.UNPACK_IMAGE_HEIGHT,Bt.height),I.pixelStorei(I.UNPACK_SKIP_PIXELS,Oe),I.pixelStorei(I.UNPACK_SKIP_ROWS,Je),I.pixelStorei(I.UNPACK_SKIP_IMAGES,ot);const Al=C.isDataArrayTexture||C.isData3DTexture,Ot=B.isDataArrayTexture||B.isData3DTexture;if(C.isRenderTargetTexture||C.isDepthTexture){const es=Pe.get(C),El=Pe.get(B),An=Pe.get(es.__renderTarget),or=Pe.get(El.__renderTarget);ve.bindFramebuffer(I.READ_FRAMEBUFFER,An.__webglFramebuffer),ve.bindFramebuffer(I.DRAW_FRAMEBUFFER,or.__webglFramebuffer);for(let ar=0;ar<Be;ar++)Al&&I.framebufferTextureLayer(I.READ_FRAMEBUFFER,I.COLOR_ATTACHMENT0,Pe.get(C).__webglTexture,O,ot+ar),C.isDepthTexture?(Ot&&I.framebufferTextureLayer(I.DRAW_FRAMEBUFFER,I.COLOR_ATTACHMENT0,Pe.get(B).__webglTexture,O,Ut+ar),I.blitFramebuffer(Oe,Je,me,Ee,ze,St,me,Ee,I.DEPTH_BUFFER_BIT,I.NEAREST)):Ot?I.copyTexSubImage3D(Ve,O,ze,St,Ut+ar,Oe,Je,me,Ee):I.copyTexSubImage2D(Ve,O,ze,St,Ut+ar,Oe,Je,me,Ee);ve.bindFramebuffer(I.READ_FRAMEBUFFER,null),ve.bindFramebuffer(I.DRAW_FRAMEBUFFER,null)}else Ot?C.isDataTexture||C.isData3DTexture?I.texSubImage3D(Ve,O,ze,St,Ut,me,Ee,Be,Qi,At,Bt.data):B.isCompressedArrayTexture?I.compressedTexSubImage3D(Ve,O,ze,St,Ut,me,Ee,Be,Qi,Bt.data):I.texSubImage3D(Ve,O,ze,St,Ut,me,Ee,Be,Qi,At,Bt):C.isDataTexture?I.texSubImage2D(I.TEXTURE_2D,O,ze,St,me,Ee,Qi,At,Bt.data):C.isCompressedTexture?I.compressedTexSubImage2D(I.TEXTURE_2D,O,ze,St,Bt.width,Bt.height,Qi,Bt.data):I.texSubImage2D(I.TEXTURE_2D,O,ze,St,me,Ee,Qi,At,Bt);I.pixelStorei(I.UNPACK_ROW_LENGTH,bs),I.pixelStorei(I.UNPACK_IMAGE_HEIGHT,Et),I.pixelStorei(I.UNPACK_SKIP_PIXELS,Un),I.pixelStorei(I.UNPACK_SKIP_ROWS,ea),I.pixelStorei(I.UNPACK_SKIP_IMAGES,fn),O===0&&B.generateMipmaps&&I.generateMipmap(Ve),ve.unbindTexture()},this.copyTextureToTexture3D=function(C,B,W=null,$=null,O=0){return C.isTexture!==!0&&(Ql("WebGLRenderer: copyTextureToTexture3D function signature has changed."),W=arguments[0]||null,$=arguments[1]||null,C=arguments[2],B=arguments[3],O=arguments[4]||0),Ql('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(C,B,W,$,O)},this.initRenderTarget=function(C){Pe.get(C).__webglFramebuffer===void 0&&P.setupRenderTarget(C)},this.initTexture=function(C){C.isCubeTexture?P.setTextureCube(C,0):C.isData3DTexture?P.setTexture3D(C,0):C.isDataArrayTexture||C.isCompressedArrayTexture?P.setTexture2DArray(C,0):P.setTexture2D(C,0),ve.unbindTexture()},this.resetState=function(){T=0,M=0,w=null,ve.reset(),Ft.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return as}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorspace=yt._getDrawingBufferColorSpace(e),t.unpackColorSpace=yt._getUnpackColorSpace()}}class Df{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Ce(e),this.density=t}clone(){return new Df(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Lf{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new Ce(e),this.near=t,this.far=i}clone(){return new Lf(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}let hM=class extends Nt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Yn,this.environmentIntensity=1,this.environmentRotation=new Yn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}},rh=class{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ec,this.updateRanges=[],this.version=0,this.uuid=Tn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,s=this.stride;n<s;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Tn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Tn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}};const ki=new R;let Pn=class uM{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)ki.fromBufferAttribute(this,t),ki.applyMatrix4(e),this.setXYZ(t,ki.x,ki.y,ki.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)ki.fromBufferAttribute(this,t),ki.applyNormalMatrix(e),this.setXYZ(t,ki.x,ki.y,ki.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)ki.fromBufferAttribute(this,t),ki.transformDirection(e),this.setXYZ(t,ki.x,ki.y,ki.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=$i(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=it(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=it(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=$i(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=$i(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=$i(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=$i(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),i=it(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=it(t,this.array),i=it(i,this.array),n=it(n,this.array),s=it(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return new bt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new uM(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}},zy=class extends zi{static get type(){return"SpriteMaterial"}constructor(e){super(),this.isSpriteMaterial=!0,this.color=new Ce(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}},pa;const Il=new R,ma=new R,ga=new R,ya=new Z,Dl=new Z,dM=new Ye,Hh=new R,Ll=new R,Wh=new R,J_=new Z,Hp=new Z,Q_=new Z;class fM extends Nt{constructor(e=new zy){if(super(),this.isSprite=!0,this.type="Sprite",pa===void 0){pa=new ct;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new rh(t,5);pa.setIndex([0,1,2,0,2,3]),pa.setAttribute("position",new Pn(i,3,0,!1)),pa.setAttribute("uv",new Pn(i,2,3,!1))}this.geometry=pa,this.material=e,this.center=new Z(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ma.setFromMatrixScale(this.matrixWorld),dM.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ga.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ma.multiplyScalar(-ga.z);const i=this.material.rotation;let n,s;i!==0&&(s=Math.cos(i),n=Math.sin(i));const r=this.center;$h(Hh.set(-.5,-.5,0),ga,r,ma,n,s),$h(Ll.set(.5,-.5,0),ga,r,ma,n,s),$h(Wh.set(.5,.5,0),ga,r,ma,n,s),J_.set(0,0),Hp.set(1,0),Q_.set(1,1);let a=e.ray.intersectTriangle(Hh,Ll,Wh,!1,Il);if(a===null&&($h(Ll.set(-.5,.5,0),ga,r,ma,n,s),Hp.set(0,1),a=e.ray.intersectTriangle(Hh,Wh,Ll,!1,Il),a===null))return;const l=e.ray.origin.distanceTo(Il);l<e.near||l>e.far||t.push({distance:l,point:Il.clone(),uv:Er.getInterpolation(Il,Hh,Ll,Wh,J_,Hp,Q_,new Z),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function $h(o,e,t,i,n,s){ya.subVectors(o,t).addScalar(.5).multiply(i),n!==void 0?(Dl.x=s*ya.x-n*ya.y,Dl.y=n*ya.x+s*ya.y):Dl.copy(ya),o.copy(e),o.x+=Dl.x,o.y+=Dl.y,o.applyMatrix4(dM)}const Xh=new R,e0=new R;class pM extends Nt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let i=0,n=t.length;i<n;i++){const s=t[i];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);const n=this.levels;let s;for(s=0;s<n.length&&!(t<n[s].distance);s++);return n.splice(s,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let i=0;i<t.length;i++)if(t[i].distance===e){const n=t.splice(i,1);return this.remove(n[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n;i++){let s=t[i].distance;if(t[i].object.visible&&(s-=s*t[i].hysteresis),e<s)break}return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){Xh.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(Xh);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Xh.setFromMatrixPosition(e.matrixWorld),e0.setFromMatrixPosition(this.matrixWorld);const i=Xh.distanceTo(e0)/e.zoom;t[0].object.visible=!0;let n,s;for(n=1,s=t.length;n<s;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),i>=r)t[n-1].object.visible=!1,t[n].object.visible=!0;else break}for(this._currentLevel=n-1;n<s;n++)t[n].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let n=0,s=i.length;n<s;n++){const r=i[n];t.object.levels.push({object:r.object.uuid,distance:r.distance,hysteresis:r.hysteresis})}return t}}const t0=new R,i0=new gt,n0=new gt,QP=new R,s0=new Ye,qh=new R,Wp=new gi,r0=new Ye,$p=new qo;class mM extends Kt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=xg,this.bindMatrix=new Ye,this.bindMatrixInverse=new Ye,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new mi),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,qh),this.boundingBox.expandByPoint(qh)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new gi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,qh),this.boundingSphere.expandByPoint(qh)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,n=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Wp.copy(this.boundingSphere),Wp.applyMatrix4(n),e.ray.intersectsSphere(Wp)!==!1&&(r0.copy(n).invert(),$p.copy(e.ray).applyMatrix4(r0),!(this.boundingBox!==null&&$p.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,$p)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new gt,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===xg?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===AS?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,n=this.geometry;i0.fromBufferAttribute(n.attributes.skinIndex,e),n0.fromBufferAttribute(n.attributes.skinWeight,e),t0.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const r=n0.getComponent(s);if(r!==0){const a=i0.getComponent(s);s0.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),t.addScaledVector(QP.copy(t0).applyMatrix4(s0),r)}}return t.applyMatrix4(this.bindMatrixInverse)}}class ky extends Nt{constructor(){super(),this.isBone=!0,this.type="Bone"}}let us=class extends xi{constructor(e=null,t=1,i=1,n,s,r,a,l,c=Ci,h=Ci,u,d){super(null,r,a,l,c,h,n,s,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};const o0=new Ye,eI=new Ye;class Ff{constructor(e=[],t=[]){this.uuid=Tn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new Ye)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new Ye;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let s=0,r=e.length;s<r;s++){const a=e[s]?e[s].matrixWorld:eI;o0.multiplyMatrices(a,t[s]),o0.toArray(i,s*16)}n!==null&&(n.needsUpdate=!0)}clone(){return new Ff(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new us(t,e,e,qi,rn);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){const s=e.bones[i];let r=t[s];r===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),r=new ky),this.bones.push(r),this.boneInverses.push(new Ye().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let n=0,s=t.length;n<s;n++){const r=t[n];e.bones.push(r.uuid);const a=i[n];e.boneInverses.push(a.toArray())}return e}}let Ur=class extends bt{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}};const xa=new Ye,a0=new Ye,Yh=[],l0=new mi,tI=new Ye,Fl=new Kt,Ul=new gi;class gM extends Kt{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Ur(new Float32Array(i*16),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,tI)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new mi),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,xa),l0.copy(e.boundingBox).applyMatrix4(xa),this.boundingBox.union(l0)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new gi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,xa),Ul.copy(e.boundingSphere).applyMatrix4(xa),this.boundingSphere.union(Ul)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const i=t.morphTargetInfluences,n=this.morphTexture.source.data.data,s=i.length+1,r=e*s+1;for(let a=0;a<i.length;a++)i[a]=n[r+a]}raycast(e,t){const i=this.matrixWorld,n=this.count;if(Fl.geometry=this.geometry,Fl.material=this.material,Fl.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ul.copy(this.boundingSphere),Ul.applyMatrix4(i),e.ray.intersectsSphere(Ul)!==!1))for(let s=0;s<n;s++){this.getMatrixAt(s,xa),a0.multiplyMatrices(i,xa),Fl.matrixWorld=a0,Fl.raycast(e,Yh);for(let r=0,a=Yh.length;r<a;r++){const l=Yh[r];l.instanceId=s,l.object=this,t.push(l)}Yh.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Ur(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const i=t.morphTargetInfluences,n=i.length+1;this.morphTexture===null&&(this.morphTexture=new us(new Float32Array(n*this.count),n,this.count,wf,rn));const s=this.morphTexture.source.data.data;let r=0;for(let c=0;c<i.length;c++)r+=i[c];const a=this.geometry.morphTargetsRelative?1:1-r,l=n*e;s[l]=a,s.set(i,l+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function Xp(o,e){return o-e}function iI(o,e){return o.z-e.z}function nI(o,e){return e.z-o.z}class sI{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,i,n){const s=this.pool,r=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const a=s[this.index];r.push(a),this.index++,a.start=e,a.count=t,a.z=i,a.index=n}reset(){this.list.length=0,this.index=0}}const en=new Ye,rI=new Ce(1,1,1),qp=new nh,Zh=new mi,eo=new gi,Bl=new R,c0=new R,oI=new R,Yp=new sI,Li=new Kt,Kh=[];function aI(o,e,t=0){const i=e.itemSize;if(o.isInterleavedBufferAttribute||o.array.constructor!==e.array.constructor){const n=o.count;for(let s=0;s<n;s++)for(let r=0;r<i;r++)e.setComponent(s+t,r,o.getComponent(s,r))}else e.array.set(o.array,t*i);e.needsUpdate=!0}function to(o,e){if(o.constructor!==e.constructor){const t=Math.min(o.length,e.length);for(let i=0;i<t;i++)e[i]=o[i]}else{const t=Math.min(o.length,e.length);e.set(new o.constructor(o.buffer,0,t))}}class yM extends Kt{get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}constructor(e,t,i=t*2,n){super(new ct,n),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=i,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),i=new us(t,e,e,qi,rn);this._matricesTexture=i}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),i=new us(t,e,e,Jc,Qs);this._indirectTexture=i}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),i=new us(t,e,e,qi,rn);i.colorSpace=yt.workingColorSpace,this._colorsTexture=i}_initializeGeometry(e){const t=this.geometry,i=this._maxVertexCount,n=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in e.attributes){const r=e.getAttribute(s),{array:a,itemSize:l,normalized:c}=r,h=new a.constructor(i*l),u=new bt(h,l,c);t.setAttribute(s,u)}if(e.getIndex()!==null){const s=i>65535?new Uint32Array(n):new Uint16Array(n);t.setIndex(new bt(s,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const i in t.attributes){if(!e.hasAttribute(i))throw new Error(`BatchedMesh: Added geometry missing "${i}". All geometries must have consistent attributes.`);const n=e.getAttribute(i),s=t.getAttribute(i);if(n.itemSize!==s.itemSize||n.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new mi);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const s=t[i].geometryIndex;this.getMatrixAt(i,en),this.getBoundingBoxAt(s,Zh).applyMatrix4(en),e.union(Zh)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new gi);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const s=t[i].geometryIndex;this.getMatrixAt(i,en),this.getBoundingSphereAt(s,eo).applyMatrix4(en),e.union(eo)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("BatchedMesh: Maximum item count reached.");const i={visible:!0,active:!0,geometryIndex:e};let n=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Xp),n=this._availableInstanceIds.shift(),this._instanceInfo[n]=i):(n=this._instanceInfo.length,this._instanceInfo.push(i));const s=this._matricesTexture;en.identity().toArray(s.image.data,n*16),s.needsUpdate=!0;const r=this._colorsTexture;return r&&(rI.toArray(r.image.data,n*4),r.needsUpdate=!0),this._visibilityChanged=!0,n}addGeometry(e,t=-1,i=-1){this._initializeGeometry(e),this._validateGeometry(e);const n={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;n.vertexStart=this._nextVertexStart,n.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const r=e.getIndex();if(r!==null&&(n.indexStart=this._nextIndexStart,n.reservedIndexCount=i===-1?r.count:i),n.indexStart!==-1&&n.indexStart+n.reservedIndexCount>this._maxIndexCount||n.vertexStart+n.reservedVertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Xp),l=this._availableGeometryIds.shift(),s[l]=n):(l=this._geometryCount,this._geometryCount++,s.push(n)),this.setGeometryAt(l,e),this._nextIndexStart=n.indexStart+n.reservedIndexCount,this._nextVertexStart=n.vertexStart+n.reservedVertexCount,l}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const i=this.geometry,n=i.getIndex()!==null,s=i.getIndex(),r=t.getIndex(),a=this._geometryInfo[e];if(n&&r.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const h in i.attributes){const u=t.getAttribute(h),d=i.getAttribute(h);aI(u,d,l);const f=u.itemSize;for(let p=u.count,m=c;p<m;p++){const g=l+p;for(let y=0;y<f;y++)d.setComponent(g,y,0)}d.needsUpdate=!0,d.addUpdateRange(l*f,c*f)}if(n){const h=a.indexStart,u=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let d=0;d<r.count;d++)s.setX(h+d,l+r.getX(d));for(let d=r.count,f=u;d<f;d++)s.setX(h+d,l);s.needsUpdate=!0,s.addUpdateRange(h,a.reservedIndexCount)}return a.start=n?a.indexStart:a.vertexStart,a.count=n?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const i=this._instanceInfo;for(let n=0,s=i.length;n<s;n++)i[n].geometryIndex===e&&this.deleteInstance(n);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?this:(t[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this)}optimize(){let e=0,t=0;const i=this._geometryInfo,n=i.map((r,a)=>a).sort((r,a)=>i[r].vertexStart-i[a].vertexStart),s=this.geometry;for(let r=0,a=i.length;r<a;r++){const l=n[r],c=i[l];if(c.active!==!1){if(s.index!==null){if(c.indexStart!==t){const{indexStart:h,vertexStart:u,reservedIndexCount:d}=c,f=s.index,p=f.array,m=e-u;for(let g=h;g<h+d;g++)p[g]=p[g]+m;f.array.copyWithin(t,h,h+d),f.addUpdateRange(t,d),c.indexStart=t}t+=c.reservedIndexCount}if(c.vertexStart!==e){const{vertexStart:h,reservedVertexCount:u}=c,d=s.attributes;for(const f in d){const p=d[f],{array:m,itemSize:g}=p;m.copyWithin(e*g,h*g,(h+u)*g),p.addUpdateRange(e*g,u*g)}c.vertexStart=e}e+=c.reservedVertexCount,c.start=s.index?c.indexStart:c.vertexStart,this._nextIndexStart=s.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,n=this._geometryInfo[e];if(n.boundingBox===null){const s=new mi,r=i.index,a=i.attributes.position;for(let l=n.start,c=n.start+n.count;l<c;l++){let h=l;r&&(h=r.getX(h)),s.expandByPoint(Bl.fromBufferAttribute(a,h))}n.boundingBox=s}return t.copy(n.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,n=this._geometryInfo[e];if(n.boundingSphere===null){const s=new gi;this.getBoundingBoxAt(e,Zh),Zh.getCenter(s.center);const r=i.index,a=i.attributes.position;let l=0;for(let c=n.start,h=n.start+n.count;c<h;c++){let u=c;r&&(u=r.getX(u)),Bl.fromBufferAttribute(a,u),l=Math.max(l,s.center.distanceToSquared(Bl))}s.radius=Math.sqrt(l),n.boundingSphere=s}return t.copy(n.boundingSphere),t}setMatrixAt(e,t){const i=this._instanceInfo,n=this._matricesTexture,s=this._matricesTexture.image.data;return e>=i.length||i[e].active===!1?this:(t.toArray(s,e*16),n.needsUpdate=!0,this)}getMatrixAt(e,t){const i=this._instanceInfo,n=this._matricesTexture.image.data;return e>=i.length||i[e].active===!1?null:t.fromArray(n,e*16)}setColorAt(e,t){this._colorsTexture===null&&this._initColorsTexture();const i=this._colorsTexture,n=this._colorsTexture.image.data,s=this._instanceInfo;return e>=s.length||s[e].active===!1?this:(t.toArray(n,e*4),i.needsUpdate=!0,this)}getColorAt(e,t){const i=this._colorsTexture.image.data,n=this._instanceInfo;return e>=n.length||n[e].active===!1?null:t.fromArray(i,e*4)}setVisibleAt(e,t){const i=this._instanceInfo;return e>=i.length||i[e].active===!1||i[e].visible===t?this:(i[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?!1:t[e].visible}setGeometryIdAt(e,t){const i=this._instanceInfo,n=this._geometryInfo;return e>=i.length||i[e].active===!1||t>=n.length||n[t].active===!1?null:(i[e].geometryIndex=t,this)}getGeometryIdAt(e){const t=this._instanceInfo;return e>=t.length||t[e].active===!1?-1:t[e].geometryIndex}getGeometryRangeAt(e,t={}){if(e<0||e>=this._geometryCount)return null;const i=this._geometryInfo[e];return t.vertexStart=i.vertexStart,t.vertexCount=i.vertexCount,t.reservedVertexCount=i.reservedVertexCount,t.indexStart=i.indexStart,t.indexCount=i.indexCount,t.reservedIndexCount=i.reservedIndexCount,t.start=i.start,t.count=i.count,t}setInstanceCount(e){const t=this._availableInstanceIds,i=this._instanceInfo;for(t.sort(Xp);t[t.length-1]===i.length;)i.pop(),t.pop();if(e<i.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const n=new Int32Array(e),s=new Int32Array(e);to(this._multiDrawCounts,n),to(this._multiDrawStarts,s),this._multiDrawCounts=n,this._multiDrawStarts=s,this._maxInstanceCount=e;const r=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;r.dispose(),this._initIndirectTexture(),to(r.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),to(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),to(l.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const i=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...i.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...i.map(l=>l.indexStart+l.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const s=this.geometry;s.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new ct,this._initializeGeometry(s));const r=this.geometry;s.index&&to(s.index.array,r.index.array);for(const a in s.attributes)to(s.attributes[a].array,r.attributes[a].array)}raycast(e,t){const i=this._instanceInfo,n=this._geometryInfo,s=this.matrixWorld,r=this.geometry;Li.material=this.material,Li.geometry.index=r.index,Li.geometry.attributes=r.attributes,Li.geometry.boundingBox===null&&(Li.geometry.boundingBox=new mi),Li.geometry.boundingSphere===null&&(Li.geometry.boundingSphere=new gi);for(let a=0,l=i.length;a<l;a++){if(!i[a].visible||!i[a].active)continue;const c=i[a].geometryIndex,h=n[c];Li.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(a,Li.matrixWorld).premultiply(s),this.getBoundingBoxAt(c,Li.geometry.boundingBox),this.getBoundingSphereAt(c,Li.geometry.boundingSphere),Li.raycast(e,Kh);for(let u=0,d=Kh.length;u<d;u++){const f=Kh[u];f.object=this,f.batchId=a,t.push(f)}Kh.length=0}Li.material=null,Li.geometry.index=null,Li.geometry.attributes={},Li.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(e,t,i,n,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const r=n.getIndex(),a=r===null?1:r.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,h=this._multiDrawCounts,u=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data;d&&(en.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse).multiply(this.matrixWorld),qp.setFromProjectionMatrix(en,e.coordinateSystem));let m=0;if(this.sortObjects){en.copy(this.matrixWorld).invert(),Bl.setFromMatrixPosition(i.matrixWorld).applyMatrix4(en),c0.set(0,0,-1).transformDirection(i.matrixWorld).transformDirection(en);for(let x=0,_=l.length;x<_;x++)if(l[x].visible&&l[x].active){const v=l[x].geometryIndex;this.getMatrixAt(x,en),this.getBoundingSphereAt(v,eo).applyMatrix4(en);let A=!1;if(d&&(A=!qp.intersectsSphere(eo)),!A){const T=u[v],M=oI.subVectors(eo.center,Bl).dot(c0);Yp.push(T.start,T.count,M,x)}}const g=Yp.list,y=this.customSort;y===null?g.sort(s.transparent?nI:iI):y.call(this,g,i);for(let x=0,_=g.length;x<_;x++){const v=g[x];c[m]=v.start*a,h[m]=v.count,p[m]=v.index,m++}Yp.reset()}else for(let g=0,y=l.length;g<y;g++)if(l[g].visible&&l[g].active){const x=l[g].geometryIndex;let _=!1;if(d&&(this.getMatrixAt(g,en),this.getBoundingSphereAt(x,eo).applyMatrix4(en),_=!qp.intersectsSphere(eo)),!_){const v=u[x];c[m]=v.start*a,h[m]=v.count,p[m]=g,m++}}f.needsUpdate=!0,this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(e,t,i,n,s,r){this.onBeforeRender(e,null,n,s,r)}}let Ji=class extends zi{static get type(){return"LineBasicMaterial"}constructor(e){super(),this.isLineBasicMaterial=!0,this.color=new Ce(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}};const Zd=new R,Kd=new R,h0=new Ye,Ol=new qo,jh=new gi,Zp=new R,u0=new R;class Br extends Nt{constructor(e=new ct,t=new Ji){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let n=1,s=t.count;n<s;n++)Zd.fromBufferAttribute(t,n-1),Kd.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=Zd.distanceTo(Kd);e.setAttribute("lineDistance",new Ne(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Line.threshold,r=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),jh.copy(i.boundingSphere),jh.applyMatrix4(n),jh.radius+=s,e.ray.intersectsSphere(jh)===!1)return;h0.copy(n).invert(),Ol.copy(e.ray).applyMatrix4(h0);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,h=i.index,d=i.attributes.position;if(h!==null){const f=Math.max(0,r.start),p=Math.min(h.count,r.start+r.count);for(let m=f,g=p-1;m<g;m+=c){const y=h.getX(m),x=h.getX(m+1),_=Jh(this,e,Ol,l,y,x);_&&t.push(_)}if(this.isLineLoop){const m=h.getX(p-1),g=h.getX(f),y=Jh(this,e,Ol,l,m,g);y&&t.push(y)}}else{const f=Math.max(0,r.start),p=Math.min(d.count,r.start+r.count);for(let m=f,g=p-1;m<g;m+=c){const y=Jh(this,e,Ol,l,m,m+1);y&&t.push(y)}if(this.isLineLoop){const m=Jh(this,e,Ol,l,p-1,f);m&&t.push(m)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=n.length;s<r;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function Jh(o,e,t,i,n,s){const r=o.geometry.attributes.position;if(Zd.fromBufferAttribute(r,n),Kd.fromBufferAttribute(r,s),t.distanceSqToSegment(Zd,Kd,Zp,u0)>i)return;Zp.applyMatrix4(o.matrixWorld);const l=e.ray.origin.distanceTo(Zp);if(!(l<e.near||l>e.far))return{distance:l,point:u0.clone().applyMatrix4(o.matrixWorld),index:n,face:null,faceIndex:null,barycoord:null,object:o}}const d0=new R,f0=new R;class xs extends Br{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let n=0,s=t.count;n<s;n+=2)d0.fromBufferAttribute(t,n),f0.fromBufferAttribute(t,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+d0.distanceTo(f0);e.setAttribute("lineDistance",new Ne(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class xM extends Br{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}let Gy=class extends zi{static get type(){return"PointsMaterial"}constructor(e){super(),this.isPointsMaterial=!0,this.color=new Ce(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}};const p0=new Ye,Ag=new qo,Qh=new gi,eu=new R;class _M extends Nt{constructor(e=new ct,t=new Gy){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Points.threshold,r=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Qh.copy(i.boundingSphere),Qh.applyMatrix4(n),Qh.radius+=s,e.ray.intersectsSphere(Qh)===!1)return;p0.copy(n).invert(),Ag.copy(e.ray).applyMatrix4(p0);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,u=i.attributes.position;if(c!==null){const d=Math.max(0,r.start),f=Math.min(c.count,r.start+r.count);for(let p=d,m=f;p<m;p++){const g=c.getX(p);eu.fromBufferAttribute(u,g),m0(eu,g,l,n,e,t,this)}}else{const d=Math.max(0,r.start),f=Math.min(u.count,r.start+r.count);for(let p=d,m=f;p<m;p++)eu.fromBufferAttribute(u,p),m0(eu,p,l,n,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=n.length;s<r;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function m0(o,e,t,i,n,s,r){const a=Ag.distanceSqToPoint(o);if(a<t){const l=new R;Ag.closestPointToPoint(o,l),l.applyMatrix4(i);const c=n.ray.origin.distanceTo(l);if(c<n.near||c>n.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:r})}}class lI extends xi{constructor(e,t,i,n,s,r,a,l,c){super(e,t,i,n,s,r,a,l,c),this.isVideoTexture=!0,this.minFilter=r!==void 0?r:ci,this.magFilter=s!==void 0?s:ci,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}let cI=class extends xi{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Ci,this.minFilter=Ci,this.generateMipmaps=!1,this.needsUpdate=!0}};class Uf extends xi{constructor(e,t,i,n,s,r,a,l,c,h,u,d){super(null,r,a,l,c,h,n,s,u,d),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class hI extends Uf{constructor(e,t,i,n,s,r){super(e,t,i,s,r),this.isCompressedArrayTexture=!0,this.image.depth=n,this.wrapR=Nn,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class uI extends Uf{constructor(e,t,i){super(void 0,e[0].width,e[0].height,t,i,Js),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class dI extends xi{constructor(e,t,i,n,s,r,a,l,c){super(e,t,i,n,s,r,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Jn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),s=0;t.push(0);for(let r=1;r<=e;r++)i=this.getPoint(r/e),s+=i.distanceTo(n),t.push(s),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const i=this.getLengths();let n=0;const s=i.length;let r;t?r=t:r=e*i[s-1];let a=0,l=s-1,c;for(;a<=l;)if(n=Math.floor(a+(l-a)/2),c=i[n]-r,c<0)a=n+1;else if(c>0)l=n-1;else{l=n;break}if(n=l,i[n]===r)return n/(s-1);const h=i[n],d=i[n+1]-h,f=(r-h)/d;return(n+f)/(s-1)}getTangent(e,t){let n=e-1e-4,s=e+1e-4;n<0&&(n=0),s>1&&(s=1);const r=this.getPoint(n),a=this.getPoint(s),l=t||(r.isVector2?new Z:new R);return l.copy(a).sub(r).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){const i=new R,n=[],s=[],r=[],a=new R,l=new Ye;for(let f=0;f<=e;f++){const p=f/e;n[f]=this.getTangentAt(p,new R)}s[0]=new R,r[0]=new R;let c=Number.MAX_VALUE;const h=Math.abs(n[0].x),u=Math.abs(n[0].y),d=Math.abs(n[0].z);h<=c&&(c=h,i.set(1,0,0)),u<=c&&(c=u,i.set(0,1,0)),d<=c&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),s[0].crossVectors(n[0],a),r[0].crossVectors(n[0],s[0]);for(let f=1;f<=e;f++){if(s[f]=s[f-1].clone(),r[f]=r[f-1].clone(),a.crossVectors(n[f-1],n[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Yt(n[f-1].dot(n[f]),-1,1));s[f].applyMatrix4(l.makeRotationAxis(a,p))}r[f].crossVectors(n[f],s[f])}if(t===!0){let f=Math.acos(Yt(s[0].dot(s[e]),-1,1));f/=e,n[0].dot(a.crossVectors(s[0],s[e]))>0&&(f=-f);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(n[p],f*p)),r[p].crossVectors(n[p],s[p])}return{tangents:n,normals:s,binormals:r}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Bf extends Jn{constructor(e=0,t=0,i=1,n=1,s=0,r=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=s,this.aEndAngle=r,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new Z){const i=t,n=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const r=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=n;for(;s>n;)s-=n;s<Number.EPSILON&&(r?s=0:s=n),this.aClockwise===!0&&!r&&(s===n?s=-n:s=s-n);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*h-f*u+this.aX,c=d*u+f*h+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class vM extends Bf{constructor(e,t,i,n,s,r){super(e,t,i,i,n,s,r),this.isArcCurve=!0,this.type="ArcCurve"}}function Vy(){let o=0,e=0,t=0,i=0;function n(s,r,a,l){o=s,e=a,t=-3*s+3*r-2*a-l,i=2*s-2*r+a+l}return{initCatmullRom:function(s,r,a,l,c){n(r,a,c*(a-s),c*(l-r))},initNonuniformCatmullRom:function(s,r,a,l,c,h,u){let d=(r-s)/c-(a-s)/(c+h)+(a-r)/h,f=(a-r)/h-(l-r)/(h+u)+(l-a)/u;d*=h,f*=h,n(r,a,d,f)},calc:function(s){const r=s*s,a=r*s;return o+e*s+t*r+i*a}}}const tu=new R,Kp=new Vy,jp=new Vy,Jp=new Vy;class bM extends Jn{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new R){const i=t,n=this.points,s=n.length,r=(s-(this.closed?0:1))*e;let a=Math.floor(r),l=r-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,h;this.closed||a>0?c=n[(a-1)%s]:(tu.subVectors(n[0],n[1]).add(n[0]),c=tu);const u=n[a%s],d=n[(a+1)%s];if(this.closed||a+2<s?h=n[(a+2)%s]:(tu.subVectors(n[s-1],n[s-2]).add(n[s-1]),h=tu),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(u),f),m=Math.pow(u.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(h),f);m<1e-4&&(m=1),p<1e-4&&(p=m),g<1e-4&&(g=m),Kp.initNonuniformCatmullRom(c.x,u.x,d.x,h.x,p,m,g),jp.initNonuniformCatmullRom(c.y,u.y,d.y,h.y,p,m,g),Jp.initNonuniformCatmullRom(c.z,u.z,d.z,h.z,p,m,g)}else this.curveType==="catmullrom"&&(Kp.initCatmullRom(c.x,u.x,d.x,h.x,this.tension),jp.initCatmullRom(c.y,u.y,d.y,h.y,this.tension),Jp.initCatmullRom(c.z,u.z,d.z,h.z,this.tension));return i.set(Kp.calc(l),jp.calc(l),Jp.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new R().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function g0(o,e,t,i,n){const s=(i-e)*.5,r=(n-t)*.5,a=o*o,l=o*a;return(2*t-2*i+s+r)*l+(-3*t+3*i-2*s-r)*a+s*o+t}function fI(o,e){const t=1-o;return t*t*e}function pI(o,e){return 2*(1-o)*o*e}function mI(o,e){return o*o*e}function dc(o,e,t,i){return fI(o,e)+pI(o,t)+mI(o,i)}function gI(o,e){const t=1-o;return t*t*t*e}function yI(o,e){const t=1-o;return 3*t*t*o*e}function xI(o,e){return 3*(1-o)*o*o*e}function _I(o,e){return o*o*o*e}function fc(o,e,t,i,n){return gI(o,e)+yI(o,t)+xI(o,i)+_I(o,n)}class Hy extends Jn{constructor(e=new Z,t=new Z,i=new Z,n=new Z){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new Z){const i=t,n=this.v0,s=this.v1,r=this.v2,a=this.v3;return i.set(fc(e,n.x,s.x,r.x,a.x),fc(e,n.y,s.y,r.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class SM extends Jn{constructor(e=new R,t=new R,i=new R,n=new R){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new R){const i=t,n=this.v0,s=this.v1,r=this.v2,a=this.v3;return i.set(fc(e,n.x,s.x,r.x,a.x),fc(e,n.y,s.y,r.y,a.y),fc(e,n.z,s.z,r.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Wy extends Jn{constructor(e=new Z,t=new Z){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Z){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Z){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class MM extends Jn{constructor(e=new R,t=new R){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new R){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new R){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class $y extends Jn{constructor(e=new Z,t=new Z,i=new Z){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new Z){const i=t,n=this.v0,s=this.v1,r=this.v2;return i.set(dc(e,n.x,s.x,r.x),dc(e,n.y,s.y,r.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Xy extends Jn{constructor(e=new R,t=new R,i=new R){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new R){const i=t,n=this.v0,s=this.v1,r=this.v2;return i.set(dc(e,n.x,s.x,r.x),dc(e,n.y,s.y,r.y),dc(e,n.z,s.z,r.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class qy extends Jn{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Z){const i=t,n=this.points,s=(n.length-1)*e,r=Math.floor(s),a=s-r,l=n[r===0?r:r-1],c=n[r],h=n[r>n.length-2?n.length-1:r+1],u=n[r>n.length-3?n.length-1:r+2];return i.set(g0(a,l.x,c.x,h.x,u.x),g0(a,l.y,c.y,h.y,u.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new Z().fromArray(n))}return this}}var jd=Object.freeze({__proto__:null,ArcCurve:vM,CatmullRomCurve3:bM,CubicBezierCurve:Hy,CubicBezierCurve3:SM,EllipseCurve:Bf,LineCurve:Wy,LineCurve3:MM,QuadraticBezierCurve:$y,QuadraticBezierCurve3:Xy,SplineCurve:qy});class TM extends Jn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new jd[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),n=this.getCurveLengths();let s=0;for(;s<n.length;){if(n[s]>=i){const r=n[s]-i,a=this.curves[s],l=a.getLength(),c=l===0?0:1-r/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let n=0,s=this.curves;n<s.length;n++){const r=s[n],a=r.isEllipseCurve?e*2:r.isLineCurve||r.isLineCurve3?1:r.isSplineCurve?e*r.points.length:e,l=r.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(new jd[n.type]().fromJSON(n))}return this}}class Pc extends TM{constructor(e){super(),this.type="Path",this.currentPoint=new Z,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new Wy(this.currentPoint.clone(),new Z(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){const s=new $y(this.currentPoint.clone(),new Z(e,t),new Z(i,n));return this.curves.push(s),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,s,r){const a=new Hy(this.currentPoint.clone(),new Z(e,t),new Z(i,n),new Z(s,r));return this.curves.push(a),this.currentPoint.set(s,r),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new qy(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,s,r){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,i,n,s,r),this}absarc(e,t,i,n,s,r){return this.absellipse(e,t,i,i,n,s,r),this}ellipse(e,t,i,n,s,r,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,i,n,s,r,a,l),this}absellipse(e,t,i,n,s,r,a,l){const c=new Bf(e,t,i,n,s,r,a,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class oh extends ct{constructor(e=[new Z(0,-.5),new Z(.5,0),new Z(0,.5)],t=12,i=0,n=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=Yt(n,0,Math.PI*2);const s=[],r=[],a=[],l=[],c=[],h=1/t,u=new R,d=new Z,f=new R,p=new R,m=new R;let g=0,y=0;for(let x=0;x<=e.length-1;x++)switch(x){case 0:g=e[x+1].x-e[x].x,y=e[x+1].y-e[x].y,f.x=y*1,f.y=-g,f.z=y*0,m.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case e.length-1:l.push(m.x,m.y,m.z);break;default:g=e[x+1].x-e[x].x,y=e[x+1].y-e[x].y,f.x=y*1,f.y=-g,f.z=y*0,p.copy(f),f.x+=m.x,f.y+=m.y,f.z+=m.z,f.normalize(),l.push(f.x,f.y,f.z),m.copy(p)}for(let x=0;x<=t;x++){const _=i+x*h*n,v=Math.sin(_),A=Math.cos(_);for(let T=0;T<=e.length-1;T++){u.x=e[T].x*v,u.y=e[T].y,u.z=e[T].x*A,r.push(u.x,u.y,u.z),d.x=x/t,d.y=T/(e.length-1),a.push(d.x,d.y);const M=l[3*T+0]*v,w=l[3*T+1],S=l[3*T+0]*A;c.push(M,w,S)}}for(let x=0;x<t;x++)for(let _=0;_<e.length-1;_++){const v=_+x*e.length,A=v,T=v+e.length,M=v+e.length+1,w=v+1;s.push(A,T,w),s.push(M,w,T)}this.setIndex(s),this.setAttribute("position",new Ne(r,3)),this.setAttribute("uv",new Ne(a,2)),this.setAttribute("normal",new Ne(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new oh(e.points,e.segments,e.phiStart,e.phiLength)}}class Of extends oh{constructor(e=1,t=1,i=4,n=8){const s=new Pc;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:i,radialSegments:n}}static fromJSON(e){return new Of(e.radius,e.length,e.capSegments,e.radialSegments)}}class zf extends ct{constructor(e=1,t=32,i=0,n=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);const s=[],r=[],a=[],l=[],c=new R,h=new Z;r.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){const f=i+u/t*n;c.x=e*Math.cos(f),c.y=e*Math.sin(f),r.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(r[d]/e+1)/2,h.y=(r[d+1]/e+1)/2,l.push(h.x,h.y)}for(let u=1;u<=t;u++)s.push(u,u+1,0);this.setIndex(s),this.setAttribute("position",new Ne(r,3)),this.setAttribute("normal",new Ne(a,3)),this.setAttribute("uv",new Ne(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zf(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class _l extends ct{constructor(e=1,t=1,i=1,n=32,s=1,r=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:s,openEnded:r,thetaStart:a,thetaLength:l};const c=this;n=Math.floor(n),s=Math.floor(s);const h=[],u=[],d=[],f=[];let p=0;const m=[],g=i/2;let y=0;x(),r===!1&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(h),this.setAttribute("position",new Ne(u,3)),this.setAttribute("normal",new Ne(d,3)),this.setAttribute("uv",new Ne(f,2));function x(){const v=new R,A=new R;let T=0;const M=(t-e)/i;for(let w=0;w<=s;w++){const S=[],b=w/s,N=b*(t-e)+e;for(let z=0;z<=n;z++){const L=z/n,k=L*l+a,q=Math.sin(k),H=Math.cos(k);A.x=N*q,A.y=-b*i+g,A.z=N*H,u.push(A.x,A.y,A.z),v.set(q,M,H).normalize(),d.push(v.x,v.y,v.z),f.push(L,1-b),S.push(p++)}m.push(S)}for(let w=0;w<n;w++)for(let S=0;S<s;S++){const b=m[S][w],N=m[S+1][w],z=m[S+1][w+1],L=m[S][w+1];(e>0||S!==0)&&(h.push(b,N,L),T+=3),(t>0||S!==s-1)&&(h.push(N,z,L),T+=3)}c.addGroup(y,T,0),y+=T}function _(v){const A=p,T=new Z,M=new R;let w=0;const S=v===!0?e:t,b=v===!0?1:-1;for(let z=1;z<=n;z++)u.push(0,g*b,0),d.push(0,b,0),f.push(.5,.5),p++;const N=p;for(let z=0;z<=n;z++){const k=z/n*l+a,q=Math.cos(k),H=Math.sin(k);M.x=S*H,M.y=g*b,M.z=S*q,u.push(M.x,M.y,M.z),d.push(0,b,0),T.x=q*.5+.5,T.y=H*.5*b+.5,f.push(T.x,T.y),p++}for(let z=0;z<n;z++){const L=A+z,k=N+z;v===!0?h.push(k,k+1,L):h.push(k+1,k,L),w+=3}c.addGroup(y,w,v===!0?1:2),y+=w}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new _l(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class kf extends _l{constructor(e=1,t=1,i=32,n=1,s=!1,r=0,a=Math.PI*2){super(0,e,t,i,n,s,r,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:s,thetaStart:r,thetaLength:a}}static fromJSON(e){return new kf(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Hr extends ct{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};const s=[],r=[];a(n),c(i),h(),this.setAttribute("position",new Ne(s,3)),this.setAttribute("normal",new Ne(s.slice(),3)),this.setAttribute("uv",new Ne(r,2)),n===0?this.computeVertexNormals():this.normalizeNormals();function a(x){const _=new R,v=new R,A=new R;for(let T=0;T<t.length;T+=3)f(t[T+0],_),f(t[T+1],v),f(t[T+2],A),l(_,v,A,x)}function l(x,_,v,A){const T=A+1,M=[];for(let w=0;w<=T;w++){M[w]=[];const S=x.clone().lerp(v,w/T),b=_.clone().lerp(v,w/T),N=T-w;for(let z=0;z<=N;z++)z===0&&w===T?M[w][z]=S:M[w][z]=S.clone().lerp(b,z/N)}for(let w=0;w<T;w++)for(let S=0;S<2*(T-w)-1;S++){const b=Math.floor(S/2);S%2===0?(d(M[w][b+1]),d(M[w+1][b]),d(M[w][b])):(d(M[w][b+1]),d(M[w+1][b+1]),d(M[w+1][b]))}}function c(x){const _=new R;for(let v=0;v<s.length;v+=3)_.x=s[v+0],_.y=s[v+1],_.z=s[v+2],_.normalize().multiplyScalar(x),s[v+0]=_.x,s[v+1]=_.y,s[v+2]=_.z}function h(){const x=new R;for(let _=0;_<s.length;_+=3){x.x=s[_+0],x.y=s[_+1],x.z=s[_+2];const v=g(x)/2/Math.PI+.5,A=y(x)/Math.PI+.5;r.push(v,1-A)}p(),u()}function u(){for(let x=0;x<r.length;x+=6){const _=r[x+0],v=r[x+2],A=r[x+4],T=Math.max(_,v,A),M=Math.min(_,v,A);T>.9&&M<.1&&(_<.2&&(r[x+0]+=1),v<.2&&(r[x+2]+=1),A<.2&&(r[x+4]+=1))}}function d(x){s.push(x.x,x.y,x.z)}function f(x,_){const v=x*3;_.x=e[v+0],_.y=e[v+1],_.z=e[v+2]}function p(){const x=new R,_=new R,v=new R,A=new R,T=new Z,M=new Z,w=new Z;for(let S=0,b=0;S<s.length;S+=9,b+=6){x.set(s[S+0],s[S+1],s[S+2]),_.set(s[S+3],s[S+4],s[S+5]),v.set(s[S+6],s[S+7],s[S+8]),T.set(r[b+0],r[b+1]),M.set(r[b+2],r[b+3]),w.set(r[b+4],r[b+5]),A.copy(x).add(_).add(v).divideScalar(3);const N=g(A);m(T,b+0,x,N),m(M,b+2,_,N),m(w,b+4,v,N)}}function m(x,_,v,A){A<0&&x.x===1&&(r[_]=x.x-1),v.x===0&&v.z===0&&(r[_]=A/2/Math.PI+.5)}function g(x){return Math.atan2(x.z,-x.x)}function y(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Hr(e.vertices,e.indices,e.radius,e.details)}}class Gf extends Hr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],r=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,r,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Gf(e.radius,e.detail)}}const iu=new R,nu=new R,Qp=new R,su=new Er;class wM extends ct{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const n=Math.pow(10,4),s=Math.cos(No*t),r=e.getIndex(),a=e.getAttribute("position"),l=r?r.count:a.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},f=[];for(let p=0;p<l;p+=3){r?(c[0]=r.getX(p),c[1]=r.getX(p+1),c[2]=r.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:m,b:g,c:y}=su;if(m.fromBufferAttribute(a,c[0]),g.fromBufferAttribute(a,c[1]),y.fromBufferAttribute(a,c[2]),su.getNormal(Qp),u[0]=`${Math.round(m.x*n)},${Math.round(m.y*n)},${Math.round(m.z*n)}`,u[1]=`${Math.round(g.x*n)},${Math.round(g.y*n)},${Math.round(g.z*n)}`,u[2]=`${Math.round(y.x*n)},${Math.round(y.y*n)},${Math.round(y.z*n)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let x=0;x<3;x++){const _=(x+1)%3,v=u[x],A=u[_],T=su[h[x]],M=su[h[_]],w=`${v}_${A}`,S=`${A}_${v}`;S in d&&d[S]?(Qp.dot(d[S].normal)<=s&&(f.push(T.x,T.y,T.z),f.push(M.x,M.y,M.z)),d[S]=null):w in d||(d[w]={index0:c[x],index1:c[_],normal:Qp.clone()})}}for(const p in d)if(d[p]){const{index0:m,index1:g}=d[p];iu.fromBufferAttribute(a,m),nu.fromBufferAttribute(a,g),f.push(iu.x,iu.y,iu.z),f.push(nu.x,nu.y,nu.z)}this.setAttribute("position",new Ne(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Po extends Pc{constructor(e){super(e),this.uuid=Tn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(new Pc().fromJSON(n))}return this}}const vI={triangulate:function(o,e,t=2){const i=e&&e.length,n=i?e[0]*t:o.length;let s=AM(o,0,n,t,!0);const r=[];if(!s||s.next===s.prev)return r;let a,l,c,h,u,d,f;if(i&&(s=wI(o,e,s,t)),o.length>80*t){a=c=o[0],l=h=o[1];for(let p=t;p<n;p+=t)u=o[p],d=o[p+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return Ic(s,r,t,a,l,f,0),r}};function AM(o,e,t,i,n){let s,r;if(n===UI(o,e,t,i)>0)for(s=e;s<t;s+=i)r=y0(s,o[s],o[s+1],r);else for(s=t-i;s>=e;s-=i)r=y0(s,o[s],o[s+1],r);return r&&Vf(r,r.next)&&(Lc(r),r=r.next),r}function Oo(o,e){if(!o)return o;e||(e=o);let t=o,i;do if(i=!1,!t.steiner&&(Vf(t,t.next)||$t(t.prev,t,t.next)===0)){if(Lc(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Ic(o,e,t,i,n,s,r){if(!o)return;!r&&s&&NI(o,i,n,s);let a=o,l,c;for(;o.prev!==o.next;){if(l=o.prev,c=o.next,s?SI(o,i,n,s):bI(o)){e.push(l.i/t|0),e.push(o.i/t|0),e.push(c.i/t|0),Lc(o),o=c.next,a=c.next;continue}if(o=c,o===a){r?r===1?(o=MI(Oo(o),e,t),Ic(o,e,t,i,n,s,2)):r===2&&TI(o,e,t,i,n,s):Ic(Oo(o),e,t,i,n,s,1);break}}}function bI(o){const e=o.prev,t=o,i=o.next;if($t(e,t,i)>=0)return!1;const n=e.x,s=t.x,r=i.x,a=e.y,l=t.y,c=i.y,h=n<s?n<r?n:r:s<r?s:r,u=a<l?a<c?a:c:l<c?l:c,d=n>s?n>r?n:r:s>r?s:r,f=a>l?a>c?a:c:l>c?l:c;let p=i.next;for(;p!==e;){if(p.x>=h&&p.x<=d&&p.y>=u&&p.y<=f&&Wa(n,a,s,l,r,c,p.x,p.y)&&$t(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function SI(o,e,t,i){const n=o.prev,s=o,r=o.next;if($t(n,s,r)>=0)return!1;const a=n.x,l=s.x,c=r.x,h=n.y,u=s.y,d=r.y,f=a<l?a<c?a:c:l<c?l:c,p=h<u?h<d?h:d:u<d?u:d,m=a>l?a>c?a:c:l>c?l:c,g=h>u?h>d?h:d:u>d?u:d,y=Eg(f,p,e,t,i),x=Eg(m,g,e,t,i);let _=o.prevZ,v=o.nextZ;for(;_&&_.z>=y&&v&&v.z<=x;){if(_.x>=f&&_.x<=m&&_.y>=p&&_.y<=g&&_!==n&&_!==r&&Wa(a,h,l,u,c,d,_.x,_.y)&&$t(_.prev,_,_.next)>=0||(_=_.prevZ,v.x>=f&&v.x<=m&&v.y>=p&&v.y<=g&&v!==n&&v!==r&&Wa(a,h,l,u,c,d,v.x,v.y)&&$t(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;_&&_.z>=y;){if(_.x>=f&&_.x<=m&&_.y>=p&&_.y<=g&&_!==n&&_!==r&&Wa(a,h,l,u,c,d,_.x,_.y)&&$t(_.prev,_,_.next)>=0)return!1;_=_.prevZ}for(;v&&v.z<=x;){if(v.x>=f&&v.x<=m&&v.y>=p&&v.y<=g&&v!==n&&v!==r&&Wa(a,h,l,u,c,d,v.x,v.y)&&$t(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function MI(o,e,t){let i=o;do{const n=i.prev,s=i.next.next;!Vf(n,s)&&EM(n,i,i.next,s)&&Dc(n,s)&&Dc(s,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(s.i/t|0),Lc(i),Lc(i.next),i=o=s),i=i.next}while(i!==o);return Oo(i)}function TI(o,e,t,i,n,s){let r=o;do{let a=r.next.next;for(;a!==r.prev;){if(r.i!==a.i&&DI(r,a)){let l=CM(r,a);r=Oo(r,r.next),l=Oo(l,l.next),Ic(r,e,t,i,n,s,0),Ic(l,e,t,i,n,s,0);return}a=a.next}r=r.next}while(r!==o)}function wI(o,e,t,i){const n=[];let s,r,a,l,c;for(s=0,r=e.length;s<r;s++)a=e[s]*i,l=s<r-1?e[s+1]*i:o.length,c=AM(o,a,l,i,!1),c===c.next&&(c.steiner=!0),n.push(II(c));for(n.sort(AI),s=0;s<n.length;s++)t=EI(n[s],t);return t}function AI(o,e){return o.x-e.x}function EI(o,e){const t=CI(o,e);if(!t)return e;const i=CM(t,o);return Oo(i,i.next),Oo(t,t.next)}function CI(o,e){let t=e,i=-1/0,n;const s=o.x,r=o.y;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const d=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=s&&d>i&&(i=d,n=t.x<t.next.x?t:t.next,d===s))return n}t=t.next}while(t!==e);if(!n)return null;const a=n,l=n.x,c=n.y;let h=1/0,u;t=n;do s>=t.x&&t.x>=l&&s!==t.x&&Wa(r<c?s:i,r,l,c,r<c?i:s,r,t.x,t.y)&&(u=Math.abs(r-t.y)/(s-t.x),Dc(t,o)&&(u<h||u===h&&(t.x>n.x||t.x===n.x&&RI(n,t)))&&(n=t,h=u)),t=t.next;while(t!==a);return n}function RI(o,e){return $t(o.prev,o,e.prev)<0&&$t(e.next,o,o.next)<0}function NI(o,e,t,i){let n=o;do n.z===0&&(n.z=Eg(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==o);n.prevZ.nextZ=null,n.prevZ=null,PI(n)}function PI(o){let e,t,i,n,s,r,a,l,c=1;do{for(t=o,o=null,s=null,r=0;t;){for(r++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(n=t,t=t.nextZ,a--):(n=i,i=i.nextZ,l--),s?s.nextZ=n:o=n,n.prevZ=s,s=n;t=i}s.nextZ=null,c*=2}while(r>1);return o}function Eg(o,e,t,i,n){return o=(o-t)*n|0,e=(e-i)*n|0,o=(o|o<<8)&16711935,o=(o|o<<4)&252645135,o=(o|o<<2)&858993459,o=(o|o<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,o|e<<1}function II(o){let e=o,t=o;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==o);return t}function Wa(o,e,t,i,n,s,r,a){return(n-r)*(e-a)>=(o-r)*(s-a)&&(o-r)*(i-a)>=(t-r)*(e-a)&&(t-r)*(s-a)>=(n-r)*(i-a)}function DI(o,e){return o.next.i!==e.i&&o.prev.i!==e.i&&!LI(o,e)&&(Dc(o,e)&&Dc(e,o)&&FI(o,e)&&($t(o.prev,o,e.prev)||$t(o,e.prev,e))||Vf(o,e)&&$t(o.prev,o,o.next)>0&&$t(e.prev,e,e.next)>0)}function $t(o,e,t){return(e.y-o.y)*(t.x-e.x)-(e.x-o.x)*(t.y-e.y)}function Vf(o,e){return o.x===e.x&&o.y===e.y}function EM(o,e,t,i){const n=ou($t(o,e,t)),s=ou($t(o,e,i)),r=ou($t(t,i,o)),a=ou($t(t,i,e));return!!(n!==s&&r!==a||n===0&&ru(o,t,e)||s===0&&ru(o,i,e)||r===0&&ru(t,o,i)||a===0&&ru(t,e,i))}function ru(o,e,t){return e.x<=Math.max(o.x,t.x)&&e.x>=Math.min(o.x,t.x)&&e.y<=Math.max(o.y,t.y)&&e.y>=Math.min(o.y,t.y)}function ou(o){return o>0?1:o<0?-1:0}function LI(o,e){let t=o;do{if(t.i!==o.i&&t.next.i!==o.i&&t.i!==e.i&&t.next.i!==e.i&&EM(t,t.next,o,e))return!0;t=t.next}while(t!==o);return!1}function Dc(o,e){return $t(o.prev,o,o.next)<0?$t(o,e,o.next)>=0&&$t(o,o.prev,e)>=0:$t(o,e,o.prev)<0||$t(o,o.next,e)<0}function FI(o,e){let t=o,i=!1;const n=(o.x+e.x)/2,s=(o.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&n<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==o);return i}function CM(o,e){const t=new Cg(o.i,o.x,o.y),i=new Cg(e.i,e.x,e.y),n=o.next,s=e.prev;return o.next=e,e.prev=o,t.next=n,n.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function y0(o,e,t,i){const n=new Cg(o,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Lc(o){o.next.prev=o.prev,o.prev.next=o.next,o.prevZ&&(o.prevZ.nextZ=o.nextZ),o.nextZ&&(o.nextZ.prevZ=o.prevZ)}function Cg(o,e,t){this.i=o,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function UI(o,e,t,i){let n=0;for(let s=e,r=t-i;s<t;s+=i)n+=(o[r]-o[s])*(o[s+1]+o[r+1]),r=s;return n}class ds{static area(e){const t=e.length;let i=0;for(let n=t-1,s=0;s<t;n=s++)i+=e[n].x*e[s].y-e[s].x*e[n].y;return i*.5}static isClockWise(e){return ds.area(e)<0}static triangulateShape(e,t){const i=[],n=[],s=[];x0(e),_0(i,e);let r=e.length;t.forEach(x0);for(let l=0;l<t.length;l++)n.push(r),r+=t[l].length,_0(i,t[l]);const a=vI.triangulate(i,n);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function x0(o){const e=o.length;e>2&&o[e-1].equals(o[0])&&o.pop()}function _0(o,e){for(let t=0;t<e.length;t++)o.push(e[t].x),o.push(e[t].y)}class ah extends ct{constructor(e=new Po([new Z(.5,.5),new Z(-.5,.5),new Z(-.5,-.5),new Z(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];r(c)}this.setAttribute("position",new Ne(n,3)),this.setAttribute("uv",new Ne(s,2)),this.computeVertexNormals();function r(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:f-.1,m=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const y=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:BI;let _,v=!1,A,T,M,w;y&&(_=y.getSpacedPoints(h),v=!0,d=!1,A=y.computeFrenetFrames(h,!1),T=new R,M=new R,w=new R),d||(g=0,f=0,p=0,m=0);const S=a.extractPoints(c);let b=S.shape;const N=S.holes;if(!ds.isClockWise(b)){b=b.reverse();for(let re=0,pe=N.length;re<pe;re++){const I=N[re];ds.isClockWise(I)&&(N[re]=I.reverse())}}const L=ds.triangulateShape(b,N),k=b;for(let re=0,pe=N.length;re<pe;re++){const I=N[re];b=b.concat(I)}function q(re,pe,I){return pe||console.error("THREE.ExtrudeGeometry: vec does not exist"),re.clone().addScaledVector(pe,I)}const H=b.length,ae=L.length;function X(re,pe,I){let Ge,he,De;const ve=re.x-pe.x,Xe=re.y-pe.y,Pe=I.x-re.x,P=I.y-re.y,E=ve*ve+Xe*Xe,V=ve*P-Xe*Pe;if(Math.abs(V)>Number.EPSILON){const te=Math.sqrt(E),oe=Math.sqrt(Pe*Pe+P*P),ie=pe.x-Xe/te,Ue=pe.y+ve/te,Me=I.x-P/oe,Ie=I.y+Pe/oe,pt=((Me-ie)*P-(Ie-Ue)*Pe)/(ve*P-Xe*Pe);Ge=ie+ve*pt-re.x,he=Ue+Xe*pt-re.y;const de=Ge*Ge+he*he;if(de<=2)return new Z(Ge,he);De=Math.sqrt(de/2)}else{let te=!1;ve>Number.EPSILON?Pe>Number.EPSILON&&(te=!0):ve<-Number.EPSILON?Pe<-Number.EPSILON&&(te=!0):Math.sign(Xe)===Math.sign(P)&&(te=!0),te?(Ge=-Xe,he=ve,De=Math.sqrt(E)):(Ge=ve,he=Xe,De=Math.sqrt(E/2))}return new Z(Ge/De,he/De)}const le=[];for(let re=0,pe=k.length,I=pe-1,Ge=re+1;re<pe;re++,I++,Ge++)I===pe&&(I=0),Ge===pe&&(Ge=0),le[re]=X(k[re],k[I],k[Ge]);const ue=[];let xe,$e=le.concat();for(let re=0,pe=N.length;re<pe;re++){const I=N[re];xe=[];for(let Ge=0,he=I.length,De=he-1,ve=Ge+1;Ge<he;Ge++,De++,ve++)De===he&&(De=0),ve===he&&(ve=0),xe[Ge]=X(I[Ge],I[De],I[ve]);ue.push(xe),$e=$e.concat(xe)}for(let re=0;re<g;re++){const pe=re/g,I=f*Math.cos(pe*Math.PI/2),Ge=p*Math.sin(pe*Math.PI/2)+m;for(let he=0,De=k.length;he<De;he++){const ve=q(k[he],le[he],Ge);ye(ve.x,ve.y,-I)}for(let he=0,De=N.length;he<De;he++){const ve=N[he];xe=ue[he];for(let Xe=0,Pe=ve.length;Xe<Pe;Xe++){const P=q(ve[Xe],xe[Xe],Ge);ye(P.x,P.y,-I)}}}const tt=p+m;for(let re=0;re<H;re++){const pe=d?q(b[re],$e[re],tt):b[re];v?(M.copy(A.normals[0]).multiplyScalar(pe.x),T.copy(A.binormals[0]).multiplyScalar(pe.y),w.copy(_[0]).add(M).add(T),ye(w.x,w.y,w.z)):ye(pe.x,pe.y,0)}for(let re=1;re<=h;re++)for(let pe=0;pe<H;pe++){const I=d?q(b[pe],$e[pe],tt):b[pe];v?(M.copy(A.normals[re]).multiplyScalar(I.x),T.copy(A.binormals[re]).multiplyScalar(I.y),w.copy(_[re]).add(M).add(T),ye(w.x,w.y,w.z)):ye(I.x,I.y,u/h*re)}for(let re=g-1;re>=0;re--){const pe=re/g,I=f*Math.cos(pe*Math.PI/2),Ge=p*Math.sin(pe*Math.PI/2)+m;for(let he=0,De=k.length;he<De;he++){const ve=q(k[he],le[he],Ge);ye(ve.x,ve.y,u+I)}for(let he=0,De=N.length;he<De;he++){const ve=N[he];xe=ue[he];for(let Xe=0,Pe=ve.length;Xe<Pe;Xe++){const P=q(ve[Xe],xe[Xe],Ge);v?ye(P.x,P.y+_[h-1].y,_[h-1].x+I):ye(P.x,P.y,u+I)}}}J(),ce();function J(){const re=n.length/3;if(d){let pe=0,I=H*pe;for(let Ge=0;Ge<ae;Ge++){const he=L[Ge];ke(he[2]+I,he[1]+I,he[0]+I)}pe=h+g*2,I=H*pe;for(let Ge=0;Ge<ae;Ge++){const he=L[Ge];ke(he[0]+I,he[1]+I,he[2]+I)}}else{for(let pe=0;pe<ae;pe++){const I=L[pe];ke(I[2],I[1],I[0])}for(let pe=0;pe<ae;pe++){const I=L[pe];ke(I[0]+H*h,I[1]+H*h,I[2]+H*h)}}i.addGroup(re,n.length/3-re,0)}function ce(){const re=n.length/3;let pe=0;we(k,pe),pe+=k.length;for(let I=0,Ge=N.length;I<Ge;I++){const he=N[I];we(he,pe),pe+=he.length}i.addGroup(re,n.length/3-re,1)}function we(re,pe){let I=re.length;for(;--I>=0;){const Ge=I;let he=I-1;he<0&&(he=re.length-1);for(let De=0,ve=h+g*2;De<ve;De++){const Xe=H*De,Pe=H*(De+1),P=pe+Ge+Xe,E=pe+he+Xe,V=pe+he+Pe,te=pe+Ge+Pe;Ze(P,E,V,te)}}}function ye(re,pe,I){l.push(re),l.push(pe),l.push(I)}function ke(re,pe,I){He(re),He(pe),He(I);const Ge=n.length/3,he=x.generateTopUV(i,n,Ge-3,Ge-2,Ge-1);ft(he[0]),ft(he[1]),ft(he[2])}function Ze(re,pe,I,Ge){He(re),He(pe),He(Ge),He(pe),He(I),He(Ge);const he=n.length/3,De=x.generateSideWallUV(i,n,he-6,he-3,he-2,he-1);ft(De[0]),ft(De[1]),ft(De[3]),ft(De[1]),ft(De[2]),ft(De[3])}function He(re){n.push(l[re*3+0]),n.push(l[re*3+1]),n.push(l[re*3+2])}function ft(re){s.push(re.x),s.push(re.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return OI(t,i,e)}static fromJSON(e,t){const i=[];for(let s=0,r=e.shapes.length;s<r;s++){const a=t[e.shapes[s]];i.push(a)}const n=e.options.extrudePath;return n!==void 0&&(e.options.extrudePath=new jd[n.type]().fromJSON(n)),new ah(i,e.options)}}const BI={generateTopUV:function(o,e,t,i,n){const s=e[t*3],r=e[t*3+1],a=e[i*3],l=e[i*3+1],c=e[n*3],h=e[n*3+1];return[new Z(s,r),new Z(a,l),new Z(c,h)]},generateSideWallUV:function(o,e,t,i,n,s){const r=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[i*3],h=e[i*3+1],u=e[i*3+2],d=e[n*3],f=e[n*3+1],p=e[n*3+2],m=e[s*3],g=e[s*3+1],y=e[s*3+2];return Math.abs(a-h)<Math.abs(r-c)?[new Z(r,1-l),new Z(c,1-u),new Z(d,1-p),new Z(m,1-y)]:[new Z(a,1-l),new Z(h,1-u),new Z(f,1-p),new Z(g,1-y)]}};function OI(o,e,t){if(t.shapes=[],Array.isArray(o))for(let i=0,n=o.length;i<n;i++){const s=o[i];t.shapes.push(s.uuid)}else t.shapes.push(o.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Hf extends Hr{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(n,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Hf(e.radius,e.detail)}}class lh extends Hr{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,n,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new lh(e.radius,e.detail)}}class Wf extends ct{constructor(e=.5,t=1,i=32,n=1,s=0,r=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:s,thetaLength:r},i=Math.max(3,i),n=Math.max(1,n);const a=[],l=[],c=[],h=[];let u=e;const d=(t-e)/n,f=new R,p=new Z;for(let m=0;m<=n;m++){for(let g=0;g<=i;g++){const y=s+g/i*r;f.x=u*Math.cos(y),f.y=u*Math.sin(y),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/t+1)/2,p.y=(f.y/t+1)/2,h.push(p.x,p.y)}u+=d}for(let m=0;m<n;m++){const g=m*(i+1);for(let y=0;y<i;y++){const x=y+g,_=x,v=x+i+1,A=x+i+2,T=x+1;a.push(_,v,T),a.push(v,A,T)}}this.setIndex(a),this.setAttribute("position",new Ne(l,3)),this.setAttribute("normal",new Ne(c,3)),this.setAttribute("uv",new Ne(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Wf(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class $f extends ct{constructor(e=new Po([new Z(0,.5),new Z(-.5,-.5),new Z(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],n=[],s=[],r=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new Ne(n,3)),this.setAttribute("normal",new Ne(s,3)),this.setAttribute("uv",new Ne(r,2));function c(h){const u=n.length/3,d=h.extractPoints(t);let f=d.shape;const p=d.holes;ds.isClockWise(f)===!1&&(f=f.reverse());for(let g=0,y=p.length;g<y;g++){const x=p[g];ds.isClockWise(x)===!0&&(p[g]=x.reverse())}const m=ds.triangulateShape(f,p);for(let g=0,y=p.length;g<y;g++){const x=p[g];f=f.concat(x)}for(let g=0,y=f.length;g<y;g++){const x=f[g];n.push(x.x,x.y,0),s.push(0,0,1),r.push(x.x,x.y)}for(let g=0,y=m.length;g<y;g++){const x=m[g],_=x[0]+u,v=x[1]+u,A=x[2]+u;i.push(_,v,A),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return zI(t,e)}static fromJSON(e,t){const i=[];for(let n=0,s=e.shapes.length;n<s;n++){const r=t[e.shapes[n]];i.push(r)}return new $f(i,e.curveSegments)}}function zI(o,e){if(e.shapes=[],Array.isArray(o))for(let t=0,i=o.length;t<i;t++){const n=o[t];e.shapes.push(n.uuid)}else e.shapes.push(o.uuid);return e}let Yy=class RM extends ct{constructor(e=1,t=32,i=16,n=0,s=Math.PI*2,r=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:s,thetaStart:r,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(r+a,Math.PI);let c=0;const h=[],u=new R,d=new R,f=[],p=[],m=[],g=[];for(let y=0;y<=i;y++){const x=[],_=y/i;let v=0;y===0&&r===0?v=.5/t:y===i&&l===Math.PI&&(v=-.5/t);for(let A=0;A<=t;A++){const T=A/t;u.x=-e*Math.cos(n+T*s)*Math.sin(r+_*a),u.y=e*Math.cos(r+_*a),u.z=e*Math.sin(n+T*s)*Math.sin(r+_*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),m.push(d.x,d.y,d.z),g.push(T+v,1-_),x.push(c++)}h.push(x)}for(let y=0;y<i;y++)for(let x=0;x<t;x++){const _=h[y][x+1],v=h[y][x],A=h[y+1][x],T=h[y+1][x+1];(y!==0||r>0)&&f.push(_,v,T),(y!==i-1||l<Math.PI)&&f.push(v,A,T)}this.setIndex(f),this.setAttribute("position",new Ne(p,3)),this.setAttribute("normal",new Ne(m,3)),this.setAttribute("uv",new Ne(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new RM(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}};class Xf extends Hr{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],n=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,n,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Xf(e.radius,e.detail)}}class qf extends ct{constructor(e=1,t=.4,i=12,n=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:s},i=Math.floor(i),n=Math.floor(n);const r=[],a=[],l=[],c=[],h=new R,u=new R,d=new R;for(let f=0;f<=i;f++)for(let p=0;p<=n;p++){const m=p/n*s,g=f/i*Math.PI*2;u.x=(e+t*Math.cos(g))*Math.cos(m),u.y=(e+t*Math.cos(g))*Math.sin(m),u.z=t*Math.sin(g),a.push(u.x,u.y,u.z),h.x=e*Math.cos(m),h.y=e*Math.sin(m),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(p/n),c.push(f/i)}for(let f=1;f<=i;f++)for(let p=1;p<=n;p++){const m=(n+1)*f+p-1,g=(n+1)*(f-1)+p-1,y=(n+1)*(f-1)+p,x=(n+1)*f+p;r.push(m,g,x),r.push(g,y,x)}this.setIndex(r),this.setAttribute("position",new Ne(a,3)),this.setAttribute("normal",new Ne(l,3)),this.setAttribute("uv",new Ne(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qf(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Yf extends ct{constructor(e=1,t=.4,i=64,n=8,s=2,r=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:s,q:r},i=Math.floor(i),n=Math.floor(n);const a=[],l=[],c=[],h=[],u=new R,d=new R,f=new R,p=new R,m=new R,g=new R,y=new R;for(let _=0;_<=i;++_){const v=_/i*s*Math.PI*2;x(v,s,r,e,f),x(v+.01,s,r,e,p),g.subVectors(p,f),y.addVectors(p,f),m.crossVectors(g,y),y.crossVectors(m,g),m.normalize(),y.normalize();for(let A=0;A<=n;++A){const T=A/n*Math.PI*2,M=-t*Math.cos(T),w=t*Math.sin(T);u.x=f.x+(M*y.x+w*m.x),u.y=f.y+(M*y.y+w*m.y),u.z=f.z+(M*y.z+w*m.z),l.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),c.push(d.x,d.y,d.z),h.push(_/i),h.push(A/n)}}for(let _=1;_<=i;_++)for(let v=1;v<=n;v++){const A=(n+1)*(_-1)+(v-1),T=(n+1)*_+(v-1),M=(n+1)*_+v,w=(n+1)*(_-1)+v;a.push(A,T,w),a.push(T,M,w)}this.setIndex(a),this.setAttribute("position",new Ne(l,3)),this.setAttribute("normal",new Ne(c,3)),this.setAttribute("uv",new Ne(h,2));function x(_,v,A,T,M){const w=Math.cos(_),S=Math.sin(_),b=A/v*_,N=Math.cos(b);M.x=T*(2+N)*.5*w,M.y=T*(2+N)*S*.5,M.z=T*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Yf(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Zf extends ct{constructor(e=new Xy(new R(-1,-1,0),new R(-1,1,0),new R(1,1,0)),t=64,i=1,n=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:s};const r=e.computeFrenetFrames(t,s);this.tangents=r.tangents,this.normals=r.normals,this.binormals=r.binormals;const a=new R,l=new R,c=new Z;let h=new R;const u=[],d=[],f=[],p=[];m(),this.setIndex(p),this.setAttribute("position",new Ne(u,3)),this.setAttribute("normal",new Ne(d,3)),this.setAttribute("uv",new Ne(f,2));function m(){for(let _=0;_<t;_++)g(_);g(s===!1?t:0),x(),y()}function g(_){h=e.getPointAt(_/t,h);const v=r.normals[_],A=r.binormals[_];for(let T=0;T<=n;T++){const M=T/n*Math.PI*2,w=Math.sin(M),S=-Math.cos(M);l.x=S*v.x+w*A.x,l.y=S*v.y+w*A.y,l.z=S*v.z+w*A.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=h.x+i*l.x,a.y=h.y+i*l.y,a.z=h.z+i*l.z,u.push(a.x,a.y,a.z)}}function y(){for(let _=1;_<=t;_++)for(let v=1;v<=n;v++){const A=(n+1)*(_-1)+(v-1),T=(n+1)*_+(v-1),M=(n+1)*_+v,w=(n+1)*(_-1)+v;p.push(A,T,w),p.push(T,M,w)}}function x(){for(let _=0;_<=t;_++)for(let v=0;v<=n;v++)c.x=_/t,c.y=v/n,f.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Zf(new jd[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Zy extends ct{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,n=new R,s=new R;if(e.index!==null){const r=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],d=u.start,f=u.count;for(let p=d,m=d+f;p<m;p+=3)for(let g=0;g<3;g++){const y=a.getX(p+g),x=a.getX(p+(g+1)%3);n.fromBufferAttribute(r,y),s.fromBufferAttribute(r,x),v0(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}}else{const r=e.attributes.position;for(let a=0,l=r.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,u=3*a+(c+1)%3;n.fromBufferAttribute(r,h),s.fromBufferAttribute(r,u),v0(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Ne(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function v0(o,e,t){const i=`${o.x},${o.y},${o.z}-${e.x},${e.y},${e.z}`,n=`${e.x},${e.y},${e.z}-${o.x},${o.y},${o.z}`;return t.has(i)===!0||t.has(n)===!0?!1:(t.add(i),t.add(n),!0)}var b0=Object.freeze({__proto__:null,BoxGeometry:eh,CapsuleGeometry:Of,CircleGeometry:zf,ConeGeometry:kf,CylinderGeometry:_l,DodecahedronGeometry:Gf,EdgesGeometry:wM,ExtrudeGeometry:ah,IcosahedronGeometry:Hf,LatheGeometry:oh,OctahedronGeometry:lh,PlaneGeometry:yl,PolyhedronGeometry:Hr,RingGeometry:Wf,ShapeGeometry:$f,SphereGeometry:Yy,TetrahedronGeometry:Xf,TorusGeometry:qf,TorusKnotGeometry:Yf,TubeGeometry:Zf,WireframeGeometry:Zy});let NM=class extends zi{static get type(){return"ShadowMaterial"}constructor(e){super(),this.isShadowMaterial=!0,this.color=new Ce(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}};class PM extends cn{static get type(){return"RawShaderMaterial"}constructor(e){super(e),this.isRawShaderMaterial=!0}}let Ky=class extends zi{static get type(){return"MeshStandardMaterial"}constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.color=new Ce(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Yn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},IM=class extends Ky{static get type(){return"MeshPhysicalMaterial"}constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Z(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Yt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ce(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ce(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ce(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}},DM=class extends zi{static get type(){return"MeshPhongMaterial"}constructor(e){super(),this.isMeshPhongMaterial=!0,this.color=new Ce(16777215),this.specular=new Ce(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Yn,this.combine=jc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},LM=class extends zi{static get type(){return"MeshToonMaterial"}constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.color=new Ce(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}},FM=class extends zi{static get type(){return"MeshNormalMaterial"}constructor(e){super(),this.isMeshNormalMaterial=!0,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}},UM=class extends zi{static get type(){return"MeshLambertMaterial"}constructor(e){super(),this.isMeshLambertMaterial=!0,this.color=new Ce(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Yn,this.combine=jc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},BM=class extends zi{static get type(){return"MeshMatcapMaterial"}constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.color=new Ce(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}},OM=class extends Ji{static get type(){return"LineDashedMaterial"}constructor(e){super(),this.isLineDashedMaterial=!0,this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}};function Eo(o,e,t){return!o||!t&&o.constructor===e?o:typeof e.BYTES_PER_ELEMENT=="number"?new e(o):Array.prototype.slice.call(o)}function zM(o){return ArrayBuffer.isView(o)&&!(o instanceof DataView)}function kM(o){function e(n,s){return o[n]-o[s]}const t=o.length,i=new Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(e),i}function Rg(o,e,t){const i=o.length,n=new o.constructor(i);for(let s=0,r=0;r!==i;++s){const a=t[s]*e;for(let l=0;l!==e;++l)n[r++]=o[a+l]}return n}function jy(o,e,t,i){let n=1,s=o[0];for(;s!==void 0&&s[i]===void 0;)s=o[n++];if(s===void 0)return;let r=s[i];if(r!==void 0)if(Array.isArray(r))do r=s[i],r!==void 0&&(e.push(s.time),t.push.apply(t,r)),s=o[n++];while(s!==void 0);else if(r.toArray!==void 0)do r=s[i],r!==void 0&&(e.push(s.time),r.toArray(t,t.length)),s=o[n++];while(s!==void 0);else do r=s[i],r!==void 0&&(e.push(s.time),t.push(r)),s=o[n++];while(s!==void 0)}function kI(o,e,t,i,n=30){const s=o.clone();s.name=e;const r=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],h=c.getValueSize(),u=[],d=[];for(let f=0;f<c.times.length;++f){const p=c.times[f]*n;if(!(p<t||p>=i)){u.push(c.times[f]);for(let m=0;m<h;++m)d.push(c.values[f*h+m])}}u.length!==0&&(c.times=Eo(u,c.times.constructor),c.values=Eo(d,c.values.constructor),r.push(c))}s.tracks=r;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function GI(o,e=0,t=o,i=30){i<=0&&(i=30);const n=t.tracks.length,s=e/i;for(let r=0;r<n;++r){const a=t.tracks[r],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=o.tracks.find(function(y){return y.name===a.name&&y.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let m;if(s<=a.times[0]){const y=h,x=u-h;m=a.values.slice(y,x)}else if(s>=a.times[p]){const y=p*u+h,x=y+u-h;m=a.values.slice(y,x)}else{const y=a.createInterpolant(),x=h,_=u-h;y.evaluate(s),m=y.resultBuffer.slice(x,_)}l==="quaternion"&&new hi().fromArray(m).normalize().conjugate().toArray(m);const g=c.times.length;for(let y=0;y<g;++y){const x=y*f+d;if(l==="quaternion")hi.multiplyQuaternionsFlat(c.values,x,m,0,c.values,x);else{const _=f-d*2;for(let v=0;v<_;++v)c.values[x+v]-=m[v]}}}return o.blendMode=Ry,o}const VI={convertArray:Eo,isTypedArray:zM,getKeyframeOrder:kM,sortedArray:Rg,flattenJSON:jy,subclip:kI,makeClipAdditive:GI};class ch{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=n!==void 0?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],s=t[i-1];e:{t:{let r;i:{n:if(!(e<n)){for(let a=i+2;;){if(n===void 0){if(e<s)break n;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(s=n,n=t[++i],e<n)break t}r=t.length;break i}if(!(e>=s)){const a=t[1];e<a&&(i=2,s=a);for(let l=i-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=s,s=t[--i-1],e>=s)break t}r=i,i=0;break i}break e}for(;i<r;){const a=i+r>>>1;e<t[a]?r=a:i=a+1}if(n=t[i],s=t[i-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,n)}return this.interpolate_(i,s,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,s=e*n;for(let r=0;r!==n;++r)t[r]=i[s+r];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class GM extends ch{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:To,endingEnd:To}}intervalChanged_(e,t,i){const n=this.parameterPositions;let s=e-2,r=e+1,a=n[s],l=n[r];if(a===void 0)switch(this.getSettings_().endingStart){case wo:s=e,a=2*t-i;break;case Ac:s=n.length-2,a=t+n[s]-n[s+1];break;default:s=e,a=i}if(l===void 0)switch(this.getSettings_().endingEnd){case wo:r=e,l=2*i-t;break;case Ac:r=1,l=i+n[1]-n[0];break;default:r=e-1,l=t}const c=(i-t)*.5,h=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-i),this._offsetPrev=s*h,this._offsetNext=r*h}interpolate_(e,t,i,n){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(i-t)/(n-t),m=p*p,g=m*p,y=-d*g+2*d*m-d*p,x=(1+d)*g+(-1.5-2*d)*m+(-.5+d)*p+1,_=(-1-f)*g+(1.5+f)*m+.5*p,v=f*g-f*m;for(let A=0;A!==a;++A)s[A]=y*r[h+A]+x*r[c+A]+_*r[l+A]+v*r[u+A];return s}}class Jy extends ch{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=(i-t)/(n-t),u=1-h;for(let d=0;d!==a;++d)s[d]=r[c+d]*u+r[l+d]*h;return s}}class VM extends ch{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class Qn{constructor(e,t,i,n){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Eo(t,this.TimeBufferType),this.values=Eo(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:Eo(e.times,Array),values:Eo(e.values,Array)};const n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new VM(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Jy(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new GM(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case wc:t=this.InterpolantFactoryMethodDiscrete;break;case Yd:t=this.InterpolantFactoryMethodLinear;break;case td:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return wc;case this.InterpolantFactoryMethodLinear:return Yd;case this.InterpolantFactoryMethodSmooth:return td}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){const i=this.times,n=i.length;let s=0,r=n-1;for(;s!==n&&i[s]<e;)++s;for(;r!==-1&&i[r]>t;)--r;if(++r,s!==0||r!==n){s>=r&&(r=Math.max(r,1),s=r-1);const a=this.getValueSize();this.times=i.slice(s,r),this.values=this.values.slice(s*a,r*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let r=null;for(let a=0;a!==s;a++){const l=i[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(r!==null&&r>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,r),e=!1;break}r=l}if(n!==void 0&&zM(n))for(let a=0,l=n.length;a!==l;++a){const c=n[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===td,s=e.length-1;let r=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],h=e[a+1];if(c!==h&&(a!==1||c!==e[0]))if(n)l=!0;else{const u=a*i,d=u-i,f=u+i;for(let p=0;p!==i;++p){const m=t[u+p];if(m!==t[d+p]||m!==t[f+p]){l=!0;break}}}if(l){if(a!==r){e[r]=e[a];const u=a*i,d=r*i;for(let f=0;f!==i;++f)t[d+f]=t[u+f]}++r}}if(s>0){e[r]=e[s];for(let a=s*i,l=r*i,c=0;c!==i;++c)t[l+c]=t[a+c];++r}return r!==e.length?(this.times=e.slice(0,r),this.values=t.slice(0,r*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}Qn.prototype.TimeBufferType=Float32Array;Qn.prototype.ValueBufferType=Float32Array;Qn.prototype.DefaultInterpolation=Yd;class Yo extends Qn{constructor(e,t,i){super(e,t,i)}}Yo.prototype.ValueTypeName="bool";Yo.prototype.ValueBufferType=Array;Yo.prototype.DefaultInterpolation=wc;Yo.prototype.InterpolantFactoryMethodLinear=void 0;Yo.prototype.InterpolantFactoryMethodSmooth=void 0;class Qy extends Qn{}Qy.prototype.ValueTypeName="color";class Fc extends Qn{}Fc.prototype.ValueTypeName="number";class HM extends ch{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,l=(i-t)/(n-t);let c=e*a;for(let h=c+a;c!==h;c+=4)hi.slerpFlat(s,0,r,c-a,r,c,l);return s}}class hh extends Qn{InterpolantFactoryMethodLinear(e){return new HM(this.times,this.values,this.getValueSize(),e)}}hh.prototype.ValueTypeName="quaternion";hh.prototype.InterpolantFactoryMethodSmooth=void 0;class Zo extends Qn{constructor(e,t,i){super(e,t,i)}}Zo.prototype.ValueTypeName="string";Zo.prototype.ValueBufferType=Array;Zo.prototype.DefaultInterpolation=wc;Zo.prototype.InterpolantFactoryMethodLinear=void 0;Zo.prototype.InterpolantFactoryMethodSmooth=void 0;class Uc extends Qn{}Uc.prototype.ValueTypeName="vector";class Bc{constructor(e="",t=-1,i=[],n=Cf){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=Tn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let r=0,a=i.length;r!==a;++r)t.push(WI(i[r]).scale(n));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,r=i.length;s!==r;++s)t.push(Qn.toJSON(i[s]));return n}static CreateFromMorphTargetSequence(e,t,i,n){const s=t.length,r=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const h=kM(l);l=Rg(l,1,h),c=Rg(c,1,h),!n&&l[0]===0&&(l.push(s),c.push(c[0])),r.push(new Fc(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/i))}return new this(e,-1,r)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const n={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],h=c.name.match(s);if(h&&h.length>1){const u=h[1];let d=n[u];d||(n[u]=d=[]),d.push(c)}}const r=[];for(const a in n)r.push(this.CreateFromMorphTargetSequence(a,n[a],t,i));return r}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(u,d,f,p,m){if(f.length!==0){const g=[],y=[];jy(f,g,y,p),g.length!==0&&m.push(new u(d,g,y))}},n=[],s=e.name||"default",r=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const d=c[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let m=0;m<d[p].morphTargets.length;m++)f[d[p].morphTargets[m]]=-1;for(const m in f){const g=[],y=[];for(let x=0;x!==d[p].morphTargets.length;++x){const _=d[p];g.push(_.time),y.push(_.morphTarget===m?1:0)}n.push(new Fc(".morphTargetInfluence["+m+"]",g,y))}l=f.length*r}else{const f=".bones["+t[u].name+"]";i(Uc,f+".position",d,"pos",n),i(hh,f+".quaternion",d,"rot",n),i(Uc,f+".scale",d,"scl",n)}}return n.length===0?null:new this(s,l,n,a)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,n=e.length;i!==n;++i){const s=this.tracks[i];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function HI(o){switch(o.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Fc;case"vector":case"vector2":case"vector3":case"vector4":return Uc;case"color":return Qy;case"quaternion":return hh;case"bool":case"boolean":return Yo;case"string":return Zo}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+o)}function WI(o){if(o.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=HI(o.type);if(o.times===void 0){const t=[],i=[];jy(o.keys,t,i,"value"),o.times=t,o.values=i}return e.parse!==void 0?e.parse(o):new e(o.name,o.times,o.values,o.interpolation)}const Vs={enabled:!1,files:{},add:function(o,e){this.enabled!==!1&&(this.files[o]=e)},get:function(o){if(this.enabled!==!1)return this.files[o]},remove:function(o){delete this.files[o]},clear:function(){this.files={}}};class ex{constructor(e,t,i){const n=this;let s=!1,r=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(h){a++,s===!1&&n.onStart!==void 0&&n.onStart(h,r,a),s=!0},this.itemEnd=function(h){r++,n.onProgress!==void 0&&n.onProgress(h,r,a),r===a&&(s=!1,n.onLoad!==void 0&&n.onLoad())},this.itemError=function(h){n.onError!==void 0&&n.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const f=c[u],p=c[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return p}return null}}}const WM=new ex;class un{constructor(e){this.manager=e!==void 0?e:WM,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(n,s){i.load(e,n,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}un.DEFAULT_MATERIAL_NAME="__DEFAULT";const Es={};class $I extends Error{constructor(e,t){super(e),this.response=t}}class er extends un{constructor(e){super(e)}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Vs.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Es[e]!==void 0){Es[e].push({onLoad:t,onProgress:i,onError:n});return}Es[e]=[],Es[e].push({onLoad:t,onProgress:i,onError:n});const r=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(r).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=Es[e],u=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let m=0;const g=new ReadableStream({start(y){x();function x(){u.read().then(({done:_,value:v})=>{if(_)y.close();else{m+=v.byteLength;const A=new ProgressEvent("progress",{lengthComputable:p,loaded:m,total:f});for(let T=0,M=h.length;T<M;T++){const w=h[T];w.onProgress&&w.onProgress(A)}y.enqueue(v),x()}},_=>{y.error(_)})}}});return new Response(g)}else throw new $I(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(p=>f.decode(p))}}}).then(c=>{Vs.add(e,c);const h=Es[e];delete Es[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=Es[e];if(h===void 0)throw this.manager.itemError(e),c;delete Es[e];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class XI extends un{constructor(e){super(e)}load(e,t,i,n){const s=this,r=new er(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),s.manager.itemError(e)}},i,n)}parse(e){const t=[];for(let i=0;i<e.length;i++){const n=Bc.parse(e[i]);t.push(n)}return t}}class qI extends un{constructor(e){super(e)}load(e,t,i,n){const s=this,r=[],a=new Uf,l=new er(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function h(u){l.load(e[u],function(d){const f=s.parse(d,!0);r[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(a.minFilter=ci),a.image=r,a.format=f.format,a.needsUpdate=!0,t&&t(a))},i,n)}if(Array.isArray(e))for(let u=0,d=e.length;u<d;++u)h(u);else l.load(e,function(u){const d=s.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){r[p]={mipmaps:[]};for(let m=0;m<d.mipmapCount;m++)r[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+m]),r[p].format=d.format,r[p].width=d.width,r[p].height=d.height}a.image=r}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=ci),a.format=d.format,a.needsUpdate=!0,t&&t(a)},i,n);return a}}class Oc extends un{constructor(e){super(e)}load(e,t,i,n){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=Vs.get(e);if(r!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r;const a=Nc("img");function l(){h(),Vs.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(u){h(),n&&n(u),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class YI extends un{constructor(e){super(e)}load(e,t,i,n){const s=new ih;s.colorSpace=sn;const r=new Oc(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let a=0;function l(c){r.load(e[c],function(h){s.images[c]=h,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,n)}for(let c=0;c<e.length;++c)l(c);return s}}class ZI extends un{constructor(e){super(e)}load(e,t,i,n){const s=this,r=new us,a=new er(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){let c;try{c=s.parse(l)}catch(h){if(n!==void 0)n(h);else{console.error(h);return}}c.image!==void 0?r.image=c.image:c.data!==void 0&&(r.image.width=c.width,r.image.height=c.height,r.image.data=c.data),r.wrapS=c.wrapS!==void 0?c.wrapS:Nn,r.wrapT=c.wrapT!==void 0?c.wrapT:Nn,r.magFilter=c.magFilter!==void 0?c.magFilter:ci,r.minFilter=c.minFilter!==void 0?c.minFilter:ci,r.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(r.colorSpace=c.colorSpace),c.flipY!==void 0&&(r.flipY=c.flipY),c.format!==void 0&&(r.format=c.format),c.type!==void 0&&(r.type=c.type),c.mipmaps!==void 0&&(r.mipmaps=c.mipmaps,r.minFilter=os),c.mipmapCount===1&&(r.minFilter=ci),c.generateMipmaps!==void 0&&(r.generateMipmaps=c.generateMipmaps),r.needsUpdate=!0,t&&t(r,c)},i,n),r}}class KI extends un{constructor(e){super(e)}load(e,t,i,n){const s=new xi,r=new Oc(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},i,n),s}}let Wr=class extends Nt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ce(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}},$M=class extends Wr{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Nt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Ce(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}};const em=new Ye,S0=new R,M0=new R;let tx=class{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Z(512,512),this.map=null,this.mapPass=null,this.matrix=new Ye,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new nh,this._frameExtents=new Z(1,1),this._viewportCount=1,this._viewports=[new gt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;S0.setFromMatrixPosition(e.matrixWorld),t.position.copy(S0),M0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(M0),t.updateMatrixWorld(),em.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(em),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(em)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}},jI=class extends tx{constructor(){super(new wi(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=al*2*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(i!==t.fov||n!==t.aspect||s!==t.far)&&(t.fov=i,t.aspect=n,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}},XM=class extends Wr{constructor(e,t,i=0,n=Math.PI/3,s=0,r=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Nt.DEFAULT_UP),this.updateMatrix(),this.target=new Nt,this.distance=i,this.angle=n,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new jI}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}};const T0=new Ye,zl=new R,tm=new R;let JI=class extends tx{constructor(){super(new wi(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Z(4,2),this._viewportCount=6,this._viewports=[new gt(2,1,1,1),new gt(0,1,1,1),new gt(3,1,1,1),new gt(1,1,1,1),new gt(3,0,1,1),new gt(1,0,1,1)],this._cubeDirections=[new R(1,0,0),new R(-1,0,0),new R(0,0,1),new R(0,0,-1),new R(0,1,0),new R(0,-1,0)],this._cubeUps=[new R(0,1,0),new R(0,1,0),new R(0,1,0),new R(0,1,0),new R(0,0,1),new R(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),zl.setFromMatrixPosition(e.matrixWorld),i.position.copy(zl),tm.copy(i.position),tm.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(tm),i.updateMatrixWorld(),n.makeTranslation(-zl.x,-zl.y,-zl.z),T0.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(T0)}},qM=class extends Wr{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new JI}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}},QI=class extends tx{constructor(){super(new sh(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}},YM=class extends Wr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Nt.DEFAULT_UP),this.updateMatrix(),this.target=new Nt,this.shadow=new QI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}},ZM=class extends Wr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}},KM=class extends Wr{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}},jM=class{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new R)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,n=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.282095),t.addScaledVector(r[1],.488603*n),t.addScaledVector(r[2],.488603*s),t.addScaledVector(r[3],.488603*i),t.addScaledVector(r[4],1.092548*(i*n)),t.addScaledVector(r[5],1.092548*(n*s)),t.addScaledVector(r[6],.315392*(3*s*s-1)),t.addScaledVector(r[7],1.092548*(i*s)),t.addScaledVector(r[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){const i=e.x,n=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.886227),t.addScaledVector(r[1],2*.511664*n),t.addScaledVector(r[2],2*.511664*s),t.addScaledVector(r[3],2*.511664*i),t.addScaledVector(r[4],2*.429043*i*n),t.addScaledVector(r[5],2*.429043*n*s),t.addScaledVector(r[6],.743125*s*s-.247708),t.addScaledVector(r[7],2*.429043*i*s),t.addScaledVector(r[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+n*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+n*3);return e}static getBasisAt(e,t){const i=e.x,n=e.y,s=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*s,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*i*s,t[8]=.546274*(i*i-n*n)}},JM=class extends Wr{constructor(e=new jM,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}};class Kf extends un{constructor(e){super(e),this.textures={}}load(e,t,i,n){const s=this,r=new er(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),s.manager.itemError(e)}},i,n)}parse(e){const t=this.textures;function i(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const n=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(n.uuid=e.uuid),e.name!==void 0&&(n.name=e.name),e.color!==void 0&&n.color!==void 0&&n.color.setHex(e.color),e.roughness!==void 0&&(n.roughness=e.roughness),e.metalness!==void 0&&(n.metalness=e.metalness),e.sheen!==void 0&&(n.sheen=e.sheen),e.sheenColor!==void 0&&(n.sheenColor=new Ce().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(n.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&n.emissive!==void 0&&n.emissive.setHex(e.emissive),e.specular!==void 0&&n.specular!==void 0&&n.specular.setHex(e.specular),e.specularIntensity!==void 0&&(n.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&n.specularColor!==void 0&&n.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(n.shininess=e.shininess),e.clearcoat!==void 0&&(n.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(n.dispersion=e.dispersion),e.iridescence!==void 0&&(n.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(n.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(n.transmission=e.transmission),e.thickness!==void 0&&(n.thickness=e.thickness),e.attenuationDistance!==void 0&&(n.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&n.attenuationColor!==void 0&&n.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(n.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(n.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(n.fog=e.fog),e.flatShading!==void 0&&(n.flatShading=e.flatShading),e.blending!==void 0&&(n.blending=e.blending),e.combine!==void 0&&(n.combine=e.combine),e.side!==void 0&&(n.side=e.side),e.shadowSide!==void 0&&(n.shadowSide=e.shadowSide),e.opacity!==void 0&&(n.opacity=e.opacity),e.transparent!==void 0&&(n.transparent=e.transparent),e.alphaTest!==void 0&&(n.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(n.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(n.depthFunc=e.depthFunc),e.depthTest!==void 0&&(n.depthTest=e.depthTest),e.depthWrite!==void 0&&(n.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(n.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(n.blendSrc=e.blendSrc),e.blendDst!==void 0&&(n.blendDst=e.blendDst),e.blendEquation!==void 0&&(n.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(n.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(n.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(n.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&n.blendColor!==void 0&&n.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(n.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(n.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(n.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(n.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(n.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(n.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(n.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(n.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(n.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(n.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(n.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(n.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(n.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(n.rotation=e.rotation),e.linewidth!==void 0&&(n.linewidth=e.linewidth),e.dashSize!==void 0&&(n.dashSize=e.dashSize),e.gapSize!==void 0&&(n.gapSize=e.gapSize),e.scale!==void 0&&(n.scale=e.scale),e.polygonOffset!==void 0&&(n.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(n.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(n.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(n.dithering=e.dithering),e.alphaToCoverage!==void 0&&(n.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(n.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(n.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(n.visible=e.visible),e.toneMapped!==void 0&&(n.toneMapped=e.toneMapped),e.userData!==void 0&&(n.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const r=e.uniforms[s];switch(n.uniforms[s]={},r.type){case"t":n.uniforms[s].value=i(r.value);break;case"c":n.uniforms[s].value=new Ce().setHex(r.value);break;case"v2":n.uniforms[s].value=new Z().fromArray(r.value);break;case"v3":n.uniforms[s].value=new R().fromArray(r.value);break;case"v4":n.uniforms[s].value=new gt().fromArray(r.value);break;case"m3":n.uniforms[s].value=new lt().fromArray(r.value);break;case"m4":n.uniforms[s].value=new Ye().fromArray(r.value);break;default:n.uniforms[s].value=r.value}}if(e.defines!==void 0&&(n.defines=e.defines),e.vertexShader!==void 0&&(n.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(n.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(n.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)n.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(n.lights=e.lights),e.clipping!==void 0&&(n.clipping=e.clipping),e.size!==void 0&&(n.size=e.size),e.sizeAttenuation!==void 0&&(n.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(n.map=i(e.map)),e.matcap!==void 0&&(n.matcap=i(e.matcap)),e.alphaMap!==void 0&&(n.alphaMap=i(e.alphaMap)),e.bumpMap!==void 0&&(n.bumpMap=i(e.bumpMap)),e.bumpScale!==void 0&&(n.bumpScale=e.bumpScale),e.normalMap!==void 0&&(n.normalMap=i(e.normalMap)),e.normalMapType!==void 0&&(n.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),n.normalScale=new Z().fromArray(s)}return e.displacementMap!==void 0&&(n.displacementMap=i(e.displacementMap)),e.displacementScale!==void 0&&(n.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(n.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(n.roughnessMap=i(e.roughnessMap)),e.metalnessMap!==void 0&&(n.metalnessMap=i(e.metalnessMap)),e.emissiveMap!==void 0&&(n.emissiveMap=i(e.emissiveMap)),e.emissiveIntensity!==void 0&&(n.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(n.specularMap=i(e.specularMap)),e.specularIntensityMap!==void 0&&(n.specularIntensityMap=i(e.specularIntensityMap)),e.specularColorMap!==void 0&&(n.specularColorMap=i(e.specularColorMap)),e.envMap!==void 0&&(n.envMap=i(e.envMap)),e.envMapRotation!==void 0&&n.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(n.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(n.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(n.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(n.lightMap=i(e.lightMap)),e.lightMapIntensity!==void 0&&(n.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(n.aoMap=i(e.aoMap)),e.aoMapIntensity!==void 0&&(n.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(n.gradientMap=i(e.gradientMap)),e.clearcoatMap!==void 0&&(n.clearcoatMap=i(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(n.clearcoatNormalScale=new Z().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(n.iridescenceMap=i(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(n.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(n.transmissionMap=i(e.transmissionMap)),e.thicknessMap!==void 0&&(n.thicknessMap=i(e.thicknessMap)),e.anisotropyMap!==void 0&&(n.anisotropyMap=i(e.anisotropyMap)),e.sheenColorMap!==void 0&&(n.sheenColorMap=i(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(n.sheenRoughnessMap=i(e.sheenRoughnessMap)),n}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Kf.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:NM,SpriteMaterial:zy,RawShaderMaterial:PM,ShaderMaterial:cn,PointsMaterial:Gy,MeshPhysicalMaterial:IM,MeshStandardMaterial:Ky,MeshPhongMaterial:DM,MeshToonMaterial:LM,MeshNormalMaterial:FM,MeshLambertMaterial:UM,MeshDepthMaterial:By,MeshDistanceMaterial:Oy,MeshBasicMaterial:Vr,MeshMatcapMaterial:BM,LineDashedMaterial:OM,LineBasicMaterial:Ji,Material:zi};return new t[e]}}class Ng{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class ix extends ct{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class QM extends un{constructor(e){super(e)}load(e,t,i,n){const s=this,r=new er(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),s.manager.itemError(e)}},i,n)}parse(e){const t={},i={};function n(f,p){if(t[p]!==void 0)return t[p];const g=f.interleavedBuffers[p],y=s(f,g.buffer),x=Ga(g.type,y),_=new rh(x,g.stride);return _.uuid=g.uuid,t[p]=_,_}function s(f,p){if(i[p]!==void 0)return i[p];const g=f.arrayBuffers[p],y=new Uint32Array(g).buffer;return i[p]=y,y}const r=e.isInstancedBufferGeometry?new ix:new ct,a=e.data.index;if(a!==void 0){const f=Ga(a.type,a.array);r.setIndex(new bt(f,1))}const l=e.data.attributes;for(const f in l){const p=l[f];let m;if(p.isInterleavedBufferAttribute){const g=n(e.data,p.data);m=new Pn(g,p.itemSize,p.offset,p.normalized)}else{const g=Ga(p.type,p.array),y=p.isInstancedBufferAttribute?Ur:bt;m=new y(g,p.itemSize,p.normalized)}p.name!==void 0&&(m.name=p.name),p.usage!==void 0&&m.setUsage(p.usage),r.setAttribute(f,m)}const c=e.data.morphAttributes;if(c)for(const f in c){const p=c[f],m=[];for(let g=0,y=p.length;g<y;g++){const x=p[g];let _;if(x.isInterleavedBufferAttribute){const v=n(e.data,x.data);_=new Pn(v,x.itemSize,x.offset,x.normalized)}else{const v=Ga(x.type,x.array);_=new bt(v,x.itemSize,x.normalized)}x.name!==void 0&&(_.name=x.name),m.push(_)}r.morphAttributes[f]=m}e.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let f=0,p=u.length;f!==p;++f){const m=u[f];r.addGroup(m.start,m.count,m.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const f=new R;d.center!==void 0&&f.fromArray(d.center),r.boundingSphere=new gi(f,d.radius)}return e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}}class e2 extends un{constructor(e){super(e)}load(e,t,i,n){const s=this,r=this.path===""?Ng.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const a=new er(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){n!==void 0&&n(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){n!==void 0&&n(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},i,n)}async loadAsync(e,t){const i=this,n=this.path===""?Ng.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const s=new er(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const r=await s.loadAsync(e,t),a=JSON.parse(r),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await i.parseAsync(a)}parse(e,t){const i=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,n),r=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,r),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,a,i),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),this.bindLightTargets(c),t!==void 0){let u=!1;for(const d in r)if(r[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,i),s=await this.parseImagesAsync(e.images),r=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,r),l=this.parseObject(e.object,n,a,r,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let i=0,n=e.length;i<n;i++){const s=new Po().fromJSON(e[i]);t[s.uuid]=s}return t}parseSkeletons(e,t){const i={},n={};if(t.traverse(function(s){s.isBone&&(n[s.uuid]=s)}),e!==void 0)for(let s=0,r=e.length;s<r;s++){const a=new Ff().fromJSON(e[s],n);i[a.uuid]=a}return i}parseGeometries(e,t){const i={};if(e!==void 0){const n=new QM;for(let s=0,r=e.length;s<r;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=n.parse(l);break;default:l.type in b0?a=b0[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),i[l.uuid]=a}}return i}parseMaterials(e,t){const i={},n={};if(e!==void 0){const s=new Kf;s.setTextures(t);for(let r=0,a=e.length;r<a;r++){const l=e[r];i[l.uuid]===void 0&&(i[l.uuid]=s.parse(l)),n[l.uuid]=i[l.uuid]}}return n}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const n=e[i],s=Bc.parse(n);t[s.uuid]=s}return t}parseImages(e,t){const i=this,n={};let s;function r(l){return i.manager.itemStart(l),s.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return r(h)}else return l.data?{data:Ga(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new ex(t);s=new Oc(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const u=e[c],d=u.url;if(Array.isArray(d)){const f=[];for(let p=0,m=d.length;p<m;p++){const g=d[p],y=a(g);y!==null&&(y instanceof HTMLImageElement?f.push(y):f.push(new us(y.data,y.width,y.height)))}n[u.uuid]=new Ao(f)}else{const f=a(u.url);n[u.uuid]=new Ao(f)}}}return n}async parseImagesAsync(e){const t=this,i={};let n;async function s(r){if(typeof r=="string"){const a=r,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await n.loadAsync(l)}else return r.data?{data:Ga(r.type,r.data),width:r.width,height:r.height}:null}if(e!==void 0&&e.length>0){n=new Oc(this.manager),n.setCrossOrigin(this.crossOrigin);for(let r=0,a=e.length;r<a;r++){const l=e[r],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u],p=await s(f);p!==null&&(p instanceof HTMLImageElement?h.push(p):h.push(new us(p.data,p.width,p.height)))}i[l.uuid]=new Ao(h)}else{const h=await s(l.url);i[l.uuid]=new Ao(h)}}}return i}parseTextures(e,t){function i(s,r){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),r[s])}const n={};if(e!==void 0)for(let s=0,r=e.length;s<r;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let h;Array.isArray(c)?(h=new ih,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new us:h=new xi,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=a.uuid,a.name!==void 0&&(h.name=a.name),a.mapping!==void 0&&(h.mapping=i(a.mapping,t2)),a.channel!==void 0&&(h.channel=a.channel),a.offset!==void 0&&h.offset.fromArray(a.offset),a.repeat!==void 0&&h.repeat.fromArray(a.repeat),a.center!==void 0&&h.center.fromArray(a.center),a.rotation!==void 0&&(h.rotation=a.rotation),a.wrap!==void 0&&(h.wrapS=i(a.wrap[0],w0),h.wrapT=i(a.wrap[1],w0)),a.format!==void 0&&(h.format=a.format),a.internalFormat!==void 0&&(h.internalFormat=a.internalFormat),a.type!==void 0&&(h.type=a.type),a.colorSpace!==void 0&&(h.colorSpace=a.colorSpace),a.minFilter!==void 0&&(h.minFilter=i(a.minFilter,A0)),a.magFilter!==void 0&&(h.magFilter=i(a.magFilter,A0)),a.anisotropy!==void 0&&(h.anisotropy=a.anisotropy),a.flipY!==void 0&&(h.flipY=a.flipY),a.generateMipmaps!==void 0&&(h.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(h.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(h.compareFunction=a.compareFunction),a.userData!==void 0&&(h.userData=a.userData),n[a.uuid]=h}return n}parseObject(e,t,i,n,s){let r;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,m=d.length;p<m;p++){const g=d[p];i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),f.push(i[g])}return f}return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),i[d]}}function c(d){return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),n[d]}let h,u;switch(e.type){case"Scene":r=new hM,e.background!==void 0&&(Number.isInteger(e.background)?r.background=new Ce(e.background):r.background=c(e.background)),e.environment!==void 0&&(r.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?r.fog=new Lf(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(r.fog=new Df(e.fog.color,e.fog.density)),e.fog.name!==""&&(r.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(r.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(r.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&r.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(r.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&r.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":r=new wi(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(r.focus=e.focus),e.zoom!==void 0&&(r.zoom=e.zoom),e.filmGauge!==void 0&&(r.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(r.filmOffset=e.filmOffset),e.view!==void 0&&(r.view=Object.assign({},e.view));break;case"OrthographicCamera":r=new sh(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(r.zoom=e.zoom),e.view!==void 0&&(r.view=Object.assign({},e.view));break;case"AmbientLight":r=new ZM(e.color,e.intensity);break;case"DirectionalLight":r=new YM(e.color,e.intensity),r.target=e.target||"";break;case"PointLight":r=new qM(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":r=new KM(e.color,e.intensity,e.width,e.height);break;case"SpotLight":r=new XM(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),r.target=e.target||"";break;case"HemisphereLight":r=new $M(e.color,e.groundColor,e.intensity);break;case"LightProbe":r=new JM().fromJSON(e);break;case"SkinnedMesh":h=a(e.geometry),u=l(e.material),r=new mM(h,u),e.bindMode!==void 0&&(r.bindMode=e.bindMode),e.bindMatrix!==void 0&&r.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(r.skeleton=e.skeleton);break;case"Mesh":h=a(e.geometry),u=l(e.material),r=new Kt(h,u);break;case"InstancedMesh":h=a(e.geometry),u=l(e.material);const d=e.count,f=e.instanceMatrix,p=e.instanceColor;r=new gM(h,u,d),r.instanceMatrix=new Ur(new Float32Array(f.array),16),p!==void 0&&(r.instanceColor=new Ur(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":h=a(e.geometry),u=l(e.material),r=new yM(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,u),r.geometry=h,r.perObjectFrustumCulled=e.perObjectFrustumCulled,r.sortObjects=e.sortObjects,r._drawRanges=e.drawRanges,r._reservedRanges=e.reservedRanges,r._visibility=e.visibility,r._active=e.active,r._bounds=e.bounds.map(m=>{const g=new mi;g.min.fromArray(m.boxMin),g.max.fromArray(m.boxMax);const y=new gi;return y.radius=m.sphereRadius,y.center.fromArray(m.sphereCenter),{boxInitialized:m.boxInitialized,box:g,sphereInitialized:m.sphereInitialized,sphere:y}}),r._maxInstanceCount=e.maxInstanceCount,r._maxVertexCount=e.maxVertexCount,r._maxIndexCount=e.maxIndexCount,r._geometryInitialized=e.geometryInitialized,r._geometryCount=e.geometryCount,r._matricesTexture=c(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(r._colorsTexture=c(e.colorsTexture.uuid));break;case"LOD":r=new pM;break;case"Line":r=new Br(a(e.geometry),l(e.material));break;case"LineLoop":r=new xM(a(e.geometry),l(e.material));break;case"LineSegments":r=new xs(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":r=new _M(a(e.geometry),l(e.material));break;case"Sprite":r=new fM(l(e.material));break;case"Group":r=new Ha;break;case"Bone":r=new ky;break;default:r=new Nt}if(r.uuid=e.uuid,e.name!==void 0&&(r.name=e.name),e.matrix!==void 0?(r.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(r.matrixAutoUpdate=e.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(e.position!==void 0&&r.position.fromArray(e.position),e.rotation!==void 0&&r.rotation.fromArray(e.rotation),e.quaternion!==void 0&&r.quaternion.fromArray(e.quaternion),e.scale!==void 0&&r.scale.fromArray(e.scale)),e.up!==void 0&&r.up.fromArray(e.up),e.castShadow!==void 0&&(r.castShadow=e.castShadow),e.receiveShadow!==void 0&&(r.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(r.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(r.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(r.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(r.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&r.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(r.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(r.visible=e.visible),e.frustumCulled!==void 0&&(r.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(r.renderOrder=e.renderOrder),e.userData!==void 0&&(r.userData=e.userData),e.layers!==void 0&&(r.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let f=0;f<d.length;f++)r.add(this.parseObject(d[f],t,i,n,s))}if(e.animations!==void 0){const d=e.animations;for(let f=0;f<d.length;f++){const p=d[f];r.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(r.autoUpdate=e.autoUpdate);const d=e.levels;for(let f=0;f<d.length;f++){const p=d[f],m=r.getObjectByProperty("uuid",p.object);m!==void 0&&r.addLevel(m,p.distance,p.hysteresis)}}return r}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const n=t[i.skeleton];n===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(n,i.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const i=t.target,n=e.getObjectByProperty("uuid",i);n!==void 0?t.target=n:t.target=new Nt}})}}const t2={UVMapping:bf,CubeReflectionMapping:Js,CubeRefractionMapping:Fr,EquirectangularReflectionMapping:bc,EquirectangularRefractionMapping:Sc,CubeUVReflectionMapping:gl},w0={RepeatWrapping:Mc,ClampToEdgeWrapping:Nn,MirroredRepeatWrapping:Tc},A0={NearestFilter:Ci,NearestMipmapNearestFilter:_y,NearestMipmapLinearFilter:ka,LinearFilter:ci,LinearMipmapNearestFilter:rc,LinearMipmapLinearFilter:os};class i2 extends un{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,r=Vs.get(e);if(r!==void 0){if(s.manager.itemStart(e),r.then){r.then(c=>{t&&t(c),s.manager.itemEnd(e)}).catch(c=>{n&&n(c)});return}return setTimeout(function(){t&&t(r),s.manager.itemEnd(e)},0),r}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return Vs.add(e,c),t&&t(c),s.manager.itemEnd(e),c}).catch(function(c){n&&n(c),Vs.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});Vs.add(e,l),s.manager.itemStart(e)}}let au;class nx{static getContext(){return au===void 0&&(au=new(window.AudioContext||window.webkitAudioContext)),au}static setContext(e){au=e}}class n2 extends un{constructor(e){super(e)}load(e,t,i,n){const s=this,r=new er(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(e,function(l){try{const c=l.slice(0);nx.getContext().decodeAudioData(c,function(u){t(u)}).catch(a)}catch(c){a(c)}},i,n);function a(l){n?n(l):console.error(l),s.manager.itemError(e)}}}const E0=new Ye,C0=new Ye,io=new Ye;class s2{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new wi,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new wi,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,io.copy(e.projectionMatrix);const n=t.eyeSep/2,s=n*t.near/t.focus,r=t.near*Math.tan(No*t.fov*.5)/t.zoom;let a,l;C0.elements[12]=-n,E0.elements[12]=n,a=-r*t.aspect+s,l=r*t.aspect+s,io.elements[0]=2*t.near/(l-a),io.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(io),a=-r*t.aspect-s,l=r*t.aspect-s,io.elements[0]=2*t.near/(l-a),io.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(io)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(C0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(E0)}}class sx{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=R0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=R0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function R0(){return performance.now()}const no=new R,N0=new hi,r2=new R,so=new R;class o2 extends Nt{constructor(){super(),this.type="AudioListener",this.context=nx.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new sx}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(no,N0,r2),so.set(0,0,-1).applyQuaternion(N0),t.positionX){const n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(no.x,n),t.positionY.linearRampToValueAtTime(no.y,n),t.positionZ.linearRampToValueAtTime(no.z,n),t.forwardX.linearRampToValueAtTime(so.x,n),t.forwardY.linearRampToValueAtTime(so.y,n),t.forwardZ.linearRampToValueAtTime(so.z,n),t.upX.linearRampToValueAtTime(i.x,n),t.upY.linearRampToValueAtTime(i.y,n),t.upZ.linearRampToValueAtTime(i.z,n)}else t.setPosition(no.x,no.y,no.z),t.setOrientation(so.x,so.y,so.z,i.x,i.y,i.z)}}class eT extends Nt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ro=new R,P0=new hi,a2=new R,oo=new R;class l2 extends eT{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ro,P0,a2),oo.set(0,0,1).applyQuaternion(P0);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ro.x,i),t.positionY.linearRampToValueAtTime(ro.y,i),t.positionZ.linearRampToValueAtTime(ro.z,i),t.orientationX.linearRampToValueAtTime(oo.x,i),t.orientationY.linearRampToValueAtTime(oo.y,i),t.orientationZ.linearRampToValueAtTime(oo.z,i)}else t.setPosition(ro.x,ro.y,ro.z),t.setOrientation(oo.x,oo.y,oo.z)}}class c2{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class tT{constructor(e,t,i){this.binding=e,this.valueSize=i;let n,s,r;switch(t){case"quaternion":n=this._slerp,s=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":n=this._select,s=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:n=this._lerp,s=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=s,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,n=this.valueSize,s=e*n+n;let r=this.cumulativeWeight;if(r===0){for(let a=0;a!==n;++a)i[s+a]=i[a];r=t}else{r+=t;const a=t/r;this._mixBufferRegion(i,s,0,a,n)}this.cumulativeWeight=r}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,n=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,n=e*t+t,s=this.cumulativeWeight,r=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(i,n,l,1-s,t)}r>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(i[l]!==i[l+t]){a.setValue(i,n);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let s=i,r=n;s!==r;++s)t[s]=t[n+s%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,s){if(n>=.5)for(let r=0;r!==s;++r)e[t+r]=e[i+r]}_slerp(e,t,i,n){hi.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,s){const r=this._workIndex*s;hi.multiplyQuaternionsFlat(e,r,e,t,e,i),hi.slerpFlat(e,t,e,t,e,r,n)}_lerp(e,t,i,n,s){const r=1-n;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*r+e[i+a]*n}}_lerpAdditive(e,t,i,n,s){for(let r=0;r!==s;++r){const a=t+r;e[a]=e[a]+e[i+r]*n}}}const rx="\\[\\]\\.:\\/",h2=new RegExp("["+rx+"]","g"),ox="[^"+rx+"]",u2="[^"+rx.replace("\\.","")+"]",d2=/((?:WC+[\/:])*)/.source.replace("WC",ox),f2=/(WCOD+)?/.source.replace("WCOD",u2),p2=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ox),m2=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ox),g2=new RegExp("^"+d2+f2+p2+m2+"$"),y2=["material","materials","bones","map"];class x2{constructor(e,t,i){const n=i||vt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];n!==void 0&&n.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,s=i.length;n!==s;++n)i[n].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class vt{constructor(e,t,i){this.path=t,this.parsedPath=i||vt.parseTrackName(t),this.node=vt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new vt.Composite(e,t,i):new vt(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(h2,"")}static parseTrackName(e){const t=g2.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(n!==void 0&&n!==-1){const s=i.nodeName.substring(n+1);y2.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(s){for(let r=0;r<s.length;r++){const a=s[r];if(a.name===t||a.uuid===t)return a;const l=i(a.children);if(l)return l}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,n=t.propertyName;let s=t.propertyIndex;if(e||(e=vt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let c=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const r=e[n];if(r===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+n+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(n==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=s}else r.fromArray!==void 0&&r.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(l=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}vt.Composite=x2;vt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};vt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};vt.prototype.GetterByBindingType=[vt.prototype._getValue_direct,vt.prototype._getValue_array,vt.prototype._getValue_arrayElement,vt.prototype._getValue_toArray];vt.prototype.SetterByBindingTypeAndVersioning=[[vt.prototype._setValue_direct,vt.prototype._setValue_direct_setNeedsUpdate,vt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_array,vt.prototype._setValue_array_setNeedsUpdate,vt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_arrayElement,vt.prototype._setValue_arrayElement_setNeedsUpdate,vt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_fromArray,vt.prototype._setValue_fromArray_setNeedsUpdate,vt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class _2{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Tn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let i=0,n=arguments.length;i!==n;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,s=this._bindings,r=s.length;let a,l=e.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],f=d.uuid;let p=t[f];if(p===void 0){p=l++,t[f]=p,e.push(d);for(let m=0,g=r;m!==g;++m)s[m].push(new vt(d,i[m],n[m]))}else if(p<c){a=e[p];const m=--c,g=e[m];t[g.uuid]=p,e[p]=g,t[f]=m,e[m]=d;for(let y=0,x=r;y!==x;++y){const _=s[y],v=_[m];let A=_[p];_[p]=v,A===void 0&&(A=new vt(d,i[y],n[y])),_[m]=A}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let s=this.nCachedObjects_;for(let r=0,a=arguments.length;r!==a;++r){const l=arguments[r],c=l.uuid,h=t[c];if(h!==void 0&&h>=s){const u=s++,d=e[u];t[d.uuid]=h,e[h]=d,t[c]=u,e[u]=l;for(let f=0,p=n;f!==p;++f){const m=i[f],g=m[u],y=m[h];m[h]=g,m[u]=y}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let s=this.nCachedObjects_,r=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],h=c.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<s){const d=--s,f=e[d],p=--r,m=e[p];t[f.uuid]=u,e[u]=f,t[m.uuid]=d,e[d]=m,e.pop();for(let g=0,y=n;g!==y;++g){const x=i[g],_=x[d],v=x[p];x[u]=_,x[d]=v,x.pop()}}else{const d=--r,f=e[d];d>0&&(t[f.uuid]=u),e[u]=f,e.pop();for(let p=0,m=n;p!==m;++p){const g=i[p];g[u]=g[d],g.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const i=this._bindingsIndicesByPath;let n=i[e];const s=this._bindings;if(n!==void 0)return s[n];const r=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);n=s.length,i[e]=n,r.push(e),a.push(t),s.push(u);for(let d=h,f=l.length;d!==f;++d){const p=l[d];u[d]=new vt(p,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,i=t[e];if(i!==void 0){const n=this._paths,s=this._parsedPaths,r=this._bindings,a=r.length-1,l=r[a],c=e[a];t[c]=i,r[i]=l,r.pop(),s[i]=s[a],s.pop(),n[i]=n[a],n.pop()}}}class iT{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;const s=t.tracks,r=s.length,a=new Array(r),l={endingStart:To,endingEnd:To};for(let c=0;c!==r;++c){const h=s[c].createInterpolant(null);a[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=CS,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const n=this._clip.duration,s=e._clip.duration,r=s/n,a=n/s;e.warp(1,r,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const n=this._mixer,s=n.time,r=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/r,c[1]=t/r,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;l<0||i===0?t=0:(this._startTime=null,t=i*l)}t*=this._updateTimeScale(e);const r=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Ry:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(r),c[h].accumulateAdditive(a);break;case Cf:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(r),c[h].accumulate(n,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),n===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let n=this.time+e,s=this._loopCount;const r=i===RS;if(e===0)return s===-1?n:r&&(s&1)===1?t-n:n;if(i===ES){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else if(n<0)n=0;else{this.time=n;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,r)):this._setEndings(this.repetitions===0,!0,r)),n>=t||n<0){const a=Math.floor(n/t);n-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,r)}else this._setEndings(!1,!1,r);this._loopCount=s,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=n;if(r&&(s&1)===1)return t-n}return n}_setEndings(e,t,i){const n=this._interpolantSettings;i?(n.endingStart=wo,n.endingEnd=wo):(e?n.endingStart=this.zeroSlopeAtStart?wo:To:n.endingStart=Ac,t?n.endingEnd=this.zeroSlopeAtEnd?wo:To:n.endingEnd=Ac)}_scheduleFading(e,t,i){const n=this._mixer,s=n.time;let r=this._weightInterpolant;r===null&&(r=n._lendControlInterpolant(),this._weightInterpolant=r);const a=r.parameterPositions,l=r.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=i,this}}const v2=new Float32Array(1);class b2 extends ys{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const i=e._localRoot||this._root,n=e._clip.tracks,s=n.length,r=e._propertyBindings,a=e._interpolants,l=i.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==s;++u){const d=n[u],f=d.name;let p=h[f];if(p!==void 0)++p.referenceCount,r[u]=p;else{if(p=r[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,f));continue}const m=t&&t._propertyBindings[u].binding.parsedPath;p=new tT(vt.create(i,f,m),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,f),r[u]=p}a[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,n=e._clip.uuid,s=this._actionsByClip[n];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,n,i)}const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const s=t[i];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const s=t[i];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,i){const n=this._actions,s=this._actionsByClip;let r=s[t];if(r===void 0)r={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=r;else{const a=r.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=n.length,n.push(e),r.actionByRoot[i]=e}_removeInactiveAction(e){const t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,r=this._actionsByClip,a=r[s],l=a.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],l.length===0&&delete r[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const s=t[i];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_takeBackAction(e){const t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_addInactiveBinding(e,t,i){const n=this._bindingsByRootAndName,s=this._bindings;let r=n[t];r===void 0&&(r={},n[t]=r),r[i]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,i=e.binding,n=i.rootNode.uuid,s=i.path,r=this._bindingsByRootAndName,a=r[n],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete r[n]}_lendBinding(e){const t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_takeBackBinding(e){const t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return i===void 0&&(i=new Jy(new Float32Array(2),new Float32Array(2),1,v2),i.__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){const t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,s=t[n];e.__cacheIndex=n,t[n]=e,s.__cacheIndex=i,t[i]=s}clipAction(e,t,i){const n=t||this._root,s=n.uuid;let r=typeof e=="string"?Bc.findByName(n,e):e;const a=r!==null?r.uuid:e,l=this._actionsByClip[a];let c=null;if(i===void 0&&(r!==null?i=r.blendMode:i=Cf),l!==void 0){const u=l.actionByRoot[s];if(u!==void 0&&u.blendMode===i)return u;c=l.knownActions[0],r===null&&(r=c._clip)}if(r===null)return null;const h=new iT(this,r,t,i);return this._bindAction(h,c),this._addInactiveAction(h,a,s),h}existingAction(e,t){const i=t||this._root,n=i.uuid,s=typeof e=="string"?Bc.findByName(i,e):e,r=s?s.uuid:e,a=this._actionsByClip[r];return a!==void 0&&a.actionByRoot[n]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,n=this.time+=e,s=Math.sign(e),r=this._accuIndex^=1;for(let c=0;c!==i;++c)t[c]._update(n,e,s,r);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(r);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,i=e.uuid,n=this._actionsByClip,s=n[i];if(s!==void 0){const r=s.knownActions;for(let a=0,l=r.length;a!==l;++a){const c=r[a];this._deactivateAction(c);const h=c._cacheIndex,u=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(c)}delete n[i]}}uncacheRoot(e){const t=e.uuid,i=this._actionsByClip;for(const r in i){const a=i[r].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const n=this._bindingsByRootAndName,s=n[t];if(s!==void 0)for(const r in s){const a=s[r];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const i=this.existingAction(e,t);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}let S2=class nT{constructor(e){this.value=e}clone(){return new nT(this.value.clone===void 0?this.value:this.value.clone())}},M2=0,T2=class extends ys{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:M2++}),this.name="",this.usage=Ec,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let i=0,n=t.length;i<n;i++){const s=Array.isArray(t[i])?t[i]:[t[i]];for(let r=0;r<s.length;r++)this.uniforms.push(s[r].clone())}return this}clone(){return new this.constructor().copy(this)}},Jd=class extends rh{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}};class w2{constructor(e,t,i,n,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=n,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const I0=new Ye;class A2{constructor(e,t,i=0,n=1/0){this.ray=new qo(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new Nf,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return I0.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(I0),this}intersectObject(e,t=!0,i=[]){return Pg(e,this,i,t),i.sort(D0),i}intersectObjects(e,t=!0,i=[]){for(let n=0,s=e.length;n<s;n++)Pg(e[n],this,i,t);return i.sort(D0),i}}function D0(o,e){return o.distance-e.distance}function Pg(o,e,t,i){let n=!0;if(o.layers.test(e.layers)&&o.raycast(e,t)===!1&&(n=!1),n===!0&&i===!0){const s=o.children;for(let r=0,a=s.length;r<a;r++)Pg(s[r],e,t,!0)}}class Ig{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Yt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class E2{constructor(e=1,t=0,i=0){return this.radius=e,this.theta=t,this.y=i,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}class ax{constructor(e,t,i,n){ax.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,i,n)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let i=0;i<4;i++)this.elements[i]=e[i+t];return this}set(e,t,i,n){const s=this.elements;return s[0]=e,s[2]=t,s[1]=i,s[3]=n,this}}const L0=new Z;class C2{constructor(e=new Z(1/0,1/0),t=new Z(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=L0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,L0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const F0=new R,lu=new R;class sT{constructor(e=new R,t=new R){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){F0.subVectors(e,this.start),lu.subVectors(this.end,this.start);const i=lu.dot(lu);let s=lu.dot(F0)/i;return t&&(s=Yt(s,0,1)),s}closestPointToPoint(e,t,i){const n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const U0=new R;class R2 extends Nt{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const i=new ct,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let r=0,a=1,l=32;r<l;r++,a++){const c=r/l*Math.PI*2,h=a/l*Math.PI*2;n.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}i.setAttribute("position",new Ne(n,3));const s=new Ji({fog:!1,toneMapped:!1});this.cone=new xs(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),U0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(U0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const pr=new R,cu=new Ye,im=new Ye;class N2 extends xs{constructor(e){const t=rT(e),i=new ct,n=[],s=[],r=new Ce(0,0,1),a=new Ce(0,1,0);for(let c=0;c<t.length;c++){const h=t[c];h.parent&&h.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),s.push(r.r,r.g,r.b),s.push(a.r,a.g,a.b))}i.setAttribute("position",new Ne(n,3)),i.setAttribute("color",new Ne(s,3));const l=new Ji({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,n=i.getAttribute("position");im.copy(this.root.matrixWorld).invert();for(let s=0,r=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(cu.multiplyMatrices(im,a.matrixWorld),pr.setFromMatrixPosition(cu),n.setXYZ(r,pr.x,pr.y,pr.z),cu.multiplyMatrices(im,a.parent.matrixWorld),pr.setFromMatrixPosition(cu),n.setXYZ(r+1,pr.x,pr.y,pr.z),r+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function rT(o){const e=[];o.isBone===!0&&e.push(o);for(let t=0;t<o.children.length;t++)e.push.apply(e,rT(o.children[t]));return e}class P2 extends Kt{constructor(e,t,i){const n=new Yy(t,4,2),s=new Vr({wireframe:!0,fog:!1,toneMapped:!1});super(n,s),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const I2=new R,B0=new Ce,O0=new Ce;class D2 extends Nt{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";const n=new lh(t);n.rotateY(Math.PI*.5),this.material=new Vr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=n.getAttribute("position"),r=new Float32Array(s.count*3);n.setAttribute("color",new bt(r,3)),this.add(new Kt(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");B0.copy(this.light.color),O0.copy(this.light.groundColor);for(let i=0,n=t.count;i<n;i++){const s=i<n/2?B0:O0;t.setXYZ(i,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(I2.setFromMatrixPosition(this.light.matrixWorld).negate())}}class L2 extends xs{constructor(e=10,t=10,i=4473924,n=8947848){i=new Ce(i),n=new Ce(n);const s=t/2,r=e/t,a=e/2,l=[],c=[];for(let d=0,f=0,p=-a;d<=t;d++,p+=r){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const m=d===s?i:n;m.toArray(c,f),f+=3,m.toArray(c,f),f+=3,m.toArray(c,f),f+=3,m.toArray(c,f),f+=3}const h=new ct;h.setAttribute("position",new Ne(l,3)),h.setAttribute("color",new Ne(c,3));const u=new Ji({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class F2 extends xs{constructor(e=10,t=16,i=8,n=64,s=4473924,r=8947848){s=new Ce(s),r=new Ce(r);const a=[],l=[];if(t>1)for(let u=0;u<t;u++){const d=u/t*(Math.PI*2),f=Math.sin(d)*e,p=Math.cos(d)*e;a.push(0,0,0),a.push(f,0,p);const m=u&1?s:r;l.push(m.r,m.g,m.b),l.push(m.r,m.g,m.b)}for(let u=0;u<i;u++){const d=u&1?s:r,f=e-e/i*u;for(let p=0;p<n;p++){let m=p/n*(Math.PI*2),g=Math.sin(m)*f,y=Math.cos(m)*f;a.push(g,0,y),l.push(d.r,d.g,d.b),m=(p+1)/n*(Math.PI*2),g=Math.sin(m)*f,y=Math.cos(m)*f,a.push(g,0,y),l.push(d.r,d.g,d.b)}}const c=new ct;c.setAttribute("position",new Ne(a,3)),c.setAttribute("color",new Ne(l,3));const h=new Ji({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const z0=new R,hu=new R,k0=new R;class U2 extends Nt{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",t===void 0&&(t=1);let n=new ct;n.setAttribute("position",new Ne([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Ji({fog:!1,toneMapped:!1});this.lightPlane=new Br(n,s),this.add(this.lightPlane),n=new ct,n.setAttribute("position",new Ne([0,0,0,0,0,1],3)),this.targetLine=new Br(n,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),z0.setFromMatrixPosition(this.light.matrixWorld),hu.setFromMatrixPosition(this.light.target.matrixWorld),k0.subVectors(hu,z0),this.lightPlane.lookAt(hu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(hu),this.targetLine.scale.z=k0.length()}}const uu=new R,qt=new Pf;class B2 extends xs{constructor(e){const t=new ct,i=new Ji({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],s=[],r={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,m){l(p),l(m)}function l(p){n.push(0,0,0),s.push(0,0,0),r[p]===void 0&&(r[p]=[]),r[p].push(n.length/3-1)}t.setAttribute("position",new Ne(n,3)),t.setAttribute("color",new Ne(s,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=r,this.update();const c=new Ce(16755200),h=new Ce(16711680),u=new Ce(43775),d=new Ce(16777215),f=new Ce(3355443);this.setColors(c,h,u,d,f)}setColors(e,t,i,n,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,i.r,i.g,i.b),a.setXYZ(33,i.r,i.g,i.b),a.setXYZ(34,i.r,i.g,i.b),a.setXYZ(35,i.r,i.g,i.b),a.setXYZ(36,i.r,i.g,i.b),a.setXYZ(37,i.r,i.g,i.b),a.setXYZ(38,n.r,n.g,n.b),a.setXYZ(39,n.r,n.g,n.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,i=1,n=1;qt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Jt("c",t,e,qt,0,0,-1),Jt("t",t,e,qt,0,0,1),Jt("n1",t,e,qt,-i,-n,-1),Jt("n2",t,e,qt,i,-n,-1),Jt("n3",t,e,qt,-i,n,-1),Jt("n4",t,e,qt,i,n,-1),Jt("f1",t,e,qt,-i,-n,1),Jt("f2",t,e,qt,i,-n,1),Jt("f3",t,e,qt,-i,n,1),Jt("f4",t,e,qt,i,n,1),Jt("u1",t,e,qt,i*.7,n*1.1,-1),Jt("u2",t,e,qt,-i*.7,n*1.1,-1),Jt("u3",t,e,qt,0,n*2,-1),Jt("cf1",t,e,qt,-i,0,1),Jt("cf2",t,e,qt,i,0,1),Jt("cf3",t,e,qt,0,-n,1),Jt("cf4",t,e,qt,0,n,1),Jt("cn1",t,e,qt,-i,0,-1),Jt("cn2",t,e,qt,i,0,-1),Jt("cn3",t,e,qt,0,-n,-1),Jt("cn4",t,e,qt,0,n,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Jt(o,e,t,i,n,s,r){uu.set(n,s,r).unproject(i);const a=e[o];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,h=a.length;c<h;c++)l.setXYZ(a[c],uu.x,uu.y,uu.z)}}const du=new mi;class O2 extends xs{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(8*3),s=new ct;s.setIndex(new bt(i,1)),s.setAttribute("position",new bt(n,3)),super(s,new Ji({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&du.setFromObject(this.object),du.isEmpty())return;const t=du.min,i=du.max,n=this.geometry.attributes.position,s=n.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=t.x,s[4]=i.y,s[5]=i.z,s[6]=t.x,s[7]=t.y,s[8]=i.z,s[9]=i.x,s[10]=t.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=t.z,s[15]=t.x,s[16]=i.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=i.x,s[22]=t.y,s[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class z2 extends xs{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new ct;s.setIndex(new bt(i,1)),s.setAttribute("position",new Ne(n,3)),super(s,new Ji({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class k2 extends Br{constructor(e,t=1,i=16776960){const n=i,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],r=new ct;r.setAttribute("position",new Ne(s,3)),r.computeBoundingSphere(),super(r,new Ji({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new ct;l.setAttribute("position",new Ne(a,3)),l.computeBoundingSphere(),this.add(new Kt(l,new Vr({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const G0=new R;let fu,nm;class G2 extends Nt{constructor(e=new R(0,0,1),t=new R(0,0,0),i=1,n=16776960,s=i*.2,r=s*.2){super(),this.type="ArrowHelper",fu===void 0&&(fu=new ct,fu.setAttribute("position",new Ne([0,0,0,0,1,0],3)),nm=new _l(0,.5,1,5,1),nm.translate(0,-.5,0)),this.position.copy(t),this.line=new Br(fu,new Ji({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Kt(nm,new Vr({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,r)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{G0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(G0,t)}}setLength(e,t=e*.2,i=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class V2 extends xs{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],n=new ct;n.setAttribute("position",new Ne(t,3)),n.setAttribute("color",new Ne(i,3));const s=new Ji({vertexColors:!0,toneMapped:!1});super(n,s),this.type="AxesHelper"}setColors(e,t,i){const n=new Ce,s=this.geometry.attributes.color.array;return n.set(e),n.toArray(s,0),n.toArray(s,3),n.set(t),n.toArray(s,6),n.toArray(s,9),n.set(i),n.toArray(s,12),n.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class oT{constructor(){this.type="ShapePath",this.color=new Ce,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Pc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,s,r){return this.currentPath.bezierCurveTo(e,t,i,n,s,r),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(y){const x=[];for(let _=0,v=y.length;_<v;_++){const A=y[_],T=new Po;T.curves=A.curves,x.push(T)}return x}function i(y,x){const _=x.length;let v=!1;for(let A=_-1,T=0;T<_;A=T++){let M=x[A],w=x[T],S=w.x-M.x,b=w.y-M.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(M=x[T],S=-S,w=x[A],b=-b),y.y<M.y||y.y>w.y)continue;if(y.y===M.y){if(y.x===M.x)return!0}else{const N=b*(y.x-M.x)-S*(y.y-M.y);if(N===0)return!0;if(N<0)continue;v=!v}}else{if(y.y!==M.y)continue;if(w.x<=y.x&&y.x<=M.x||M.x<=y.x&&y.x<=w.x)return!0}}return v}const n=ds.isClockWise,s=this.subPaths;if(s.length===0)return[];let r,a,l;const c=[];if(s.length===1)return a=s[0],l=new Po,l.curves=a.curves,c.push(l),c;let h=!n(s[0].getPoints());h=e?!h:h;const u=[],d=[];let f=[],p=0,m;d[p]=void 0,f[p]=[];for(let y=0,x=s.length;y<x;y++)a=s[y],m=a.getPoints(),r=n(m),r=e?!r:r,r?(!h&&d[p]&&p++,d[p]={s:new Po,p:m},d[p].s.curves=a.curves,h&&p++,f[p]=[]):f[p].push({h:a,p:m[0]});if(!d[0])return t(s);if(d.length>1){let y=!1,x=0;for(let _=0,v=d.length;_<v;_++)u[_]=[];for(let _=0,v=d.length;_<v;_++){const A=f[_];for(let T=0;T<A.length;T++){const M=A[T];let w=!0;for(let S=0;S<d.length;S++)i(M.p,d[S].p)&&(_!==S&&x++,w?(w=!1,u[S].push(M)):y=!0);w&&u[_].push(M)}}x>0&&y===!1&&(f=u)}let g;for(let y=0,x=d.length;y<x;y++){l=d[y].s,c.push(l),g=f[y];for(let _=0,v=g.length;_<v;_++)l.holes.push(g[_].h)}return c}}class jf extends ys{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}class H2 extends Dn{constructor(e=1,t=1,i=1,n={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(e,t,{...n,count:i}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:vf}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=vf);const iH=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:SS,AddEquation:Ar,AddOperation:xS,AdditiveAnimationBlendMode:Ry,AdditiveBlending:mg,AgXToneMapping:TS,AlphaFormat:My,AlwaysCompare:GS,AlwaysDepth:gd,AlwaysStencilFunc:vg,AmbientLight:ZM,AnimationAction:iT,AnimationClip:Bc,AnimationLoader:XI,AnimationMixer:b2,AnimationObjectGroup:_2,AnimationUtils:VI,ArcCurve:vM,ArrayCamera:cM,ArrowHelper:G2,AttachedBindMode:xg,Audio:eT,AudioAnalyser:c2,AudioContext:nx,AudioListener:o2,AudioLoader:n2,AxesHelper:V2,BackSide:Yi,BasicDepthPacking:IS,BasicShadowMap:HA,BatchedMesh:yM,Bone:ky,BooleanKeyframeTrack:Yo,Box2:C2,Box3:mi,Box3Helper:z2,BoxGeometry:eh,BoxHelper:O2,BufferAttribute:bt,BufferGeometry:ct,BufferGeometryLoader:QM,ByteType:vy,Cache:Vs,Camera:Pf,CameraHelper:B2,CanvasTexture:dI,CapsuleGeometry:Of,CatmullRomCurve3:bM,CineonToneMapping:bS,CircleGeometry:zf,ClampToEdgeWrapping:Nn,Clock:sx,Color:Ce,ColorKeyframeTrack:Qy,ColorManagement:yt,CompressedArrayTexture:hI,CompressedCubeTexture:uI,CompressedTexture:Uf,CompressedTextureLoader:qI,ConeGeometry:kf,ConstantAlphaFactor:mS,ConstantColorFactor:fS,Controls:jf,CubeCamera:tM,CubeReflectionMapping:Js,CubeRefractionMapping:Fr,CubeTexture:ih,CubeTextureLoader:YI,CubeUVReflectionMapping:gl,CubicBezierCurve:Hy,CubicBezierCurve3:SM,CubicInterpolant:GM,CullFaceBack:pg,CullFaceFront:jb,CullFaceFrontBack:VA,CullFaceNone:Kb,Curve:Jn,CurvePath:TM,CustomBlending:Qb,CustomToneMapping:MS,CylinderGeometry:_l,Cylindrical:E2,Data3DTexture:Iy,DataArrayTexture:Rf,DataTexture:us,DataTextureLoader:ZI,DataUtils:Q1,DecrementStencilOp:e1,DecrementWrapStencilOp:i1,DefaultLoadingManager:WM,DepthFormat:Ro,DepthStencilFormat:Bo,DepthTexture:Uy,DetachedBindMode:AS,DirectionalLight:YM,DirectionalLightHelper:U2,DiscreteInterpolant:VM,DodecahedronGeometry:Gf,DoubleSide:ss,DstAlphaFactor:lS,DstColorFactor:hS,DynamicCopyUsage:y1,DynamicDrawUsage:u1,DynamicReadUsage:p1,EdgesGeometry:wM,EllipseCurve:Bf,EqualCompare:BS,EqualDepth:xd,EqualStencilFunc:o1,EquirectangularReflectionMapping:bc,EquirectangularRefractionMapping:Sc,Euler:Yn,EventDispatcher:ys,ExtrudeGeometry:ah,FileLoader:er,Float16BufferAttribute:rE,Float32BufferAttribute:Ne,FloatType:rn,Fog:Lf,FogExp2:Df,FramebufferTexture:cI,FrontSide:js,Frustum:nh,GLBufferAttribute:w2,GLSL1:_1,GLSL3:bg,GreaterCompare:OS,GreaterDepth:vd,GreaterEqualCompare:kS,GreaterEqualDepth:_d,GreaterEqualStencilFunc:h1,GreaterStencilFunc:l1,GridHelper:L2,Group:Ha,HalfFloatType:$o,HemisphereLight:$M,HemisphereLightHelper:D2,IcosahedronGeometry:Hf,ImageBitmapLoader:i2,ImageLoader:Oc,ImageUtils:XS,IncrementStencilOp:QA,IncrementWrapStencilOp:t1,InstancedBufferAttribute:Ur,InstancedBufferGeometry:ix,InstancedInterleavedBuffer:Jd,InstancedMesh:gM,Int16BufferAttribute:nE,Int32BufferAttribute:sE,Int8BufferAttribute:eE,IntType:Sf,InterleavedBuffer:rh,InterleavedBufferAttribute:Pn,Interpolant:ch,InterpolateDiscrete:wc,InterpolateLinear:Yd,InterpolateSmooth:td,InvertStencilOp:n1,KeepStencilOp:fo,KeyframeTrack:Qn,LOD:pM,LatheGeometry:oh,Layers:Nf,LessCompare:US,LessDepth:yd,LessEqualCompare:Ny,LessEqualDepth:Fo,LessEqualStencilFunc:a1,LessStencilFunc:r1,Light:Wr,LightProbe:JM,Line:Br,Line3:sT,LineBasicMaterial:Ji,LineCurve:Wy,LineCurve3:MM,LineDashedMaterial:OM,LineLoop:xM,LineSegments:xs,LinearFilter:ci,LinearInterpolant:Jy,LinearMipMapLinearFilter:qA,LinearMipMapNearestFilter:XA,LinearMipmapLinearFilter:os,LinearMipmapNearestFilter:rc,LinearSRGBColorSpace:Xo,LinearToneMapping:_S,LinearTransfer:Qc,Loader:un,LoaderUtils:Ng,LoadingManager:ex,LoopOnce:ES,LoopPingPong:RS,LoopRepeat:CS,LuminanceAlphaFormat:Ay,LuminanceFormat:wy,MOUSE:Mn,Material:zi,MaterialLoader:Kf,MathUtils:Rc,Matrix2:ax,Matrix3:lt,Matrix4:Ye,MaxEquation:nS,Mesh:Kt,MeshBasicMaterial:Vr,MeshDepthMaterial:By,MeshDistanceMaterial:Oy,MeshLambertMaterial:UM,MeshMatcapMaterial:BM,MeshNormalMaterial:FM,MeshPhongMaterial:DM,MeshPhysicalMaterial:IM,MeshStandardMaterial:Ky,MeshToonMaterial:LM,MinEquation:iS,MirroredRepeatWrapping:Tc,MixOperation:yS,MultiplyBlending:yg,MultiplyOperation:jc,NearestFilter:Ci,NearestMipMapLinearFilter:$A,NearestMipMapNearestFilter:WA,NearestMipmapLinearFilter:ka,NearestMipmapNearestFilter:_y,NeutralToneMapping:wS,NeverCompare:FS,NeverDepth:md,NeverStencilFunc:s1,NoBlending:hs,NoColorSpace:Os,NoToneMapping:Hs,NormalAnimationBlendMode:Cf,NormalBlending:Co,NotEqualCompare:zS,NotEqualDepth:bd,NotEqualStencilFunc:c1,NumberKeyframeTrack:Fc,Object3D:Nt,ObjectLoader:e2,ObjectSpaceNormalMap:LS,OctahedronGeometry:lh,OneFactor:rS,OneMinusConstantAlphaFactor:gS,OneMinusConstantColorFactor:pS,OneMinusDstAlphaFactor:cS,OneMinusDstColorFactor:uS,OneMinusSrcAlphaFactor:pd,OneMinusSrcColorFactor:aS,OrthographicCamera:sh,PCFShadowMap:xy,PCFSoftShadowMap:Jb,PMREMGenerator:Mg,Path:Pc,PerspectiveCamera:wi,Plane:Fs,PlaneGeometry:yl,PlaneHelper:k2,PointLight:qM,PointLightHelper:P2,Points:_M,PointsMaterial:Gy,PolarGridHelper:F2,PolyhedronGeometry:Hr,PositionalAudio:l2,PropertyBinding:vt,PropertyMixer:tT,QuadraticBezierCurve:$y,QuadraticBezierCurve3:Xy,Quaternion:hi,QuaternionKeyframeTrack:hh,QuaternionLinearInterpolant:HM,RED_GREEN_RGTC2_Format:Xd,RED_RGTC1_Format:Cy,REVISION:vf,RGBADepthPacking:DS,RGBAFormat:qi,RGBAIntegerFormat:Ef,RGBA_ASTC_10x10_Format:kd,RGBA_ASTC_10x5_Format:Bd,RGBA_ASTC_10x6_Format:Od,RGBA_ASTC_10x8_Format:zd,RGBA_ASTC_12x10_Format:Gd,RGBA_ASTC_12x12_Format:Vd,RGBA_ASTC_4x4_Format:Rd,RGBA_ASTC_5x4_Format:Nd,RGBA_ASTC_5x5_Format:Pd,RGBA_ASTC_6x5_Format:Id,RGBA_ASTC_6x6_Format:Dd,RGBA_ASTC_8x5_Format:Ld,RGBA_ASTC_8x6_Format:Fd,RGBA_ASTC_8x8_Format:Ud,RGBA_BPTC_Format:hc,RGBA_ETC2_EAC_Format:Cd,RGBA_PVRTC_2BPPV1_Format:wd,RGBA_PVRTC_4BPPV1_Format:Td,RGBA_S3TC_DXT1_Format:ac,RGBA_S3TC_DXT3_Format:lc,RGBA_S3TC_DXT5_Format:cc,RGBDepthPacking:ZA,RGBFormat:Ty,RGBIntegerFormat:YA,RGB_BPTC_SIGNED_Format:Hd,RGB_BPTC_UNSIGNED_Format:Wd,RGB_ETC1_Format:Ad,RGB_ETC2_Format:Ed,RGB_PVRTC_2BPPV1_Format:Md,RGB_PVRTC_4BPPV1_Format:Sd,RGB_S3TC_DXT1_Format:oc,RGDepthPacking:KA,RGFormat:Ey,RGIntegerFormat:Af,RawShaderMaterial:PM,Ray:qo,Raycaster:A2,RectAreaLight:KM,RedFormat:wf,RedIntegerFormat:Jc,ReinhardToneMapping:vS,RenderTarget:YS,RepeatWrapping:Mc,ReplaceStencilOp:JA,ReverseSubtractEquation:tS,RingGeometry:Wf,SIGNED_RED_GREEN_RGTC2_Format:qd,SIGNED_RED_RGTC1_Format:$d,SRGBColorSpace:sn,SRGBTransfer:Dt,Scene:hM,ShaderChunk:at,ShaderLib:Hi,ShaderMaterial:cn,ShadowMaterial:NM,Shape:Po,ShapeGeometry:$f,ShapePath:oT,ShapeUtils:ds,ShortType:by,Skeleton:Ff,SkeletonHelper:N2,SkinnedMesh:mM,Source:Ao,Sphere:gi,SphereGeometry:Yy,Spherical:Ig,SphericalHarmonics3:jM,SplineCurve:qy,SpotLight:XM,SpotLightHelper:R2,Sprite:fM,SpriteMaterial:zy,SrcAlphaFactor:fd,SrcAlphaSaturateFactor:dS,SrcColorFactor:oS,StaticCopyUsage:g1,StaticDrawUsage:Ec,StaticReadUsage:f1,StereoCamera:s2,StreamCopyUsage:x1,StreamDrawUsage:d1,StreamReadUsage:m1,StringKeyframeTrack:Zo,SubtractEquation:eS,SubtractiveBlending:gg,TOUCH:Mo,TangentSpaceNormalMap:Gr,TetrahedronGeometry:Xf,Texture:xi,TextureLoader:KI,TextureUtils:VP,TorusGeometry:qf,TorusKnotGeometry:Yf,Triangle:Er,TriangleFanDrawMode:_g,TriangleStripDrawMode:PS,TrianglesDrawMode:NS,TubeGeometry:Zf,UVMapping:bf,Uint16BufferAttribute:Dy,Uint32BufferAttribute:Ly,Uint8BufferAttribute:tE,Uint8ClampedBufferAttribute:iE,Uniform:S2,UniformsGroup:T2,UniformsLib:_e,UniformsUtils:th,UnsignedByteType:fs,UnsignedInt248Type:Uo,UnsignedInt5999Type:Sy,UnsignedIntType:Qs,UnsignedShort4444Type:Mf,UnsignedShort5551Type:Tf,UnsignedShortType:ol,VSMShadowMap:ns,Vector2:Z,Vector3:R,Vector4:gt,VectorKeyframeTrack:Uc,VideoTexture:lI,WebGL3DRenderTarget:H1,WebGLArrayRenderTarget:V1,WebGLCoordinateSystem:as,WebGLCubeRenderTarget:iM,WebGLMultipleRenderTargets:H2,WebGLRenderTarget:Dn,WebGLRenderer:JP,WebGLUtils:lM,WebGPUCoordinateSystem:Cc,WireframeGeometry:Zy,WrapAroundEnding:Ac,ZeroCurvatureEnding:To,ZeroFactor:sS,ZeroSlopeEnding:wo,ZeroStencilOp:jA,createCanvasElement:$S},Symbol.toStringTag,{value:"Module"}));class nH extends Nt{constructor(e=document.createElement("div")){super(),this.isCSS2DObject=!0,this.element=e,this.element.style.position="absolute",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.center=new Z(.5,.5),this.addEventListener("removed",function(){this.traverse(function(t){t.element instanceof t.element.ownerDocument.defaultView.Element&&t.element.parentNode!==null&&t.element.remove()})})}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this.center=e.center,this}}const _a=new R,V0=new Ye,H0=new Ye,W0=new R,$0=new R;class sH{constructor(e={}){const t=this;let i,n,s,r;const a={objects:new WeakMap},l=e.element!==void 0?e.element:document.createElement("div");l.style.overflow="hidden",this.domElement=l,this.getSize=function(){return{width:i,height:n}},this.render=function(p,m){p.matrixWorldAutoUpdate===!0&&p.updateMatrixWorld(),m.parent===null&&m.matrixWorldAutoUpdate===!0&&m.updateMatrixWorld(),V0.copy(m.matrixWorldInverse),H0.multiplyMatrices(m.projectionMatrix,V0),h(p,p,m),f(p)},this.setSize=function(p,m){i=p,n=m,s=i/2,r=n/2,l.style.width=p+"px",l.style.height=m+"px"};function c(p){p.isCSS2DObject&&(p.element.style.display="none");for(let m=0,g=p.children.length;m<g;m++)c(p.children[m])}function h(p,m,g){if(p.visible===!1){c(p);return}if(p.isCSS2DObject){_a.setFromMatrixPosition(p.matrixWorld),_a.applyMatrix4(H0);const y=_a.z>=-1&&_a.z<=1&&p.layers.test(g.layers)===!0,x=p.element;x.style.display=y===!0?"":"none",y===!0&&(p.onBeforeRender(t,m,g),x.style.transform="translate("+-100*p.center.x+"%,"+-100*p.center.y+"%)translate("+(_a.x*s+s)+"px,"+(-_a.y*r+r)+"px)",x.parentNode!==l&&l.appendChild(x),p.onAfterRender(t,m,g));const _={distanceToCameraSquared:u(g,p)};a.objects.set(p,_)}for(let y=0,x=p.children.length;y<x;y++)h(p.children[y],m,g)}function u(p,m){return W0.setFromMatrixPosition(p.matrixWorld),$0.setFromMatrixPosition(m.matrixWorld),W0.distanceToSquared($0)}function d(p){const m=[];return p.traverseVisible(function(g){g.isCSS2DObject&&m.push(g)}),m}function f(p){const m=d(p).sort(function(y,x){if(y.renderOrder!==x.renderOrder)return x.renderOrder-y.renderOrder;const _=a.objects.get(y).distanceToCameraSquared,v=a.objects.get(x).distanceToCameraSquared;return _-v}),g=m.length;for(let y=0,x=m.length;y<x;y++)m[y].element.style.zIndex=g-y}}}function W2(o,e,t=!0){if(!e||!e.isReady)throw new Error("BufferGeometryUtils: Initialized MikkTSpace library required.");if(!o.hasAttribute("position")||!o.hasAttribute("normal")||!o.hasAttribute("uv"))throw new Error('BufferGeometryUtils: Tangents require "position", "normal", and "uv" attributes.');function i(r){if(r.normalized||r.isInterleavedBufferAttribute){const a=new Float32Array(r.count*r.itemSize);for(let l=0,c=0;l<r.count;l++)a[c++]=r.getX(l),a[c++]=r.getY(l),r.itemSize>2&&(a[c++]=r.getZ(l));return a}return r.array instanceof Float32Array?r.array:new Float32Array(r.array)}const n=o.index?o.toNonIndexed():o,s=e.generateTangents(i(n.attributes.position),i(n.attributes.normal),i(n.attributes.uv));if(t)for(let r=3;r<s.length;r+=4)s[r]*=-1;return n.setAttribute("tangent",new bt(s,4)),o!==n&&o.copy(n),o}function $2(o,e=!1){const t=o[0].index!==null,i=new Set(Object.keys(o[0].attributes)),n=new Set(Object.keys(o[0].morphAttributes)),s={},r={},a=o[0].morphTargetsRelative,l=new ct;let c=0;for(let h=0;h<o.length;++h){const u=o[h];let d=0;if(t!==(u.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const f in u.attributes){if(!i.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+'. All geometries must have compatible attributes; make sure "'+f+'" attribute exists among all geometries, or in none of them.'),null;s[f]===void 0&&(s[f]=[]),s[f].push(u.attributes[f]),d++}if(d!==i.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". Make sure all geometries have the same number of attributes."),null;if(a!==u.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const f in u.morphAttributes){if(!n.has(f))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+".  .morphAttributes must be consistent throughout all geometries."),null;r[f]===void 0&&(r[f]=[]),r[f].push(u.morphAttributes[f])}if(e){let f;if(t)f=u.index.count;else if(u.attributes.position!==void 0)f=u.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+h+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,f,h),c+=f}}if(t){let h=0;const u=[];for(let d=0;d<o.length;++d){const f=o[d].index;for(let p=0;p<f.count;++p)u.push(f.getX(p)+h);h+=o[d].attributes.position.count}l.setIndex(u)}for(const h in s){const u=Dg(s[h]);if(!u)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" attribute."),null;l.setAttribute(h,u)}for(const h in r){const u=r[h][0].length;if(u===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[h]=[];for(let d=0;d<u;++d){const f=[];for(let m=0;m<r[h].length;++m)f.push(r[h][m][d]);const p=Dg(f);if(!p)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+h+" morphAttribute."),null;l.morphAttributes[h].push(p)}}return l}function Dg(o){let e,t,i,n=-1,s=0;for(let c=0;c<o.length;++c){const h=o[c];if(e===void 0&&(e=h.array.constructor),e!==h.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(t===void 0&&(t=h.itemSize),t!==h.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(i===void 0&&(i=h.normalized),i!==h.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(n===-1&&(n=h.gpuType),n!==h.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;s+=h.count*t}const r=new e(s),a=new bt(r,t,i);let l=0;for(let c=0;c<o.length;++c){const h=o[c];if(h.isInterleavedBufferAttribute){const u=l/t;for(let d=0,f=h.count;d<f;d++)for(let p=0;p<t;p++){const m=h.getComponent(d,p);a.setComponent(d+u,p,m)}}else r.set(h.array,l);l+=h.count*t}return n!==void 0&&(a.gpuType=n),a}function X2(o){return o.isInstancedInterleavedBufferAttribute||o.isInterleavedBufferAttribute?Qd(o):o.isInstancedBufferAttribute?new Ur().copy(o):new bt().copy(o)}function q2(o){let e,t=0,i=0;for(let c=0,h=o.length;c<h;++c){const u=o[c];if(e===void 0&&(e=u.array.constructor),e!==u.array.constructor)return console.error("AttributeBuffers of different types cannot be interleaved"),null;t+=u.array.length,i+=u.itemSize}const n=new rh(new e(t),i);let s=0;const r=[],a=["getX","getY","getZ","getW"],l=["setX","setY","setZ","setW"];for(let c=0,h=o.length;c<h;c++){const u=o[c],d=u.itemSize,f=u.count,p=new Pn(n,d,s,u.normalized);r.push(p),s+=d;for(let m=0;m<f;m++)for(let g=0;g<d;g++)p[l[g]](m,u[a[g]](m))}return r}function Qd(o){const e=o.data.array.constructor,t=o.count,i=o.itemSize,n=o.normalized,s=new e(t*i);let r;o.isInstancedInterleavedBufferAttribute?r=new Ur(s,i,n,o.meshPerAttribute):r=new bt(s,i,n);for(let a=0;a<t;a++)r.setX(a,o.getX(a)),i>=2&&r.setY(a,o.getY(a)),i>=3&&r.setZ(a,o.getZ(a)),i>=4&&r.setW(a,o.getW(a));return r}function Y2(o){const e=o.attributes,t=o.morphTargets,i=new Map;for(const n in e){const s=e[n];s.isInterleavedBufferAttribute&&(i.has(s)||i.set(s,Qd(s)),e[n]=i.get(s))}for(const n in t){const s=t[n];s.isInterleavedBufferAttribute&&(i.has(s)||i.set(s,Qd(s)),t[n]=i.get(s))}}function Z2(o){let e=0;for(const i in o.attributes){const n=o.getAttribute(i);e+=n.count*n.itemSize*n.array.BYTES_PER_ELEMENT}const t=o.getIndex();return e+=t?t.count*t.itemSize*t.array.BYTES_PER_ELEMENT:0,e}function K2(o,e=1e-4){e=Math.max(e,Number.EPSILON);const t={},i=o.getIndex(),n=o.getAttribute("position"),s=i?i.count:n.count;let r=0;const a=Object.keys(o.attributes),l={},c={},h=[],u=["getX","getY","getZ","getW"],d=["setX","setY","setZ","setW"];for(let x=0,_=a.length;x<_;x++){const v=a[x],A=o.attributes[v];l[v]=new A.constructor(new A.array.constructor(A.count*A.itemSize),A.itemSize,A.normalized);const T=o.morphAttributes[v];T&&(c[v]||(c[v]=[]),T.forEach((M,w)=>{const S=new M.array.constructor(M.count*M.itemSize);c[v][w]=new M.constructor(S,M.itemSize,M.normalized)}))}const f=e*.5,p=Math.log10(1/e),m=Math.pow(10,p),g=f*m;for(let x=0;x<s;x++){const _=i?i.getX(x):x;let v="";for(let A=0,T=a.length;A<T;A++){const M=a[A],w=o.getAttribute(M),S=w.itemSize;for(let b=0;b<S;b++)v+=`${~~(w[u[b]](_)*m+g)},`}if(v in t)h.push(t[v]);else{for(let A=0,T=a.length;A<T;A++){const M=a[A],w=o.getAttribute(M),S=o.morphAttributes[M],b=w.itemSize,N=l[M],z=c[M];for(let L=0;L<b;L++){const k=u[L],q=d[L];if(N[q](r,w[k](_)),S)for(let H=0,ae=S.length;H<ae;H++)z[H][q](r,S[H][k](_))}}t[v]=r,h.push(r),r++}}const y=o.clone();for(const x in o.attributes){const _=l[x];if(y.setAttribute(x,new _.constructor(_.array.slice(0,r*_.itemSize),_.itemSize,_.normalized)),x in c)for(let v=0;v<c[x].length;v++){const A=c[x][v];y.morphAttributes[x][v]=new A.constructor(A.array.slice(0,r*A.itemSize),A.itemSize,A.normalized)}}return y.setIndex(h),y}function j2(o,e){if(e===NS)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),o;if(e===_g||e===PS){let t=o.getIndex();if(t===null){const r=[],a=o.getAttribute("position");if(a!==void 0){for(let l=0;l<a.count;l++)r.push(l);o.setIndex(r),t=o.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),o}const i=t.count-2,n=[];if(e===_g)for(let r=1;r<=i;r++)n.push(t.getX(0)),n.push(t.getX(r)),n.push(t.getX(r+1));else for(let r=0;r<i;r++)r%2===0?(n.push(t.getX(r)),n.push(t.getX(r+1)),n.push(t.getX(r+2))):(n.push(t.getX(r+2)),n.push(t.getX(r+1)),n.push(t.getX(r)));n.length/3!==i&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const s=o.clone();return s.setIndex(n),s.clearGroups(),s}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),o}function J2(o){const e=new R,t=new R,i=new R,n=new R,s=new R,r=new R,a=new R,l=new R,c=new R;function h(le,ue,xe,$e,tt,J,ce,we){e.fromBufferAttribute(ue,tt),t.fromBufferAttribute(ue,J),i.fromBufferAttribute(ue,ce);const ye=le.morphTargetInfluences;if(xe&&ye){a.set(0,0,0),l.set(0,0,0),c.set(0,0,0);for(let ke=0,Ze=xe.length;ke<Ze;ke++){const He=ye[ke],ft=xe[ke];He!==0&&(n.fromBufferAttribute(ft,tt),s.fromBufferAttribute(ft,J),r.fromBufferAttribute(ft,ce),$e?(a.addScaledVector(n,He),l.addScaledVector(s,He),c.addScaledVector(r,He)):(a.addScaledVector(n.sub(e),He),l.addScaledVector(s.sub(t),He),c.addScaledVector(r.sub(i),He)))}e.add(a),t.add(l),i.add(c)}le.isSkinnedMesh&&(le.applyBoneTransform(tt,e),le.applyBoneTransform(J,t),le.applyBoneTransform(ce,i)),we[tt*3+0]=e.x,we[tt*3+1]=e.y,we[tt*3+2]=e.z,we[J*3+0]=t.x,we[J*3+1]=t.y,we[J*3+2]=t.z,we[ce*3+0]=i.x,we[ce*3+1]=i.y,we[ce*3+2]=i.z}const u=o.geometry,d=o.material;let f,p,m;const g=u.index,y=u.attributes.position,x=u.morphAttributes.position,_=u.morphTargetsRelative,v=u.attributes.normal,A=u.morphAttributes.position,T=u.groups,M=u.drawRange;let w,S,b,N,z,L,k;const q=new Float32Array(y.count*y.itemSize),H=new Float32Array(v.count*v.itemSize);if(g!==null)if(Array.isArray(d))for(w=0,b=T.length;w<b;w++)for(z=T[w],L=Math.max(z.start,M.start),k=Math.min(z.start+z.count,M.start+M.count),S=L,N=k;S<N;S+=3)f=g.getX(S),p=g.getX(S+1),m=g.getX(S+2),h(o,y,x,_,f,p,m,q),h(o,v,A,_,f,p,m,H);else for(L=Math.max(0,M.start),k=Math.min(g.count,M.start+M.count),w=L,b=k;w<b;w+=3)f=g.getX(w),p=g.getX(w+1),m=g.getX(w+2),h(o,y,x,_,f,p,m,q),h(o,v,A,_,f,p,m,H);else if(Array.isArray(d))for(w=0,b=T.length;w<b;w++)for(z=T[w],L=Math.max(z.start,M.start),k=Math.min(z.start+z.count,M.start+M.count),S=L,N=k;S<N;S+=3)f=S,p=S+1,m=S+2,h(o,y,x,_,f,p,m,q),h(o,v,A,_,f,p,m,H);else for(L=Math.max(0,M.start),k=Math.min(y.count,M.start+M.count),w=L,b=k;w<b;w+=3)f=w,p=w+1,m=w+2,h(o,y,x,_,f,p,m,q),h(o,v,A,_,f,p,m,H);const ae=new Ne(q,3),X=new Ne(H,3);return{positionAttribute:y,normalAttribute:v,morphedPositionAttribute:ae,morphedNormalAttribute:X}}function Q2(o){if(o.groups.length===0)return console.warn("THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge."),o;let e=o.groups;if(e=e.sort((r,a)=>r.materialIndex!==a.materialIndex?r.materialIndex-a.materialIndex:r.start-a.start),o.getIndex()===null){const r=o.getAttribute("position"),a=[];for(let l=0;l<r.count;l+=3)a.push(l,l+1,l+2);o.setIndex(a)}const t=o.getIndex(),i=[];for(let r=0;r<e.length;r++){const a=e[r],l=a.start,c=l+a.count;for(let h=l;h<c;h++)i.push(t.getX(h))}o.dispose(),o.setIndex(i);let n=0;for(let r=0;r<e.length;r++){const a=e[r];a.start=n,n+=a.count}let s=e[0];o.groups=[s];for(let r=1;r<e.length;r++){const a=e[r];s.materialIndex===a.materialIndex?s.count+=a.count:(s=a,o.groups.push(s))}return o}function eD(o,e=Math.PI/3){const t=Math.cos(e),i=(1+1e-10)*100,n=[new R,new R,new R],s=new R,r=new R,a=new R,l=new R;function c(m){const g=~~(m.x*i),y=~~(m.y*i),x=~~(m.z*i);return`${g},${y},${x}`}const h=o.index?o.toNonIndexed():o,u=h.attributes.position,d={};for(let m=0,g=u.count/3;m<g;m++){const y=3*m,x=n[0].fromBufferAttribute(u,y+0),_=n[1].fromBufferAttribute(u,y+1),v=n[2].fromBufferAttribute(u,y+2);s.subVectors(v,_),r.subVectors(x,_);const A=new R().crossVectors(s,r).normalize();for(let T=0;T<3;T++){const M=n[T],w=c(M);w in d||(d[w]=[]),d[w].push(A)}}const f=new Float32Array(u.count*3),p=new bt(f,3,!1);for(let m=0,g=u.count/3;m<g;m++){const y=3*m,x=n[0].fromBufferAttribute(u,y+0),_=n[1].fromBufferAttribute(u,y+1),v=n[2].fromBufferAttribute(u,y+2);s.subVectors(v,_),r.subVectors(x,_),a.crossVectors(s,r).normalize();for(let A=0;A<3;A++){const T=n[A],M=c(T),w=d[M];l.set(0,0,0);for(let S=0,b=w.length;S<b;S++){const N=w[S];a.dot(N)>t&&l.add(N)}l.normalize(),p.setXYZ(y+A,l.x,l.y,l.z)}}return h.setAttribute("normal",p),h}const rH=Object.freeze(Object.defineProperty({__proto__:null,computeMikkTSpaceTangents:W2,computeMorphedAttributes:J2,deepCloneAttribute:X2,deinterleaveAttribute:Qd,deinterleaveGeometry:Y2,estimateBytesUsed:Z2,interleaveAttributes:q2,mergeAttributes:Dg,mergeGeometries:$2,mergeGroups:Q2,mergeVertices:K2,toCreasedNormals:eD,toTrianglesDrawMode:j2},Symbol.toStringTag,{value:"Module"})),X0=new mi,pu=new R;class aT extends ix{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const e=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],t=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],i=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(i),this.setAttribute("position",new Ne(e,3)),this.setAttribute("uv",new Ne(t,2))}applyMatrix4(e){const t=this.attributes.instanceStart,i=this.attributes.instanceEnd;return t!==void 0&&(t.applyMatrix4(e),i.applyMatrix4(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Jd(t,6,1);return this.setAttribute("instanceStart",new Pn(i,3,0)),this.setAttribute("instanceEnd",new Pn(i,3,3)),this.instanceCount=this.attributes.instanceStart.count,this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const i=new Jd(t,6,1);return this.setAttribute("instanceColorStart",new Pn(i,3,0)),this.setAttribute("instanceColorEnd",new Pn(i,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new Zy(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new mi);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;e!==void 0&&t!==void 0&&(this.boundingBox.setFromBufferAttribute(e),X0.setFromBufferAttribute(t),this.boundingBox.union(X0))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new gi),this.boundingBox===null&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(e!==void 0&&t!==void 0){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let n=0;for(let s=0,r=e.count;s<r;s++)pu.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(pu)),pu.fromBufferAttribute(t,s),n=Math.max(n,i.distanceToSquared(pu));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}_e.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new Z(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};Hi.line={uniforms:th.merge([_e.common,_e.fog,_e.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};class lT extends cn{static get type(){return"LineMaterial"}constructor(e){super({uniforms:th.clone(Hi.line.uniforms),vertexShader:Hi.line.vertexShader,fragmentShader:Hi.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(e)}get color(){return this.uniforms.diffuse.value}set color(e){this.uniforms.diffuse.value=e}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(e){this.uniforms.linewidth&&(this.uniforms.linewidth.value=e)}get dashed(){return"USE_DASH"in this.defines}set dashed(e){e===!0!==this.dashed&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(e){this.uniforms.dashScale.value=e}get dashSize(){return this.uniforms.dashSize.value}set dashSize(e){this.uniforms.dashSize.value=e}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(e){this.uniforms.dashOffset.value=e}get gapSize(){return this.uniforms.gapSize.value}set gapSize(e){this.uniforms.gapSize.value=e}get opacity(){return this.uniforms.opacity.value}set opacity(e){this.uniforms&&(this.uniforms.opacity.value=e)}get resolution(){return this.uniforms.resolution.value}set resolution(e){this.uniforms.resolution.value.copy(e)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(e){this.defines&&(e===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),e===!0?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}}const sm=new gt,q0=new R,Y0=new R,_i=new gt,vi=new gt,ts=new gt,rm=new R,om=new Ye,Mi=new sT,Z0=new R,mu=new mi,gu=new gi,is=new gt;let rs,Io;function K0(o,e,t){return is.set(0,0,-e,1).applyMatrix4(o.projectionMatrix),is.multiplyScalar(1/is.w),is.x=Io/t.width,is.y=Io/t.height,is.applyMatrix4(o.projectionMatrixInverse),is.multiplyScalar(1/is.w),Math.abs(Math.max(is.x,is.y))}function tD(o,e){const t=o.matrixWorld,i=o.geometry,n=i.attributes.instanceStart,s=i.attributes.instanceEnd,r=Math.min(i.instanceCount,n.count);for(let a=0,l=r;a<l;a++){Mi.start.fromBufferAttribute(n,a),Mi.end.fromBufferAttribute(s,a),Mi.applyMatrix4(t);const c=new R,h=new R;rs.distanceSqToSegment(Mi.start,Mi.end,h,c),h.distanceTo(c)<Io*.5&&e.push({point:h,pointOnLine:c,distance:rs.origin.distanceTo(h),object:o,face:null,faceIndex:a,uv:null,uv1:null})}}function iD(o,e,t){const i=e.projectionMatrix,s=o.material.resolution,r=o.matrixWorld,a=o.geometry,l=a.attributes.instanceStart,c=a.attributes.instanceEnd,h=Math.min(a.instanceCount,l.count),u=-e.near;rs.at(1,ts),ts.w=1,ts.applyMatrix4(e.matrixWorldInverse),ts.applyMatrix4(i),ts.multiplyScalar(1/ts.w),ts.x*=s.x/2,ts.y*=s.y/2,ts.z=0,rm.copy(ts),om.multiplyMatrices(e.matrixWorldInverse,r);for(let d=0,f=h;d<f;d++){if(_i.fromBufferAttribute(l,d),vi.fromBufferAttribute(c,d),_i.w=1,vi.w=1,_i.applyMatrix4(om),vi.applyMatrix4(om),_i.z>u&&vi.z>u)continue;if(_i.z>u){const _=_i.z-vi.z,v=(_i.z-u)/_;_i.lerp(vi,v)}else if(vi.z>u){const _=vi.z-_i.z,v=(vi.z-u)/_;vi.lerp(_i,v)}_i.applyMatrix4(i),vi.applyMatrix4(i),_i.multiplyScalar(1/_i.w),vi.multiplyScalar(1/vi.w),_i.x*=s.x/2,_i.y*=s.y/2,vi.x*=s.x/2,vi.y*=s.y/2,Mi.start.copy(_i),Mi.start.z=0,Mi.end.copy(vi),Mi.end.z=0;const m=Mi.closestPointToPointParameter(rm,!0);Mi.at(m,Z0);const g=Rc.lerp(_i.z,vi.z,m),y=g>=-1&&g<=1,x=rm.distanceTo(Z0)<Io*.5;if(y&&x){Mi.start.fromBufferAttribute(l,d),Mi.end.fromBufferAttribute(c,d),Mi.start.applyMatrix4(r),Mi.end.applyMatrix4(r);const _=new R,v=new R;rs.distanceSqToSegment(Mi.start,Mi.end,v,_),t.push({point:v,pointOnLine:_,distance:rs.origin.distanceTo(v),object:o,face:null,faceIndex:d,uv:null,uv1:null})}}}class nD extends Kt{constructor(e=new aT,t=new lT({color:Math.random()*16777215})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,i=e.attributes.instanceEnd,n=new Float32Array(2*t.count);for(let r=0,a=0,l=t.count;r<l;r++,a+=2)q0.fromBufferAttribute(t,r),Y0.fromBufferAttribute(i,r),n[a]=a===0?0:n[a-1],n[a+1]=n[a]+q0.distanceTo(Y0);const s=new Jd(n,2,1);return e.setAttribute("instanceDistanceStart",new Pn(s,1,0)),e.setAttribute("instanceDistanceEnd",new Pn(s,1,1)),this}raycast(e,t){const i=this.material.worldUnits,n=e.camera;n===null&&!i&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const s=e.params.Line2!==void 0&&e.params.Line2.threshold||0;rs=e.ray;const r=this.matrixWorld,a=this.geometry,l=this.material;Io=l.linewidth+s,a.boundingSphere===null&&a.computeBoundingSphere(),gu.copy(a.boundingSphere).applyMatrix4(r);let c;if(i)c=Io*.5;else{const u=Math.max(n.near,gu.distanceToPoint(rs.origin));c=K0(n,u,l.resolution)}if(gu.radius+=c,rs.intersectsSphere(gu)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),mu.copy(a.boundingBox).applyMatrix4(r);let h;if(i)h=Io*.5;else{const u=Math.max(n.near,mu.distanceToPoint(rs.origin));h=K0(n,u,l.resolution)}mu.expandByScalar(h),rs.intersectsBox(mu)!==!1&&(i?tD(this,t):iD(this,n,t))}onBeforeRender(e){const t=this.material.uniforms;t&&t.resolution&&(e.getViewport(sm),this.material.uniforms.resolution.value.set(sm.z,sm.w))}}class sD extends aT{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setPositions(i),this}setColors(e){const t=e.length-3,i=new Float32Array(2*t);for(let n=0;n<t;n+=3)i[2*n]=e[n],i[2*n+1]=e[n+1],i[2*n+2]=e[n+2],i[2*n+3]=e[n+3],i[2*n+4]=e[n+4],i[2*n+5]=e[n+5];return super.setColors(i),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}class oH extends nD{constructor(e=new sD,t=new lT({color:Math.random()*16777215})){super(e,t),this.isLine2=!0,this.type="Line2"}}class aH extends ah{constructor(e,t={}){const i=t.font;if(i===void 0)super();else{const n=i.generateShapes(e,t.size);t.depth===void 0&&t.height!==void 0&&console.warn("THREE.TextGeometry: .height is now depreciated. Please use .depth instead"),t.depth=t.depth!==void 0?t.depth:t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(n,t)}this.type="TextGeometry"}}class lH{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100){const i=[],n=rD(e,t,this.data);for(let s=0,r=n.length;s<r;s++)i.push(...n[s].toShapes());return i}}function rD(o,e,t){const i=Array.from(o),n=e/t.resolution,s=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*n,r=[];let a=0,l=0;for(let c=0;c<i.length;c++){const h=i[c];if(h===`
`)a=0,l-=s;else{const u=oD(h,n,a,l,t);a+=u.offsetX,r.push(u.path)}}return r}function oD(o,e,t,i,n){const s=n.glyphs[o]||n.glyphs["?"];if(!s){console.error('THREE.Font: character "'+o+'" does not exists in font family '+n.familyName+".");return}const r=new oT;let a,l,c,h,u,d,f,p;if(s.o){const m=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let g=0,y=m.length;g<y;)switch(m[g++]){case"m":a=m[g++]*e+t,l=m[g++]*e+i,r.moveTo(a,l);break;case"l":a=m[g++]*e+t,l=m[g++]*e+i,r.lineTo(a,l);break;case"q":c=m[g++]*e+t,h=m[g++]*e+i,u=m[g++]*e+t,d=m[g++]*e+i,r.quadraticCurveTo(u,d,c,h);break;case"b":c=m[g++]*e+t,h=m[g++]*e+i,u=m[g++]*e+t,d=m[g++]*e+i,f=m[g++]*e+t,p=m[g++]*e+i,r.bezierCurveTo(u,d,f,p,c,h);break}}return{offsetX:s.ha*e,path:r}}/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Jf="170",aD=0,lD=1,cD=2,hD=1,yu=3,cl=0,Zn=1,Qa=2,hl=0,Pr=1,ef=2,tf=3,nf=4,cT=5,Cr=100,hT=101,uT=102,uD=103,dD=104,dT=200,fT=201,pT=202,mT=203,sf=204,rf=205,gT=206,yT=207,xT=208,_T=209,vT=210,bT=0,ST=1,MT=2,of=3,TT=4,wT=5,AT=6,ET=7,Qf=0,fD=1,pD=2,el=0,mD=1,gD=2,yD=3,xD=4,_D=6,vD=7,lx=300,zo=301,ul=302,uh=303,dh=304,Lg=306,af=1e3,$a=1001,lf=1002,Oi=1003,Fg=1004,tl=1005,wn=1006,Ug=1007,$s=1008,Ir=1009,pc=1010,mc=1011,Xa=1012,Wi=1013,Ti=1014,Sn=1015,Xs=1016,bD=1017,SD=1018,fh=1020,CT=35902,MD=1021,cx=1022,vl=1023,TD=1024,wD=1025,Do=1026,dl=1027,hx=1028,ux=1029,zc=1030,dx=1031,AD=1032,fx=1033,am=33776,rd=33777,od=33778,ad=33779,j0=35840,J0=35841,Q0=35842,ev=35843,tv=36196,Bg=37492,Og=37496,zg=37808,kg=37809,Gg=37810,Vg=37811,Hg=37812,Wg=37813,$g=37814,Xg=37815,qg=37816,Yg=37817,Zg=37818,Kg=37819,jg=37820,Jg=37821,lm=36492,ED=36283,iv=36284,nv=36285,sv=36286,Or=0,CD=1,ko="",We="srgb",Dr="srgb-linear",RT="linear",kc="srgb",RD=0,mo=7680,ND=7681,PD=7682,ID=7683,DD=34055,LD=34056,FD=5386,UD=512,BD=513,OD=514,zD=515,kD=516,GD=517,VD=518,Qg=519,NT=512,px=513,PT=514,IT=515,DT=516,LT=517,FT=518,UT=519,cf=35044,qa=35048,qn=2e3,Go=2001;class bl{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const n=this._listeners[e];if(n!==void 0){const s=n.indexOf(t);s!==-1&&n.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let s=0,r=n.length;s<r;s++)n[s].call(this,e);e.target=null}}}const Fi=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let rv=1234567;const gc=Math.PI/180,Gc=180/Math.PI;function qs(){const o=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Fi[o&255]+Fi[o>>8&255]+Fi[o>>16&255]+Fi[o>>24&255]+"-"+Fi[e&255]+Fi[e>>8&255]+"-"+Fi[e>>16&15|64]+Fi[e>>24&255]+"-"+Fi[t&63|128]+Fi[t>>8&255]+"-"+Fi[t>>16&255]+Fi[t>>24&255]+Fi[i&255]+Fi[i>>8&255]+Fi[i>>16&255]+Fi[i>>24&255]).toLowerCase()}function Ai(o,e,t){return Math.max(e,Math.min(t,o))}function mx(o,e){return(o%e+e)%e}function HD(o,e,t,i,n){return i+(o-e)*(n-i)/(t-e)}function WD(o,e,t){return o!==e?(t-o)/(e-o):0}function yc(o,e,t){return(1-t)*o+t*e}function $D(o,e,t,i){return yc(o,e,1-Math.exp(-t*i))}function XD(o,e=1){return e-Math.abs(mx(o,e*2)-e)}function qD(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*(3-2*o))}function YD(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*o*(o*(o*6-15)+10))}function ZD(o,e){return o+Math.floor(Math.random()*(e-o+1))}function KD(o,e){return o+Math.random()*(e-o)}function jD(o){return o*(.5-Math.random())}function JD(o){o!==void 0&&(rv=o);let e=rv+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function QD(o){return o*gc}function eL(o){return o*Gc}function tL(o){return(o&o-1)===0&&o!==0}function iL(o){return Math.pow(2,Math.ceil(Math.log(o)/Math.LN2))}function nL(o){return Math.pow(2,Math.floor(Math.log(o)/Math.LN2))}function sL(o,e,t,i,n){const s=Math.cos,r=Math.sin,a=s(t/2),l=r(t/2),c=s((e+i)/2),h=r((e+i)/2),u=s((e-i)/2),d=r((e-i)/2),f=s((i-e)/2),p=r((i-e)/2);switch(n){case"XYX":o.set(a*h,l*u,l*d,a*c);break;case"YZY":o.set(l*d,a*h,l*u,a*c);break;case"ZXZ":o.set(l*u,l*d,a*h,a*c);break;case"XZX":o.set(a*h,l*p,l*f,a*c);break;case"YXY":o.set(l*f,a*h,l*p,a*c);break;case"ZYZ":o.set(l*p,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function Xi(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return o/4294967295;case Uint16Array:return o/65535;case Uint8Array:return o/255;case Int32Array:return Math.max(o/2147483647,-1);case Int16Array:return Math.max(o/32767,-1);case Int8Array:return Math.max(o/127,-1);default:throw new Error("Invalid component type.")}}function nt(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return Math.round(o*4294967295);case Uint16Array:return Math.round(o*65535);case Uint8Array:return Math.round(o*255);case Int32Array:return Math.round(o*2147483647);case Int16Array:return Math.round(o*32767);case Int8Array:return Math.round(o*127);default:throw new Error("Invalid component type.")}}const rL={DEG2RAD:gc,RAD2DEG:Gc,generateUUID:qs,clamp:Ai,euclideanModulo:mx,mapLinear:HD,inverseLerp:WD,lerp:yc,damp:$D,pingpong:XD,smoothstep:qD,smootherstep:YD,randInt:ZD,randFloat:KD,randFloatSpread:jD,seededRandom:JD,degToRad:QD,radToDeg:eL,isPowerOfTwo:tL,ceilPowerOfTwo:iL,floorPowerOfTwo:nL,setQuaternionFromProperEuler:sL,normalize:nt,denormalize:Xi};class _t{constructor(e=0,t=0){_t.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ai(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),s=this.x-e.x,r=this.y-e.y;return this.x=s*i-r*n+e.x,this.y=s*n+r*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class dn{constructor(e,t,i,n,s,r,a,l,c){dn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,r,a,l,c)}set(e,t,i,n,s,r,a,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=s,h[5]=l,h[6]=i,h[7]=r,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,r=i[0],a=i[3],l=i[6],c=i[1],h=i[4],u=i[7],d=i[2],f=i[5],p=i[8],m=n[0],g=n[3],y=n[6],x=n[1],_=n[4],v=n[7],A=n[2],T=n[5],M=n[8];return s[0]=r*m+a*x+l*A,s[3]=r*g+a*_+l*T,s[6]=r*y+a*v+l*M,s[1]=c*m+h*x+u*A,s[4]=c*g+h*_+u*T,s[7]=c*y+h*v+u*M,s[2]=d*m+f*x+p*A,s[5]=d*g+f*_+p*T,s[8]=d*y+f*v+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*r*h-t*a*c-i*s*h+i*a*l+n*s*c-n*r*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=h*r-a*c,d=a*l-h*s,f=c*s-r*l,p=t*u+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=u*m,e[1]=(n*c-h*i)*m,e[2]=(a*i-n*r)*m,e[3]=d*m,e[4]=(h*t-n*l)*m,e[5]=(n*s-a*t)*m,e[6]=f*m,e[7]=(i*l-c*t)*m,e[8]=(r*t-i*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,s,r,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*r+c*a)+r+e,-n*c,n*l,-n*(-c*r+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(cm.makeScale(e,t)),this}rotate(e){return this.premultiply(cm.makeRotation(-e)),this}translate(e,t){return this.premultiply(cm.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const cm=new dn;function oL(o){for(let e=o.length-1;e>=0;--e)if(o[e]>=65535)return!0;return!1}function ey(o){return document.createElementNS("http://www.w3.org/1999/xhtml",o)}function aL(){const o=ey("canvas");return o.style.display="block",o}const ov={};function lL(o){o in ov||(ov[o]=!0,console.warn(o))}const ii={enabled:!0,workingColorSpace:Dr,spaces:{},convert:function(o,e,t){return this.enabled===!1||e===t||!e||!t||(this.spaces[e].transfer===kc&&(o.r=Ys(o.r),o.g=Ys(o.g),o.b=Ys(o.b)),this.spaces[e].primaries!==this.spaces[t].primaries&&(o.applyMatrix3(this.spaces[e].toXYZ),o.applyMatrix3(this.spaces[t].fromXYZ)),this.spaces[t].transfer===kc&&(o.r=il(o.r),o.g=il(o.g),o.b=il(o.b))),o},fromWorkingColorSpace:function(o,e){return this.convert(o,this.workingColorSpace,e)},toWorkingColorSpace:function(o,e){return this.convert(o,e,this.workingColorSpace)},getPrimaries:function(o){return this.spaces[o].primaries},getTransfer:function(o){return o===ko?RT:this.spaces[o].transfer},getLuminanceCoefficients:function(o,e=this.workingColorSpace){return o.fromArray(this.spaces[e].luminanceCoefficients)},define:function(o){Object.assign(this.spaces,o)},_getMatrix:function(o,e,t){return o.copy(this.spaces[e].toXYZ).multiply(this.spaces[t].fromXYZ)},_getDrawingBufferColorSpace:function(o){return this.spaces[o].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(o=this.workingColorSpace){return this.spaces[o].workingColorSpaceConfig.unpackColorSpace}};function Ys(o){return o<.04045?o*.0773993808:Math.pow(o*.9478672986+.0521327014,2.4)}function il(o){return o<.0031308?o*12.92:1.055*Math.pow(o,.41666)-.055}const av=[.64,.33,.3,.6,.15,.06],lv=[.2126,.7152,.0722],cv=[.3127,.329],hv=new dn().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),uv=new dn().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);ii.define({[Dr]:{primaries:av,whitePoint:cv,transfer:RT,toXYZ:hv,fromXYZ:uv,luminanceCoefficients:lv,workingColorSpaceConfig:{unpackColorSpace:We},outputColorSpaceConfig:{drawingBufferColorSpace:We}},[We]:{primaries:av,whitePoint:cv,transfer:kc,toXYZ:hv,fromXYZ:uv,luminanceCoefficients:lv,outputColorSpaceConfig:{drawingBufferColorSpace:We}}});let va;class cL{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{va===void 0&&(va=ey("canvas")),va.width=e.width,va.height=e.height;const i=va.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=va}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ey("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),s=n.data;for(let r=0;r<s.length;r++)s[r]=Ys(s[r]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Ys(t[i]/255)*255):t[i]=Ys(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let hL=0;class BT{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:hL++}),this.uuid=qs(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let r=0,a=n.length;r<a;r++)n[r].isDataTexture?s.push(hm(n[r].image)):s.push(hm(n[r]))}else s=hm(n);i.url=s}return t||(e.images[this.uuid]=i),i}}function hm(o){return typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&o instanceof ImageBitmap?cL.getDataURL(o):o.data?{data:Array.from(o.data),width:o.width,height:o.height,type:o.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let uL=0;class Zi extends bl{constructor(e=Zi.DEFAULT_IMAGE,t=Zi.DEFAULT_MAPPING,i=$a,n=$a,s=wn,r=$s,a=vl,l=Ir,c=Zi.DEFAULT_ANISOTROPY,h=ko){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:uL++}),this.uuid=qs(),this.name="",this.source=new BT(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=r,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new _t(0,0),this.repeat=new _t(1,1),this.center=new _t(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new dn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==lx)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case af:e.x=e.x-Math.floor(e.x);break;case $a:e.x=e.x<0?0:1;break;case lf:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case af:e.y=e.y-Math.floor(e.y);break;case $a:e.y=e.y<0?0:1;break;case lf:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Zi.DEFAULT_IMAGE=null;Zi.DEFAULT_MAPPING=lx;Zi.DEFAULT_ANISOTROPY=1;class Ct{constructor(e=0,t=0,i=0,n=1){Ct.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=this.w,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n+r[12]*s,this.y=r[1]*t+r[5]*i+r[9]*n+r[13]*s,this.z=r[2]*t+r[6]*i+r[10]*n+r[14]*s,this.w=r[3]*t+r[7]*i+r[11]*n+r[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,s;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],p=l[9],m=l[2],g=l[6],y=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-m)<.01&&Math.abs(p-g)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+m)<.1&&Math.abs(p+g)<.1&&Math.abs(c+f+y-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const _=(c+1)/2,v=(f+1)/2,A=(y+1)/2,T=(h+d)/4,M=(u+m)/4,w=(p+g)/4;return _>v&&_>A?_<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(_),n=T/i,s=M/i):v>A?v<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(v),i=T/n,s=w/n):A<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(A),i=M/s,n=w/s),this.set(i,n,s,t),this}let x=Math.sqrt((g-p)*(g-p)+(u-m)*(u-m)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(g-p)/x,this.y=(u-m)/x,this.z=(d-h)/x,this.w=Math.acos((c+f+y-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Sl extends bl{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ct(0,0,e,t),this.scissorTest=!1,this.viewport=new Ct(0,0,e,t);const n={width:e,height:t,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:wn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const s=new Zi(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);s.flipY=!1,s.generateMipmaps=i.generateMipmaps,s.internalFormat=i.internalFormat,this.textures=[];const r=i.count;for(let a=0;a<r;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,s=this.textures.length;n<s;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let i=0,n=e.textures.length;i<n;i++)this.textures[i]=e.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new BT(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class dL extends Sl{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class fL extends Zi{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Oi,this.minFilter=Oi,this.wrapR=$a,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class ph{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,s,r,a){let l=i[n+0],c=i[n+1],h=i[n+2],u=i[n+3];const d=s[r+0],f=s[r+1],p=s[r+2],m=s[r+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=m;return}if(u!==m||l!==d||c!==f||h!==p){let g=1-a;const y=l*d+c*f+h*p+u*m,x=y>=0?1:-1,_=1-y*y;if(_>Number.EPSILON){const A=Math.sqrt(_),T=Math.atan2(A,y*x);g=Math.sin(g*T)/A,a=Math.sin(a*T)/A}const v=a*x;if(l=l*g+d*v,c=c*g+f*v,h=h*g+p*v,u=u*g+m*v,g===1-a){const A=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=A,c*=A,h*=A,u*=A}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,n,s,r){const a=i[n],l=i[n+1],c=i[n+2],h=i[n+3],u=s[r],d=s[r+1],f=s[r+2],p=s[r+3];return e[t]=a*p+h*u+l*f-c*d,e[t+1]=l*p+h*d+c*u-a*f,e[t+2]=c*p+h*f+a*d-l*u,e[t+3]=h*p-a*u-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,s=e._z,r=e._order,a=Math.cos,l=Math.sin,c=a(i/2),h=a(n/2),u=a(s/2),d=l(i/2),f=l(n/2),p=l(s/2);switch(r){case"XYZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"YXZ":this._x=d*h*u+c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"ZXY":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u-d*f*p;break;case"ZYX":this._x=d*h*u-c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u+d*f*p;break;case"YZX":this._x=d*h*u+c*f*p,this._y=c*f*u+d*h*p,this._z=c*h*p-d*f*u,this._w=c*h*u-d*f*p;break;case"XZY":this._x=d*h*u-c*f*p,this._y=c*f*u-d*h*p,this._z=c*h*p+d*f*u,this._w=c*h*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],s=t[8],r=t[1],a=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=i+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(s-c)*f,this._z=(r-n)*f}else if(i>a&&i>u){const f=2*Math.sqrt(1+i-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(n+r)/f,this._z=(s+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-i-u);this._w=(s-c)/f,this._x=(n+r)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-i-a);this._w=(r-n)/f,this._x=(s+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ai(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,s=e._z,r=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+r*a+n*c-s*l,this._y=n*h+r*l+s*a-i*c,this._z=s*h+r*c+i*l-n*a,this._w=r*h-i*a-n*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,s=this._z,r=this._w;let a=r*e._w+i*e._x+n*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=r,this._x=i,this._y=n,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*r+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=r*u+this._w*d,this._x=i*u+this._x*d,this._y=n*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class G{constructor(e=0,t=0,i=0){G.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(dv.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(dv.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*n,this.y=s[1]*t+s[4]*i+s[7]*n,this.z=s[2]*t+s[5]*i+s[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=e.elements,r=1/(s[3]*t+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*n+s[12])*r,this.y=(s[1]*t+s[5]*i+s[9]*n+s[13])*r,this.z=(s[2]*t+s[6]*i+s[10]*n+s[14])*r,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,s=e.x,r=e.y,a=e.z,l=e.w,c=2*(r*n-a*i),h=2*(a*t-s*n),u=2*(s*i-r*t);return this.x=t+l*c+r*u-a*h,this.y=i+l*h+a*c-s*u,this.z=n+l*u+s*h-r*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n,this.y=s[1]*t+s[5]*i+s[9]*n,this.z=s[2]*t+s[6]*i+s[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,s=e.z,r=t.x,a=t.y,l=t.z;return this.x=n*l-s*a,this.y=s*r-i*l,this.z=i*a-n*r,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return um.copy(this).projectOnVector(e),this.sub(um)}reflect(e){return this.sub(um.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ai(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const um=new G,dv=new ph;class mh{constructor(e=new G(1/0,1/0,1/0),t=new G(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(kn.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(kn.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=kn.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let r=0,a=s.count;r<a;r++)e.isMesh===!0?e.getVertexPosition(r,kn):kn.fromBufferAttribute(s,r),kn.applyMatrix4(e.matrixWorld),this.expandByPoint(kn);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),xu.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),xu.copy(i.boundingBox)),xu.applyMatrix4(e.matrixWorld),this.union(xu)}const n=e.children;for(let s=0,r=n.length;s<r;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,kn),kn.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(kl),_u.subVectors(this.max,kl),ba.subVectors(e.a,kl),Sa.subVectors(e.b,kl),Ma.subVectors(e.c,kl),mr.subVectors(Sa,ba),gr.subVectors(Ma,Sa),ao.subVectors(ba,Ma);let t=[0,-mr.z,mr.y,0,-gr.z,gr.y,0,-ao.z,ao.y,mr.z,0,-mr.x,gr.z,0,-gr.x,ao.z,0,-ao.x,-mr.y,mr.x,0,-gr.y,gr.x,0,-ao.y,ao.x,0];return!dm(t,ba,Sa,Ma,_u)||(t=[1,0,0,0,1,0,0,0,1],!dm(t,ba,Sa,Ma,_u))?!1:(vu.crossVectors(mr,gr),t=[vu.x,vu.y,vu.z],dm(t,ba,Sa,Ma,_u))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,kn).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(kn).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Cs[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Cs[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Cs[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Cs[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Cs[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Cs[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Cs[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Cs[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Cs),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Cs=[new G,new G,new G,new G,new G,new G,new G,new G],kn=new G,xu=new mh,ba=new G,Sa=new G,Ma=new G,mr=new G,gr=new G,ao=new G,kl=new G,_u=new G,vu=new G,lo=new G;function dm(o,e,t,i,n){for(let s=0,r=o.length-3;s<=r;s+=3){lo.fromArray(o,s);const a=n.x*Math.abs(lo.x)+n.y*Math.abs(lo.y)+n.z*Math.abs(lo.z),l=e.dot(lo),c=t.dot(lo),h=i.dot(lo);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const pL=new mh,Gl=new G,fm=new G;class gx{constructor(e=new G,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):pL.setFromPoints(e).getCenter(i);let n=0;for(let s=0,r=e.length;s<r;s++)n=Math.max(n,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Gl.subVectors(e,this.center);const t=Gl.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(Gl,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(fm.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Gl.copy(e.center).add(fm)),this.expandByPoint(Gl.copy(e.center).sub(fm))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Rs=new G,pm=new G,bu=new G,yr=new G,mm=new G,Su=new G,gm=new G;class mL{constructor(e=new G,t=new G(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Rs)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Rs.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Rs.copy(this.origin).addScaledVector(this.direction,t),Rs.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){pm.copy(e).add(t).multiplyScalar(.5),bu.copy(t).sub(e).normalize(),yr.copy(this.origin).sub(pm);const s=e.distanceTo(t)*.5,r=-this.direction.dot(bu),a=yr.dot(this.direction),l=-yr.dot(bu),c=yr.lengthSq(),h=Math.abs(1-r*r);let u,d,f,p;if(h>0)if(u=r*l-a,d=r*a-l,p=s*h,u>=0)if(d>=-p)if(d<=p){const m=1/h;u*=m,d*=m,f=u*(u+r*d+2*a)+d*(r*u+d+2*l)+c}else d=s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d=-s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-p?(u=Math.max(0,-(-r*s+a)),d=u>0?-s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c):d<=p?(u=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(u=Math.max(0,-(r*s+a)),d=u>0?s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c);else d=r>0?-s:s,u=Math.max(0,-(r*d+a)),f=-u*u+d*(d+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,u),n&&n.copy(pm).addScaledVector(bu,d),f}intersectSphere(e,t){Rs.subVectors(e.center,this.origin);const i=Rs.dot(this.direction),n=Rs.dot(Rs)-i*i,s=e.radius*e.radius;if(n>s)return null;const r=Math.sqrt(s-n),a=i-r,l=i+r;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,s,r,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(i=(e.min.x-d.x)*c,n=(e.max.x-d.x)*c):(i=(e.max.x-d.x)*c,n=(e.min.x-d.x)*c),h>=0?(s=(e.min.y-d.y)*h,r=(e.max.y-d.y)*h):(s=(e.max.y-d.y)*h,r=(e.min.y-d.y)*h),i>r||s>n||((s>i||isNaN(i))&&(i=s),(r<n||isNaN(n))&&(n=r),u>=0?(a=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,Rs)!==null}intersectTriangle(e,t,i,n,s){mm.subVectors(t,e),Su.subVectors(i,e),gm.crossVectors(mm,Su);let r=this.direction.dot(gm),a;if(r>0){if(n)return null;a=1}else if(r<0)a=-1,r=-r;else return null;yr.subVectors(this.origin,e);const l=a*this.direction.dot(Su.crossVectors(yr,Su));if(l<0)return null;const c=a*this.direction.dot(mm.cross(yr));if(c<0||l+c>r)return null;const h=-a*yr.dot(gm);return h<0?null:this.at(h/r,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Gt{constructor(e,t,i,n,s,r,a,l,c,h,u,d,f,p,m,g){Gt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,r,a,l,c,h,u,d,f,p,m,g)}set(e,t,i,n,s,r,a,l,c,h,u,d,f,p,m,g){const y=this.elements;return y[0]=e,y[4]=t,y[8]=i,y[12]=n,y[1]=s,y[5]=r,y[9]=a,y[13]=l,y[2]=c,y[6]=h,y[10]=u,y[14]=d,y[3]=f,y[7]=p,y[11]=m,y[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Gt().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/Ta.setFromMatrixColumn(e,0).length(),s=1/Ta.setFromMatrixColumn(e,1).length(),r=1/Ta.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*r,t[9]=i[9]*r,t[10]=i[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,s=e.z,r=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(s),u=Math.sin(s);if(e.order==="XYZ"){const d=r*h,f=r*u,p=a*h,m=a*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=f+p*c,t[5]=d-m*c,t[9]=-a*l,t[2]=m-d*c,t[6]=p+f*c,t[10]=r*l}else if(e.order==="YXZ"){const d=l*h,f=l*u,p=c*h,m=c*u;t[0]=d+m*a,t[4]=p*a-f,t[8]=r*c,t[1]=r*u,t[5]=r*h,t[9]=-a,t[2]=f*a-p,t[6]=m+d*a,t[10]=r*l}else if(e.order==="ZXY"){const d=l*h,f=l*u,p=c*h,m=c*u;t[0]=d-m*a,t[4]=-r*u,t[8]=p+f*a,t[1]=f+p*a,t[5]=r*h,t[9]=m-d*a,t[2]=-r*c,t[6]=a,t[10]=r*l}else if(e.order==="ZYX"){const d=r*h,f=r*u,p=a*h,m=a*u;t[0]=l*h,t[4]=p*c-f,t[8]=d*c+m,t[1]=l*u,t[5]=m*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=r*l}else if(e.order==="YZX"){const d=r*l,f=r*c,p=a*l,m=a*c;t[0]=l*h,t[4]=m-d*u,t[8]=p*u+f,t[1]=u,t[5]=r*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*u+p,t[10]=d-m*u}else if(e.order==="XZY"){const d=r*l,f=r*c,p=a*l,m=a*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+m,t[5]=r*h,t[9]=f*u-p,t[2]=p*u-f,t[6]=a*h,t[10]=m*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(gL,e,yL)}lookAt(e,t,i){const n=this.elements;return gn.subVectors(e,t),gn.lengthSq()===0&&(gn.z=1),gn.normalize(),xr.crossVectors(i,gn),xr.lengthSq()===0&&(Math.abs(i.z)===1?gn.x+=1e-4:gn.z+=1e-4,gn.normalize(),xr.crossVectors(i,gn)),xr.normalize(),Mu.crossVectors(gn,xr),n[0]=xr.x,n[4]=Mu.x,n[8]=gn.x,n[1]=xr.y,n[5]=Mu.y,n[9]=gn.y,n[2]=xr.z,n[6]=Mu.z,n[10]=gn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,r=i[0],a=i[4],l=i[8],c=i[12],h=i[1],u=i[5],d=i[9],f=i[13],p=i[2],m=i[6],g=i[10],y=i[14],x=i[3],_=i[7],v=i[11],A=i[15],T=n[0],M=n[4],w=n[8],S=n[12],b=n[1],N=n[5],z=n[9],L=n[13],k=n[2],q=n[6],H=n[10],ae=n[14],X=n[3],le=n[7],ue=n[11],xe=n[15];return s[0]=r*T+a*b+l*k+c*X,s[4]=r*M+a*N+l*q+c*le,s[8]=r*w+a*z+l*H+c*ue,s[12]=r*S+a*L+l*ae+c*xe,s[1]=h*T+u*b+d*k+f*X,s[5]=h*M+u*N+d*q+f*le,s[9]=h*w+u*z+d*H+f*ue,s[13]=h*S+u*L+d*ae+f*xe,s[2]=p*T+m*b+g*k+y*X,s[6]=p*M+m*N+g*q+y*le,s[10]=p*w+m*z+g*H+y*ue,s[14]=p*S+m*L+g*ae+y*xe,s[3]=x*T+_*b+v*k+A*X,s[7]=x*M+_*N+v*q+A*le,s[11]=x*w+_*z+v*H+A*ue,s[15]=x*S+_*L+v*ae+A*xe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],s=e[12],r=e[1],a=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],f=e[14],p=e[3],m=e[7],g=e[11],y=e[15];return p*(+s*l*u-n*c*u-s*a*d+i*c*d+n*a*f-i*l*f)+m*(+t*l*f-t*c*d+s*r*d-n*r*f+n*c*h-s*l*h)+g*(+t*c*u-t*a*f-s*r*u+i*r*f+s*a*h-i*c*h)+y*(-n*a*h-t*l*u+t*a*d+n*r*u-i*r*d+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],r=e[4],a=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],f=e[11],p=e[12],m=e[13],g=e[14],y=e[15],x=u*g*c-m*d*c+m*l*f-a*g*f-u*l*y+a*d*y,_=p*d*c-h*g*c-p*l*f+r*g*f+h*l*y-r*d*y,v=h*m*c-p*u*c+p*a*f-r*m*f-h*a*y+r*u*y,A=p*u*l-h*m*l-p*a*d+r*m*d+h*a*g-r*u*g,T=t*x+i*_+n*v+s*A;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/T;return e[0]=x*M,e[1]=(m*d*s-u*g*s-m*n*f+i*g*f+u*n*y-i*d*y)*M,e[2]=(a*g*s-m*l*s+m*n*c-i*g*c-a*n*y+i*l*y)*M,e[3]=(u*l*s-a*d*s-u*n*c+i*d*c+a*n*f-i*l*f)*M,e[4]=_*M,e[5]=(h*g*s-p*d*s+p*n*f-t*g*f-h*n*y+t*d*y)*M,e[6]=(p*l*s-r*g*s-p*n*c+t*g*c+r*n*y-t*l*y)*M,e[7]=(r*d*s-h*l*s+h*n*c-t*d*c-r*n*f+t*l*f)*M,e[8]=v*M,e[9]=(p*u*s-h*m*s-p*i*f+t*m*f+h*i*y-t*u*y)*M,e[10]=(r*m*s-p*a*s+p*i*c-t*m*c-r*i*y+t*a*y)*M,e[11]=(h*a*s-r*u*s-h*i*c+t*u*c+r*i*f-t*a*f)*M,e[12]=A*M,e[13]=(h*m*n-p*u*n+p*i*d-t*m*d-h*i*g+t*u*g)*M,e[14]=(p*a*n-r*m*n-p*i*l+t*m*l+r*i*g-t*a*g)*M,e[15]=(r*u*n-h*a*n+h*i*l-t*u*l-r*i*d+t*a*d)*M,this}scale(e){const t=this.elements,i=e.x,n=e.y,s=e.z;return t[0]*=i,t[4]*=n,t[8]*=s,t[1]*=i,t[5]*=n,t[9]*=s,t[2]*=i,t[6]*=n,t[10]*=s,t[3]*=i,t[7]*=n,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),s=1-i,r=e.x,a=e.y,l=e.z,c=s*r,h=s*a;return this.set(c*r+i,c*a-n*l,c*l+n*a,0,c*a+n*l,h*a+i,h*l-n*r,0,c*l-n*a,h*l+n*r,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,s,r){return this.set(1,i,s,0,e,1,r,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,s=t._x,r=t._y,a=t._z,l=t._w,c=s+s,h=r+r,u=a+a,d=s*c,f=s*h,p=s*u,m=r*h,g=r*u,y=a*u,x=l*c,_=l*h,v=l*u,A=i.x,T=i.y,M=i.z;return n[0]=(1-(m+y))*A,n[1]=(f+v)*A,n[2]=(p-_)*A,n[3]=0,n[4]=(f-v)*T,n[5]=(1-(d+y))*T,n[6]=(g+x)*T,n[7]=0,n[8]=(p+_)*M,n[9]=(g-x)*M,n[10]=(1-(d+m))*M,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let s=Ta.set(n[0],n[1],n[2]).length();const r=Ta.set(n[4],n[5],n[6]).length(),a=Ta.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),e.x=n[12],e.y=n[13],e.z=n[14],Gn.copy(this);const c=1/s,h=1/r,u=1/a;return Gn.elements[0]*=c,Gn.elements[1]*=c,Gn.elements[2]*=c,Gn.elements[4]*=h,Gn.elements[5]*=h,Gn.elements[6]*=h,Gn.elements[8]*=u,Gn.elements[9]*=u,Gn.elements[10]*=u,t.setFromRotationMatrix(Gn),i.x=s,i.y=r,i.z=a,this}makePerspective(e,t,i,n,s,r,a=qn){const l=this.elements,c=2*s/(t-e),h=2*s/(i-n),u=(t+e)/(t-e),d=(i+n)/(i-n);let f,p;if(a===qn)f=-(r+s)/(r-s),p=-2*r*s/(r-s);else if(a===Go)f=-r/(r-s),p=-r*s/(r-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,s,r,a=qn){const l=this.elements,c=1/(t-e),h=1/(i-n),u=1/(r-s),d=(t+e)*c,f=(i+n)*h;let p,m;if(a===qn)p=(r+s)*u,m=-2*u;else if(a===Go)p=s*u,m=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=m,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const Ta=new G,Gn=new Gt,gL=new G(0,0,0),yL=new G(1,1,1),xr=new G,Mu=new G,gn=new G,fv=new Gt,pv=new ph;class Kn{constructor(e=0,t=0,i=0,n=Kn.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,s=n[0],r=n[4],a=n[8],l=n[1],c=n[5],h=n[9],u=n[2],d=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(Ai(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ai(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(Ai(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-r,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-Ai(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-r,c));break;case"YZX":this._z=Math.asin(Ai(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Ai(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return fv.makeRotationFromQuaternion(e),this.setFromRotationMatrix(fv,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return pv.setFromEuler(this),this.setFromQuaternion(pv,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Kn.DEFAULT_ORDER="XYZ";class xL{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let _L=0;const mv=new G,wa=new ph,Ns=new Gt,Tu=new G,Vl=new G,vL=new G,bL=new ph,gv=new G(1,0,0),yv=new G(0,1,0),xv=new G(0,0,1),_v={type:"added"},SL={type:"removed"},Aa={type:"childadded",child:null},ym={type:"childremoved",child:null};class yi extends bl{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:_L++}),this.uuid=qs(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=yi.DEFAULT_UP.clone();const e=new G,t=new Kn,i=new ph,n=new G(1,1,1);function s(){i.setFromEuler(t,!1)}function r(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Gt},normalMatrix:{value:new dn}}),this.matrix=new Gt,this.matrixWorld=new Gt,this.matrixAutoUpdate=yi.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=yi.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new xL,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return wa.setFromAxisAngle(e,t),this.quaternion.multiply(wa),this}rotateOnWorldAxis(e,t){return wa.setFromAxisAngle(e,t),this.quaternion.premultiply(wa),this}rotateX(e){return this.rotateOnAxis(gv,e)}rotateY(e){return this.rotateOnAxis(yv,e)}rotateZ(e){return this.rotateOnAxis(xv,e)}translateOnAxis(e,t){return mv.copy(e).applyQuaternion(this.quaternion),this.position.add(mv.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(gv,e)}translateY(e){return this.translateOnAxis(yv,e)}translateZ(e){return this.translateOnAxis(xv,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ns.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Tu.copy(e):Tu.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),Vl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ns.lookAt(Vl,Tu,this.up):Ns.lookAt(Tu,Vl,this.up),this.quaternion.setFromRotationMatrix(Ns),n&&(Ns.extractRotation(n.matrixWorld),wa.setFromRotationMatrix(Ns),this.quaternion.premultiply(wa.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(_v),Aa.child=e,this.dispatchEvent(Aa),Aa.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(SL),ym.child=e,this.dispatchEvent(ym),ym.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ns.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ns.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ns),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(_v),Aa.child=e,this.dispatchEvent(Aa),Aa.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const r=this.children[i].getObjectByProperty(e,t);if(r!==void 0)return r}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let s=0,r=n.length;s<r;s++)n[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vl,e,vL),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vl,bL,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let s=0,r=n.length;s<r;s++)n[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];s(e.shapes,u)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));n.material=a}else n.material=s(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(s(e.animations,l))}}if(t){const a=r(e.geometries),l=r(e.materials),c=r(e.textures),h=r(e.images),u=r(e.shapes),d=r(e.skeletons),f=r(e.animations),p=r(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function r(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}}yi.DEFAULT_UP=new G(0,1,0);yi.DEFAULT_MATRIX_AUTO_UPDATE=!0;yi.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Vn=new G,Ps=new G,xm=new G,Is=new G,Ea=new G,Ca=new G,vv=new G,_m=new G,vm=new G,bm=new G,Sm=new Ct,Mm=new Ct,Tm=new Ct;class Xn{constructor(e=new G,t=new G,i=new G){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),Vn.subVectors(e,t),n.cross(Vn);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(e,t,i,n,s){Vn.subVectors(n,t),Ps.subVectors(i,t),xm.subVectors(e,t);const r=Vn.dot(Vn),a=Vn.dot(Ps),l=Vn.dot(xm),c=Ps.dot(Ps),h=Ps.dot(xm),u=r*c-a*a;if(u===0)return s.set(0,0,0),null;const d=1/u,f=(c*l-a*h)*d,p=(r*h-a*l)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,Is)===null?!1:Is.x>=0&&Is.y>=0&&Is.x+Is.y<=1}static getInterpolation(e,t,i,n,s,r,a,l){return this.getBarycoord(e,t,i,n,Is)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,Is.x),l.addScaledVector(r,Is.y),l.addScaledVector(a,Is.z),l)}static getInterpolatedAttribute(e,t,i,n,s,r){return Sm.setScalar(0),Mm.setScalar(0),Tm.setScalar(0),Sm.fromBufferAttribute(e,t),Mm.fromBufferAttribute(e,i),Tm.fromBufferAttribute(e,n),r.setScalar(0),r.addScaledVector(Sm,s.x),r.addScaledVector(Mm,s.y),r.addScaledVector(Tm,s.z),r}static isFrontFacing(e,t,i,n){return Vn.subVectors(i,t),Ps.subVectors(e,t),Vn.cross(Ps).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Vn.subVectors(this.c,this.b),Ps.subVectors(this.a,this.b),Vn.cross(Ps).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Xn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Xn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,s){return Xn.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}containsPoint(e){return Xn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Xn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,s=this.c;let r,a;Ea.subVectors(n,i),Ca.subVectors(s,i),_m.subVectors(e,i);const l=Ea.dot(_m),c=Ca.dot(_m);if(l<=0&&c<=0)return t.copy(i);vm.subVectors(e,n);const h=Ea.dot(vm),u=Ca.dot(vm);if(h>=0&&u<=h)return t.copy(n);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return r=l/(l-h),t.copy(i).addScaledVector(Ea,r);bm.subVectors(e,s);const f=Ea.dot(bm),p=Ca.dot(bm);if(p>=0&&f<=p)return t.copy(s);const m=f*c-l*p;if(m<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(Ca,a);const g=h*p-f*u;if(g<=0&&u-h>=0&&f-p>=0)return vv.subVectors(s,n),a=(u-h)/(u-h+(f-p)),t.copy(n).addScaledVector(vv,a);const y=1/(g+m+d);return r=m*y,a=d*y,t.copy(i).addScaledVector(Ea,r).addScaledVector(Ca,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const OT={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_r={h:0,s:0,l:0},wu={h:0,s:0,l:0};function wm(o,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?o+(e-o)*6*t:t<1/2?e:t<2/3?o+(e-o)*6*(2/3-t):o}class Rt{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=We){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ii.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=ii.workingColorSpace){return this.r=e,this.g=t,this.b=i,ii.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=ii.workingColorSpace){if(e=mx(e,1),t=Ai(t,0,1),i=Ai(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,r=2*i-s;this.r=wm(r,s,e+1/3),this.g=wm(r,s,e),this.b=wm(r,s,e-1/3)}return ii.toWorkingColorSpace(this,n),this}setStyle(e,t=We){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=n[1],r=s.length;if(r===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(r===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=We){const i=OT[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ys(e.r),this.g=Ys(e.g),this.b=Ys(e.b),this}copyLinearToSRGB(e){return this.r=il(e.r),this.g=il(e.g),this.b=il(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=We){return ii.fromWorkingColorSpace(Ui.copy(this),e),Math.round(Ai(Ui.r*255,0,255))*65536+Math.round(Ai(Ui.g*255,0,255))*256+Math.round(Ai(Ui.b*255,0,255))}getHexString(e=We){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ii.workingColorSpace){ii.fromWorkingColorSpace(Ui.copy(this),t);const i=Ui.r,n=Ui.g,s=Ui.b,r=Math.max(i,n,s),a=Math.min(i,n,s);let l,c;const h=(a+r)/2;if(a===r)l=0,c=0;else{const u=r-a;switch(c=h<=.5?u/(r+a):u/(2-r-a),r){case i:l=(n-s)/u+(n<s?6:0);break;case n:l=(s-i)/u+2;break;case s:l=(i-n)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=ii.workingColorSpace){return ii.fromWorkingColorSpace(Ui.copy(this),t),e.r=Ui.r,e.g=Ui.g,e.b=Ui.b,e}getStyle(e=We){ii.fromWorkingColorSpace(Ui.copy(this),e);const t=Ui.r,i=Ui.g,n=Ui.b;return e!==We?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(_r),this.setHSL(_r.h+e,_r.s+t,_r.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(_r),e.getHSL(wu);const i=yc(_r.h,wu.h,t),n=yc(_r.s,wu.s,t),s=yc(_r.l,wu.l,t);return this.setHSL(i,n,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*n,this.g=s[1]*t+s[4]*i+s[7]*n,this.b=s[2]*t+s[5]*i+s[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Ui=new Rt;Rt.NAMES=OT;let ML=0;class hn extends bl{static get type(){return"Material"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ML++}),this.uuid=qs(),this.name="",this.blending=Pr,this.side=cl,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=sf,this.blendDst=rf,this.blendEquation=Cr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Rt(0,0,0),this.blendAlpha=0,this.depthFunc=of,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Qg,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=mo,this.stencilZFail=mo,this.stencilZPass=mo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Pr&&(i.blending=this.blending),this.side!==cl&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==sf&&(i.blendSrc=this.blendSrc),this.blendDst!==rf&&(i.blendDst=this.blendDst),this.blendEquation!==Cr&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==of&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Qg&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==mo&&(i.stencilFail=this.stencilFail),this.stencilZFail!==mo&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==mo&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const r=[];for(const a in s){const l=s[a];delete l.metadata,r.push(l)}return r}if(t){const s=n(e.textures),r=n(e.images);s.length>0&&(i.textures=s),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class ep extends hn{static get type(){return"MeshBasicMaterial"}constructor(e){super(),this.isMeshBasicMaterial=!0,this.color=new Rt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Kn,this.combine=Qf,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const ks=TL();function TL(){const o=new ArrayBuffer(4),e=new Float32Array(o),t=new Uint32Array(o),i=new Uint32Array(512),n=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,n[l]=24,n[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,n[l]=-c-1,n[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,n[l]=13,n[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,n[l]=24,n[l|256]=24):(i[l]=31744,i[l|256]=64512,n[l]=13,n[l|256]=13)}const s=new Uint32Array(2048),r=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;!(c&8388608);)c<<=1,h-=8388608;c&=-8388609,h+=947912704,s[l]=c|h}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)r[l]=l<<23;r[31]=1199570944,r[32]=2147483648;for(let l=33;l<63;++l)r[l]=2147483648+(l-32<<23);r[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:n,mantissaTable:s,exponentTable:r,offsetTable:a}}function yn(o){Math.abs(o)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),o=Ai(o,-65504,65504),ks.floatView[0]=o;const e=ks.uint32View[0],t=e>>23&511;return ks.baseTable[t]+((e&8388607)>>ks.shiftTable[t])}function Au(o){const e=o>>10;return ks.uint32View[0]=ks.mantissaTable[ks.offsetTable[e]+(o&1023)]+ks.exponentTable[e],ks.floatView[0]}const ei=new G,Eu=new _t;class In{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=cf,this.updateRanges=[],this.gpuType=Sn,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)Eu.fromBufferAttribute(this,t),Eu.applyMatrix3(e),this.setXY(t,Eu.x,Eu.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)ei.fromBufferAttribute(this,t),ei.applyMatrix3(e),this.setXYZ(t,ei.x,ei.y,ei.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)ei.fromBufferAttribute(this,t),ei.applyMatrix4(e),this.setXYZ(t,ei.x,ei.y,ei.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)ei.fromBufferAttribute(this,t),ei.applyNormalMatrix(e),this.setXYZ(t,ei.x,ei.y,ei.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)ei.fromBufferAttribute(this,t),ei.transformDirection(e),this.setXYZ(t,ei.x,ei.y,ei.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=Xi(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=nt(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Xi(t,this.array)),t}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Xi(t,this.array)),t}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Xi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Xi(t,this.array)),t}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array),s=nt(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==cf&&(e.usage=this.usage),e}}class zT extends In{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class kT extends In{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class GT extends In{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=Au(this.array[e*this.itemSize]);return this.normalized&&(t=Xi(t,this.array)),t}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize]=yn(t),this}getY(e){let t=Au(this.array[e*this.itemSize+1]);return this.normalized&&(t=Xi(t,this.array)),t}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+1]=yn(t),this}getZ(e){let t=Au(this.array[e*this.itemSize+2]);return this.normalized&&(t=Xi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+2]=yn(t),this}getW(e){let t=Au(this.array[e*this.itemSize+3]);return this.normalized&&(t=Xi(t,this.array)),t}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.array[e*this.itemSize+3]=yn(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array)),this.array[e+0]=yn(t),this.array[e+1]=yn(i),this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array)),this.array[e+0]=yn(t),this.array[e+1]=yn(i),this.array[e+2]=yn(n),this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array),s=nt(s,this.array)),this.array[e+0]=yn(t),this.array[e+1]=yn(i),this.array[e+2]=yn(n),this.array[e+3]=yn(s),this}}class Zs extends In{constructor(e,t,i){super(new Float32Array(e),t,i)}}let wL=0;const Cn=new Gt,Am=new yi,Ra=new G,xn=new mh,Hl=new mh,pi=new G;class Ko extends bl{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:wL++}),this.uuid=qs(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(oL(e)?kT:zT)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new dn().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Cn.makeRotationFromQuaternion(e),this.applyMatrix4(Cn),this}rotateX(e){return Cn.makeRotationX(e),this.applyMatrix4(Cn),this}rotateY(e){return Cn.makeRotationY(e),this.applyMatrix4(Cn),this}rotateZ(e){return Cn.makeRotationZ(e),this.applyMatrix4(Cn),this}translate(e,t,i){return Cn.makeTranslation(e,t,i),this.applyMatrix4(Cn),this}scale(e,t,i){return Cn.makeScale(e,t,i),this.applyMatrix4(Cn),this}lookAt(e){return Am.lookAt(e),Am.updateMatrix(),this.applyMatrix4(Am.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ra).negate(),this.translate(Ra.x,Ra.y,Ra.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let n=0,s=e.length;n<s;n++){const r=e[n];i.push(r.x,r.y,r.z||0)}this.setAttribute("position",new Zs(i,3))}else{for(let i=0,n=t.count;i<n;i++){const s=e[i];t.setXYZ(i,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new mh);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new G(-1/0,-1/0,-1/0),new G(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const s=t[i];xn.setFromBufferAttribute(s),this.morphTargetsRelative?(pi.addVectors(this.boundingBox.min,xn.min),this.boundingBox.expandByPoint(pi),pi.addVectors(this.boundingBox.max,xn.max),this.boundingBox.expandByPoint(pi)):(this.boundingBox.expandByPoint(xn.min),this.boundingBox.expandByPoint(xn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new gx);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new G,1/0);return}if(e){const i=this.boundingSphere.center;if(xn.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++){const a=t[s];Hl.setFromBufferAttribute(a),this.morphTargetsRelative?(pi.addVectors(xn.min,Hl.min),xn.expandByPoint(pi),pi.addVectors(xn.max,Hl.max),xn.expandByPoint(pi)):(xn.expandByPoint(Hl.min),xn.expandByPoint(Hl.max))}xn.getCenter(i);let n=0;for(let s=0,r=e.count;s<r;s++)pi.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(pi));if(t)for(let s=0,r=t.length;s<r;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)pi.fromBufferAttribute(a,c),l&&(Ra.fromBufferAttribute(e,c),pi.add(Ra)),n=Math.max(n,i.distanceToSquared(pi))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new In(new Float32Array(4*i.count),4));const r=this.getAttribute("tangent"),a=[],l=[];for(let w=0;w<i.count;w++)a[w]=new G,l[w]=new G;const c=new G,h=new G,u=new G,d=new _t,f=new _t,p=new _t,m=new G,g=new G;function y(w,S,b){c.fromBufferAttribute(i,w),h.fromBufferAttribute(i,S),u.fromBufferAttribute(i,b),d.fromBufferAttribute(s,w),f.fromBufferAttribute(s,S),p.fromBufferAttribute(s,b),h.sub(c),u.sub(c),f.sub(d),p.sub(d);const N=1/(f.x*p.y-p.x*f.y);isFinite(N)&&(m.copy(h).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(N),g.copy(u).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(N),a[w].add(m),a[S].add(m),a[b].add(m),l[w].add(g),l[S].add(g),l[b].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let w=0,S=x.length;w<S;++w){const b=x[w],N=b.start,z=b.count;for(let L=N,k=N+z;L<k;L+=3)y(e.getX(L+0),e.getX(L+1),e.getX(L+2))}const _=new G,v=new G,A=new G,T=new G;function M(w){A.fromBufferAttribute(n,w),T.copy(A);const S=a[w];_.copy(S),_.sub(A.multiplyScalar(A.dot(S))).normalize(),v.crossVectors(T,S);const N=v.dot(l[w])<0?-1:1;r.setXYZW(w,_.x,_.y,_.z,N)}for(let w=0,S=x.length;w<S;++w){const b=x[w],N=b.start,z=b.count;for(let L=N,k=N+z;L<k;L+=3)M(e.getX(L+0)),M(e.getX(L+1)),M(e.getX(L+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new In(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new G,s=new G,r=new G,a=new G,l=new G,c=new G,h=new G,u=new G;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),m=e.getX(d+1),g=e.getX(d+2);n.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),r.fromBufferAttribute(t,g),h.subVectors(r,s),u.subVectors(n,s),h.cross(u),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),c.fromBufferAttribute(i,g),a.add(h),l.add(h),c.add(h),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(m,l.x,l.y,l.z),i.setXYZ(g,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)n.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),r.fromBufferAttribute(t,d+2),h.subVectors(r,s),u.subVectors(n,s),h.cross(u),i.setXYZ(d+0,h.x,h.y,h.z),i.setXYZ(d+1,h.x,h.y,h.z),i.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)pi.fromBufferAttribute(e,t),pi.normalize(),e.setXYZ(t,pi.x,pi.y,pi.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,p=0;for(let m=0,g=l.length;m<g;m++){a.isInterleavedBufferAttribute?f=l[m]*a.data.stride+a.offset:f=l[m]*h;for(let y=0;y<h;y++)d[p++]=c[f++]}return new In(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Ko,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=e(d,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,l=r.length;a<l;a++){const c=r[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(e.data))}h.length>0&&(n[l]=h,s=!0)}s&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const s=e.morphAttributes;for(const c in s){const h=[],u=s[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const r=e.groups;for(let c=0,h=r.length;c<h;c++){const u=r[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const bv=new Gt,co=new mL,Cu=new gx,Sv=new G,Ru=new G,Nu=new G,Pu=new G,Em=new G,Iu=new G,Mv=new G,Du=new G;class Vo extends yi{constructor(e=new Ko,t=new ep){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=n.length;s<r;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,r=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(s&&a){Iu.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const h=a[l],u=s[l];h!==0&&(Em.fromBufferAttribute(u,e),r?Iu.addScaledVector(Em,h):Iu.addScaledVector(Em.sub(t),h))}t.add(Iu)}return t}raycast(e,t){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Cu.copy(i.boundingSphere),Cu.applyMatrix4(s),co.copy(e.ray).recast(e.near),!(Cu.containsPoint(co.origin)===!1&&(co.intersectSphere(Cu,Sv)===null||co.origin.distanceToSquared(Sv)>(e.far-e.near)**2))&&(bv.copy(s).invert(),co.copy(e.ray).applyMatrix4(bv),!(i.boundingBox!==null&&co.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,co)))}_computeIntersections(e,t,i){let n;const s=this.geometry,r=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,h=s.attributes.uv1,u=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const g=d[p],y=r[g.materialIndex],x=Math.max(g.start,f.start),_=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let v=x,A=_;v<A;v+=3){const T=a.getX(v),M=a.getX(v+1),w=a.getX(v+2);n=Lu(this,y,e,i,c,h,u,T,M,w),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),m=Math.min(a.count,f.start+f.count);for(let g=p,y=m;g<y;g+=3){const x=a.getX(g),_=a.getX(g+1),v=a.getX(g+2);n=Lu(this,r,e,i,c,h,u,x,_,v),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(r))for(let p=0,m=d.length;p<m;p++){const g=d[p],y=r[g.materialIndex],x=Math.max(g.start,f.start),_=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let v=x,A=_;v<A;v+=3){const T=v,M=v+1,w=v+2;n=Lu(this,y,e,i,c,h,u,T,M,w),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),m=Math.min(l.count,f.start+f.count);for(let g=p,y=m;g<y;g+=3){const x=g,_=g+1,v=g+2;n=Lu(this,r,e,i,c,h,u,x,_,v),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}}}function AL(o,e,t,i,n,s,r,a){let l;if(e.side===Zn?l=i.intersectTriangle(r,s,n,!0,a):l=i.intersectTriangle(n,s,r,e.side===cl,a),l===null)return null;Du.copy(a),Du.applyMatrix4(o.matrixWorld);const c=t.ray.origin.distanceTo(Du);return c<t.near||c>t.far?null:{distance:c,point:Du.clone(),object:o}}function Lu(o,e,t,i,n,s,r,a,l,c){o.getVertexPosition(a,Ru),o.getVertexPosition(l,Nu),o.getVertexPosition(c,Pu);const h=AL(o,e,t,i,Ru,Nu,Pu,Mv);if(h){const u=new G;Xn.getBarycoord(Mv,Ru,Nu,Pu,u),n&&(h.uv=Xn.getInterpolatedAttribute(n,a,l,c,u,new _t)),s&&(h.uv1=Xn.getInterpolatedAttribute(s,a,l,c,u,new _t)),r&&(h.normal=Xn.getInterpolatedAttribute(r,a,l,c,u,new G),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new G,materialIndex:0};Xn.getNormal(Ru,Nu,Pu,d.normal),h.face=d,h.barycoord=u}return h}class gh extends Ko{constructor(e=1,t=1,i=1,n=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:s,depthSegments:r};const a=this;n=Math.floor(n),s=Math.floor(s),r=Math.floor(r);const l=[],c=[],h=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,i,t,e,r,s,0),p("z","y","x",1,-1,i,t,-e,r,s,1),p("x","z","y",1,1,e,i,t,n,r,2),p("x","z","y",1,-1,e,i,-t,n,r,3),p("x","y","z",1,-1,e,t,i,n,s,4),p("x","y","z",-1,-1,e,t,-i,n,s,5),this.setIndex(l),this.setAttribute("position",new Zs(c,3)),this.setAttribute("normal",new Zs(h,3)),this.setAttribute("uv",new Zs(u,2));function p(m,g,y,x,_,v,A,T,M,w,S){const b=v/M,N=A/w,z=v/2,L=A/2,k=T/2,q=M+1,H=w+1;let ae=0,X=0;const le=new G;for(let ue=0;ue<H;ue++){const xe=ue*N-L;for(let $e=0;$e<q;$e++){const tt=$e*b-z;le[m]=tt*x,le[g]=xe*_,le[y]=k,c.push(le.x,le.y,le.z),le[m]=0,le[g]=0,le[y]=T>0?1:-1,h.push(le.x,le.y,le.z),u.push($e/M),u.push(1-ue/w),ae+=1}}for(let ue=0;ue<w;ue++)for(let xe=0;xe<M;xe++){const $e=d+xe+q*ue,tt=d+xe+q*(ue+1),J=d+(xe+1)+q*(ue+1),ce=d+(xe+1)+q*ue;l.push($e,tt,ce),l.push(tt,J,ce),X+=6}a.addGroup(f,X,S),f+=X,d+=ae}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new gh(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function VT(o){const e={};for(const t in o){e[t]={};for(const i in o[t]){const n=o[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function EL(o){const e=[];for(let t=0;t<o.length;t++)e.push(o[t].clone());return e}var CL=`
void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}
`,RL=`
void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}
`;class NL extends hn{static get type(){return"ShaderMaterial"}constructor(e){super(),this.isShaderMaterial=!0,this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=CL,this.fragmentShader=RL,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=VT(e.uniforms),this.uniformsGroups=EL(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class HT extends yi{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Gt,this.projectionMatrix=new Gt,this.projectionMatrixInverse=new Gt,this.coordinateSystem=qn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const vr=new G,Tv=new _t,wv=new _t;class Us extends HT{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Gc*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(gc*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Gc*2*Math.atan(Math.tan(gc*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){vr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(vr.x,vr.y).multiplyScalar(-e/vr.z),vr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(vr.x,vr.y).multiplyScalar(-e/vr.z)}getViewSize(e,t){return this.getViewBounds(e,Tv,wv),t.subVectors(wv,Tv)}setViewOffset(e,t,i,n,s,r){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(gc*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,s=-.5*n;const r=this.view;if(this.view!==null&&this.view.enabled){const l=r.fullWidth,c=r.fullHeight;s+=r.offsetX*n/l,t-=r.offsetY*i/c,n*=r.width/l,i*=r.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Na=-90,Pa=1;class WT extends yi{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new Us(Na,Pa,e,t);n.layers=this.layers,this.add(n);const s=new Us(Na,Pa,e,t);s.layers=this.layers,this.add(s);const r=new Us(Na,Pa,e,t);r.layers=this.layers,this.add(r);const a=new Us(Na,Pa,e,t);a.layers=this.layers,this.add(a);const l=new Us(Na,Pa,e,t);l.layers=this.layers,this.add(l);const c=new Us(Na,Pa,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,s,r,a,l]=t;for(const c of t)this.remove(c);if(e===qn)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Go)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,r,a,l,c,h]=this.children,u=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const m=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,s),e.setRenderTarget(i,1,n),e.render(t,r),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=m,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(u,d,f),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class yx extends Zi{constructor(e,t,i,n,s,r,a,l,c,h){e=e!==void 0?e:[],t=t!==void 0?t:zo,super(e,t,i,n,s,r,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class PL extends dL{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new yx(n,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:wn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new gh(5,5,5),s=new NL({name:"CubemapFromEquirect",uniforms:VT(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Zn,blending:hl});s.uniforms.tEquirect.value=t;const r=new Vo(n,s),a=t.minFilter;return t.minFilter===$s&&(t.minFilter=wn),new WT(1,10,this).update(e,r),t.minFilter=a,r.geometry.dispose(),r.material.dispose(),this}clear(e,t,i,n){const s=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,i,n);e.setRenderTarget(s)}}class $T extends yi{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Kn,this.environmentIntensity=1,this.environmentRotation=new Kn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class XT{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=cf,this.updateRanges=[],this.version=0,this.uuid=qs()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,s=this.stride;n<s;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=qs()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=qs()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Gi=new G;class xx{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)Gi.fromBufferAttribute(this,t),Gi.applyMatrix4(e),this.setXYZ(t,Gi.x,Gi.y,Gi.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Gi.fromBufferAttribute(this,t),Gi.applyNormalMatrix(e),this.setXYZ(t,Gi.x,Gi.y,Gi.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Gi.fromBufferAttribute(this,t),Gi.transformDirection(e),this.setXYZ(t,Gi.x,Gi.y,Gi.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=Xi(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=nt(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=nt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Xi(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Xi(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Xi(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Xi(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=nt(t,this.array),i=nt(i,this.array),n=nt(n,this.array),s=nt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return new In(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new xx(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class qT extends hn{static get type(){return"SpriteMaterial"}constructor(e){super(),this.isSpriteMaterial=!0,this.color=new Rt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class IL extends Zi{constructor(e=null,t=1,i=1,n,s,r,a,l,c=Oi,h=Oi,u,d){super(null,r,a,l,c,h,n,s,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class DL extends In{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Cm=new G,LL=new G,FL=new dn;class Tr{constructor(e=new G(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=Cm.subVectors(i,t).cross(LL.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Cm),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||FL.getNormalMatrix(e),n=this.coplanarPoint(Cm).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ho=new gx,Fu=new G;class YT{constructor(e=new Tr,t=new Tr,i=new Tr,n=new Tr,s=new Tr,r=new Tr){this.planes=[e,t,i,n,s,r]}set(e,t,i,n,s,r){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(s),a[5].copy(r),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=qn){const i=this.planes,n=e.elements,s=n[0],r=n[1],a=n[2],l=n[3],c=n[4],h=n[5],u=n[6],d=n[7],f=n[8],p=n[9],m=n[10],g=n[11],y=n[12],x=n[13],_=n[14],v=n[15];if(i[0].setComponents(l-s,d-c,g-f,v-y).normalize(),i[1].setComponents(l+s,d+c,g+f,v+y).normalize(),i[2].setComponents(l+r,d+h,g+p,v+x).normalize(),i[3].setComponents(l-r,d-h,g-p,v-x).normalize(),i[4].setComponents(l-a,d-u,g-m,v-_).normalize(),t===qn)i[5].setComponents(l+a,d+u,g+m,v+_).normalize();else if(t===Go)i[5].setComponents(a,u,m,_).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ho.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ho.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ho)}intersectsSprite(e){return ho.center.set(0,0,0),ho.radius=.7071067811865476,ho.applyMatrix4(e.matrixWorld),this.intersectsSphere(ho)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(Fu.x=n.normal.x>0?e.max.x:e.min.x,Fu.y=n.normal.y>0?e.max.y:e.min.y,Fu.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(Fu)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class _x extends hn{static get type(){return"LineBasicMaterial"}constructor(e){super(),this.isLineBasicMaterial=!0,this.color=new Rt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}class ZT extends hn{static get type(){return"PointsMaterial"}constructor(e){super(),this.isPointsMaterial=!0,this.color=new Rt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}class UL extends Zi{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Oi,this.minFilter=Oi,this.generateMipmaps=!1,this.needsUpdate=!0}}class Ml extends Zi{constructor(e,t,i,n,s,r,a,l,c,h=Do){if(h!==Do&&h!==dl)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===Do&&(i=Ti),i===void 0&&h===dl&&(i=fh),super(null,n,s,r,a,l,h,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:Oi,this.minFilter=l!==void 0?l:Oi,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class vx extends Ko{constructor(e=1,t=32,i=16,n=0,s=Math.PI*2,r=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:s,thetaStart:r,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(r+a,Math.PI);let c=0;const h=[],u=new G,d=new G,f=[],p=[],m=[],g=[];for(let y=0;y<=i;y++){const x=[],_=y/i;let v=0;y===0&&r===0?v=.5/t:y===i&&l===Math.PI&&(v=-.5/t);for(let A=0;A<=t;A++){const T=A/t;u.x=-e*Math.cos(n+T*s)*Math.sin(r+_*a),u.y=e*Math.cos(r+_*a),u.z=e*Math.sin(n+T*s)*Math.sin(r+_*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),m.push(d.x,d.y,d.z),g.push(T+v,1-_),x.push(c++)}h.push(x)}for(let y=0;y<i;y++)for(let x=0;x<t;x++){const _=h[y][x+1],v=h[y][x],A=h[y+1][x],T=h[y+1][x+1];(y!==0||r>0)&&f.push(_,v,T),(y!==i-1||l<Math.PI)&&f.push(v,A,T)}this.setIndex(f),this.setAttribute("position",new Zs(p,3)),this.setAttribute("normal",new Zs(m,3)),this.setAttribute("uv",new Zs(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vx(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class KT extends hn{static get type(){return"ShadowMaterial"}constructor(e){super(),this.isShadowMaterial=!0,this.color=new Rt(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class bx extends hn{static get type(){return"MeshStandardMaterial"}constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.color=new Rt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new _t(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Kn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class jT extends bx{static get type(){return"MeshPhysicalMaterial"}constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new _t(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ai(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Rt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Rt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Rt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class JT extends hn{static get type(){return"MeshPhongMaterial"}constructor(e){super(),this.isMeshPhongMaterial=!0,this.color=new Rt(16777215),this.specular=new Rt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new _t(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Kn,this.combine=Qf,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class QT extends hn{static get type(){return"MeshToonMaterial"}constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.color=new Rt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new _t(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class ew extends hn{static get type(){return"MeshNormalMaterial"}constructor(e){super(),this.isMeshNormalMaterial=!0,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new _t(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class tw extends hn{static get type(){return"MeshLambertMaterial"}constructor(e){super(),this.isMeshLambertMaterial=!0,this.color=new Rt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Rt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new _t(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Kn,this.combine=Qf,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class iw extends hn{static get type(){return"MeshMatcapMaterial"}constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.color=new Rt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Or,this.normalScale=new _t(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class nw extends _x{static get type(){return"LineDashedMaterial"}constructor(e){super(),this.isLineDashedMaterial=!0,this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}class jo extends yi{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Rt(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class BL extends jo{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(yi.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Rt(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Rm=new Gt,Av=new G,Ev=new G;class Sx{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new _t(512,512),this.map=null,this.mapPass=null,this.matrix=new Gt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new YT,this._frameExtents=new _t(1,1),this._viewportCount=1,this._viewports=[new Ct(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;Av.setFromMatrixPosition(e.matrixWorld),t.position.copy(Av),Ev.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Ev),t.updateMatrixWorld(),Rm.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rm),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Rm)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class OL extends Sx{constructor(){super(new Us(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=Gc*2*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(i!==t.fov||n!==t.aspect||s!==t.far)&&(t.fov=i,t.aspect=n,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class sw extends jo{constructor(e,t,i=0,n=Math.PI/3,s=0,r=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(yi.DEFAULT_UP),this.updateMatrix(),this.target=new yi,this.distance=i,this.angle=n,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new OL}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Cv=new Gt,Wl=new G,Nm=new G;class zL extends Sx{constructor(){super(new Us(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new _t(4,2),this._viewportCount=6,this._viewports=[new Ct(2,1,1,1),new Ct(0,1,1,1),new Ct(3,1,1,1),new Ct(1,1,1,1),new Ct(3,0,1,1),new Ct(1,0,1,1)],this._cubeDirections=[new G(1,0,0),new G(-1,0,0),new G(0,0,1),new G(0,0,-1),new G(0,1,0),new G(0,-1,0)],this._cubeUps=[new G(0,1,0),new G(0,1,0),new G(0,1,0),new G(0,1,0),new G(0,0,1),new G(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),Wl.setFromMatrixPosition(e.matrixWorld),i.position.copy(Wl),Nm.copy(i.position),Nm.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(Nm),i.updateMatrixWorld(),n.makeTranslation(-Wl.x,-Wl.y,-Wl.z),Cv.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Cv)}}class kL extends jo{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new zL}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Mx extends HT{constructor(e=-1,t=1,i=1,n=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,s,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-e,r=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,r=s+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(s,r,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class GL extends Sx{constructor(){super(new Mx(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class VL extends jo{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(yi.DEFAULT_UP),this.updateMatrix(),this.target=new yi,this.shadow=new GL}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class HL extends jo{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class WL extends jo{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class $L{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new G)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,n=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.282095),t.addScaledVector(r[1],.488603*n),t.addScaledVector(r[2],.488603*s),t.addScaledVector(r[3],.488603*i),t.addScaledVector(r[4],1.092548*(i*n)),t.addScaledVector(r[5],1.092548*(n*s)),t.addScaledVector(r[6],.315392*(3*s*s-1)),t.addScaledVector(r[7],1.092548*(i*s)),t.addScaledVector(r[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){const i=e.x,n=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.886227),t.addScaledVector(r[1],2*.511664*n),t.addScaledVector(r[2],2*.511664*s),t.addScaledVector(r[3],2*.511664*i),t.addScaledVector(r[4],2*.429043*i*n),t.addScaledVector(r[5],2*.429043*n*s),t.addScaledVector(r[6],.743125*s*s-.247708),t.addScaledVector(r[7],2*.429043*i*s),t.addScaledVector(r[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+n*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+n*3);return e}static getBasisAt(e,t){const i=e.x,n=e.y,s=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*s,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*i*s,t[8]=.546274*(i*i-n*n)}}class XL extends jo{constructor(e=new $L,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class qL extends XT{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}const YL=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class ZL{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=YL,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}getRenderObjectData(e){let t=this.renderObjects.get(e);if(t===void 0){const{geometry:i,material:n}=e;if(t={material:this.getMaterialData(n),geometry:{attributes:this.getAttributesData(i.attributes),indexVersion:i.index?i.index.version:null,drawRange:{start:i.drawRange.start,count:i.drawRange.count}},worldMatrix:e.object.matrixWorld.clone()},e.object.center&&(t.center=e.object.center.clone()),e.object.morphTargetInfluences&&(t.morphTargetInfluences=e.object.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),t.material.transmission>0){const{width:s,height:r}=e.context;t.bufferWidth=s,t.bufferHeight=r}this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const i in e){const n=e[i];t[i]={version:n.version}}return t}containsNode(e){const t=e.material;for(const i in t)if(t[i]&&t[i].isNode)return!0;return e.renderer.nodes.modelViewMatrix!==null||e.renderer.nodes.modelNormalViewMatrix!==null}getMaterialData(e){const t={};for(const i of this.refreshUniforms){const n=e[i];n!=null&&(typeof n=="object"&&n.clone!==void 0?n.isTexture===!0?t[i]={id:n.id,version:n.version}:t[i]=n.clone():t[i]=n)}return t}equals(e){const{object:t,material:i,geometry:n}=e,s=this.getRenderObjectData(e);if(s.worldMatrix.equals(t.matrixWorld)!==!0)return s.worldMatrix.copy(t.matrixWorld),!1;const r=s.material;for(const m in r){const g=r[m],y=i[m];if(g.equals!==void 0){if(g.equals(y)===!1)return g.copy(y),!1}else if(y.isTexture===!0){if(g.id!==y.id||g.version!==y.version)return g.id=y.id,g.version=y.version,!1}else if(g!==y)return r[m]=y,!1}if(r.transmission>0){const{width:m,height:g}=e.context;if(s.bufferWidth!==m||s.bufferHeight!==g)return s.bufferWidth=m,s.bufferHeight=g,!1}const a=s.geometry,l=n.attributes,c=a.attributes,h=Object.keys(c),u=Object.keys(l);if(h.length!==u.length)return s.geometry.attributes=this.getAttributesData(l),!1;for(const m of h){const g=c[m],y=l[m];if(y===void 0)return delete c[m],!1;if(g.version!==y.version)return g.version=y.version,!1}const d=n.index,f=a.indexVersion,p=d?d.version:null;if(f!==p)return a.indexVersion=p,!1;if(a.drawRange.start!==n.drawRange.start||a.drawRange.count!==n.drawRange.count)return a.drawRange.start=n.drawRange.start,a.drawRange.count=n.drawRange.count,!1;if(s.morphTargetInfluences){let m=!1;for(let g=0;g<s.morphTargetInfluences.length;g++)s.morphTargetInfluences[g]!==t.morphTargetInfluences[g]&&(m=!0);if(m)return!0}return s.center&&s.center.equals(t.center)===!1?(s.center.copy(t.center),!0):(e.bundle!==null&&(s.version=e.bundle.version),!0)}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e))return!0;const{renderId:i}=t;if(this.renderId!==i)return this.renderId=i,!0;const n=e.object.static===!0,s=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;return n||s?!1:this.equals(e)!==!0}}function Vc(o,e=0){let t=3735928559^e,i=1103547991^e;if(o instanceof Array)for(let n=0,s;n<o.length;n++)s=o[n],t=Math.imul(t^s,2654435761),i=Math.imul(i^s,1597334677);else for(let n=0,s;n<o.length;n++)s=o.charCodeAt(n),t=Math.imul(t^s,2654435761),i=Math.imul(i^s,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(i^i>>>13,3266489909),i=Math.imul(i^i>>>16,2246822507),i^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&i)+(t>>>0)}const KL=o=>Vc(o),rw=o=>Vc(o),hf=(...o)=>Vc(o);function ow(o,e=!1){const t=[];o.isNode===!0&&(t.push(o.id),o=o.getSelf());for(const{property:i,childNode:n}of uf(o))t.push(t,Vc(i.slice(0,-4)),n.getCacheKey(e));return Vc(t)}function*uf(o,e=!1){for(const t in o){if(t.startsWith("_")===!0)continue;const i=o[t];if(Array.isArray(i)===!0)for(let n=0;n<i.length;n++){const s=i[n];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:n,childNode:s})}else if(i&&i.isNode===!0)yield{property:t,childNode:i};else if(typeof i=="object")for(const n in i){const s=i[n];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:n,childNode:s})}}}function df(o){if(o==null)return null;const e=typeof o;return o.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":o.isVector2===!0?"vec2":o.isVector3===!0?"vec3":o.isVector4===!0?"vec4":o.isMatrix3===!0?"mat3":o.isMatrix4===!0?"mat4":o.isColor===!0?"color":o instanceof ArrayBuffer?"ArrayBuffer":null}function aw(o,...e){const t=o?o.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),o==="color"?new Rt(...e):t==="vec2"?new _t(...e):t==="vec3"?new G(...e):t==="vec4"?new Ct(...e):t==="mat3"?new dn(...e):t==="mat4"?new Gt(...e):o==="bool"?e[0]||!1:o==="float"||o==="int"||o==="uint"?e[0]||0:o==="string"?e[0]||"":o==="ArrayBuffer"?JL(e[0]):null}function jL(o){let e="";const t=new Uint8Array(o);for(let i=0;i<t.length;i++)e+=String.fromCharCode(t[i]);return btoa(e)}function JL(o){return Uint8Array.from(atob(o),e=>e.charCodeAt(0)).buffer}const Rv={VERTEX:"vertex",FRAGMENT:"fragment"},ut={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},QL=["fragment","vertex"],Nv=["setup","analyze","generate"],Pv=[...QL,"compute"],Tl=["x","y","z","w"];let eF=0;class st extends bl{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=ut.NONE,this.updateBeforeType=ut.NONE,this.updateAfterType=ut.NONE,this.uuid=rL.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:eF++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,ut.FRAME)}onRenderUpdate(e){return this.onUpdate(e,ut.RENDER)}onObjectUpdate(e){return this.onUpdate(e,ut.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of uf(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=ow(this,e),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let i=0;for(const n of this.getChildren())t["node"+i++]=n;return null}analyze(e){if(e.increaseUsage(this)===1){const i=e.getNodeProperties(this);for(const n of Object.values(i))n&&n.isNode===!0&&n.build(e)}}generate(e,t){const{outputNode:i}=e.getNodeProperties(this);if(i&&i.isNode===!0)return i.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const i=this.getShared(e);if(this!==i)return i.build(e,t);e.addNode(this),e.addChain(this);let n=null;const s=e.getBuildStage();if(s==="setup"){this.updateReference(e);const r=e.getNodeProperties(this);if(r.initialized!==!0){const a=e.stack.nodes.length;r.initialized=!0,r.outputNode=this.setup(e),r.outputNode!==null&&e.stack.nodes.length;for(const l of Object.values(r))l&&l.isNode===!0&&l.build(e)}}else if(s==="analyze")this.analyze(e);else if(s==="generate")if(this.generate.length===1){const a=this.getNodeType(e),l=e.getDataFromNode(this);n=l.snippet,n===void 0?(n=this.generate(e)||"",l.snippet=n):l.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),n=e.format(n,a,t)}else n=this.generate(e,t)||"";return e.removeChain(this),e.addSequentialNode(this),n}getSerializeChildren(){return uf(this)}serialize(e){const t=this.getSerializeChildren(),i={};for(const{property:n,index:s,childNode:r}of t)s!==void 0?(i[n]===void 0&&(i[n]=Number.isInteger(s)?[]:{}),i[n][s]=r.toJSON(e.meta).uuid):i[n]=r.toJSON(e.meta).uuid;Object.keys(i).length>0&&(e.inputNodes=i)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const i in e.inputNodes)if(Array.isArray(e.inputNodes[i])){const n=[];for(const s of e.inputNodes[i])n.push(t[s]);this[i]=n}else if(typeof e.inputNodes[i]=="object"){const n={};for(const s in e.inputNodes[i]){const r=e.inputNodes[i][s];n[s]=t[r]}this[i]=n}else{const n=e.inputNodes[i];this[i]=t[n]}}}toJSON(e){const{uuid:t,type:i}=this,n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{},nodes:{}});let s=e.nodes[t];s===void 0&&(s={uuid:t,type:i,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},n!==!0&&(e.nodes[s.uuid]=s),this.serialize(s),delete s.meta);function r(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}if(n){const a=r(e.textures),l=r(e.images),c=r(e.nodes);a.length>0&&(s.textures=a),l.length>0&&(s.images=l),c.length>0&&(s.nodes=c)}return s}}class yh extends st{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.node.build(e),i=this.indexNode.build(e,"uint");return`${t}[ ${i} ]`}}class lw extends st{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let i=null;for(const n of this.convertTo.split("|"))(i===null||e.getTypeLength(t)===e.getTypeLength(n))&&(i=n);return i}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const i=this.node,n=this.getNodeType(e),s=i.build(e,n);return e.format(s,n,t)}}class oi extends st{static get type(){return"TempNode"}constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const n=e.getVectorType(this.getNodeType(e,t)),s=e.getDataFromNode(this);if(s.propertyName!==void 0)return e.format(s.propertyName,n,t);if(n!=="void"&&t!=="void"&&this.hasDependencies(e)){const r=super.build(e,n),a=e.getVarFromNode(this,null,n),l=e.getPropertyName(a);return e.addLineFlowCode(`${l} = ${r}`,this),s.snippet=r,s.propertyName=l,e.format(s.propertyName,n,t)}}return super.build(e,t)}}class tF extends oi{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,i)=>t+e.getTypeLength(i.getNodeType(e)),0))}generate(e,t){const i=this.getNodeType(e),n=this.nodes,s=e.getComponentType(i),r=[];for(const l of n){let c=l.build(e);const h=e.getComponentType(l.getNodeType(e));h!==s&&(c=e.format(c,h,s)),r.push(c)}const a=`${e.getType(i)}( ${r.join(", ")} )`;return e.format(a,i,t)}}const iF=Tl.join("");class Iv extends st{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(Tl.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const i=this.node,n=e.getTypeLength(i.getNodeType(e));let s=null;if(n>1){let r=null;this.getVectorLength()>=n&&(r=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const l=i.build(e,r);this.components.length===n&&this.components===iF.slice(0,this.components.length)?s=e.format(l,r,t):s=e.format(`${l}.${this.components}`,this.getNodeType(e),t)}else s=i.build(e,t);return s}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class nF extends oi{static get type(){return"SetNode"}constructor(e,t,i){super(),this.sourceNode=e,this.components=t,this.targetNode=i}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:i,targetNode:n}=this,s=this.getNodeType(e),r=e.getTypeFromLength(i.length,n.getNodeType(e)),a=n.build(e,r),l=t.build(e,s),c=e.getTypeLength(s),h=[];for(let u=0;u<c;u++){const d=Tl[u];d===i[0]?(h.push(a),u+=i.length-1):h.push(l+"."+d)}return`${e.getType(s)}( ${h.join(", ")} )`}}class sF extends oi{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:i}=this,n=this.getNodeType(e),s=i.build(e),r=e.getVarFromNode(this),a=e.getPropertyName(r);e.addLineFlowCode(a+" = "+s,this);const l=e.getTypeLength(n),c=[];let h=0;for(let u=0;u<l;u++){const d=Tl[u];d===t[h]?(c.push("1.0 - "+(a+"."+d)),h++):c.push(a+"."+d)}return`${e.getType(n)}( ${c.join(", ")} )`}}class Tx extends st{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?df(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=df(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=jL(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?aw(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}class nr extends Tx{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const i=this.getNodeType(e);return e.format(this.generateConst(e),i,t)}}let fl=null;const Ya=new Map;function j(o,e){if(Ya.has(o)){console.warn(`Redefinition of method chaining ${o}`);return}if(typeof e!="function")throw new Error(`Node element ${o} is not a function`);Ya.set(o,e)}const cw=o=>o.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Dv=o=>cw(o).split("").sort().join(""),hw={setup(o,e){const t=e.shift();return o(np(t),...e)},get(o,e,t){if(typeof e=="string"&&o[e]===void 0){if(o.isStackNode!==!0&&e==="assign")return(...i)=>(fl.assign(t,...i),t);if(Ya.has(e)){const i=Ya.get(e);return o.isStackNode?(...n)=>t.add(i(...n)):(...n)=>i(t,...n)}else{if(e==="self")return o;if(e.endsWith("Assign")&&Ya.has(e.slice(0,e.length-6))){const i=Ya.get(e.slice(0,e.length-6));return o.isStackNode?(...n)=>t.assign(n[0],i(...n)):(...n)=>t.assign(i(t,...n))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0)return e=cw(e),fe(new Iv(t,e));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Dv(e.slice(3).toLowerCase()),i=>fe(new nF(o,e,i));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Dv(e.slice(4).toLowerCase()),()=>fe(new sF(fe(o),e));if(e==="width"||e==="height"||e==="depth")return e==="width"?e="x":e==="height"?e="y":e==="depth"&&(e="z"),fe(new Iv(o,e));if(/^\d+$/.test(e)===!0)return fe(new yh(t,new nr(Number(e),"uint")))}}}return Reflect.get(o,e,t)},set(o,e,t,i){return typeof e=="string"&&o[e]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0||e==="width"||e==="height"||e==="depth"||/^\d+$/.test(e)===!0)?(i[e].assign(t),!0):Reflect.set(o,e,t,i)}},Pm=new WeakMap,Lv=new WeakMap,rF=function(o,e=null){const t=df(o);if(t==="node"){let i=Pm.get(o);return i===void 0&&(i=new Proxy(o,hw),Pm.set(o,i),Pm.set(i,i)),i}else{if(e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string")return fe(ty(o,e));if(t==="shader")return be(o)}return o},oF=function(o,e=null){for(const t in o)o[t]=fe(o[t],e);return o},aF=function(o,e=null){const t=o.length;for(let i=0;i<t;i++)o[i]=fe(o[i],e);return o},lF=function(o,e=null,t=null,i=null){const n=s=>fe(i!==null?Object.assign(s,i):s);return e===null?(...s)=>n(new o(...nl(s))):t!==null?(t=fe(t),(...s)=>n(new o(e,...nl(s),t))):(...s)=>n(new o(e,...nl(s)))},cF=function(o,...e){return fe(new o(...nl(e)))};class hF extends st{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}call(e){const{shaderNode:t,inputNodes:i}=this,n=e.getNodeProperties(t);if(n.onceOutput)return n.onceOutput;let s=null;if(t.layout){let r=Lv.get(e.constructor);r===void 0&&(r=new WeakMap,Lv.set(e.constructor,r));let a=r.get(t);a===void 0&&(a=fe(e.buildFunctionNode(t)),r.set(t,a)),e.currentFunctionNode!==null&&e.currentFunctionNode.includes.push(a),s=fe(a.call(i))}else{const r=t.jsFunc,a=i!==null?r(i,e):r(e);s=fe(a)}return t.once&&(n.onceOutput=s),s}getOutputNode(e){const t=e.getNodeProperties(this);return t.outputNode===null&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class uF extends st{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return np(e),fe(new hF(this,e))}setup(){return this.call()}}const dF=[!1,!0],fF=[0,1,2,3],pF=[-1,-2],uw=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],wx=new Map;for(const o of dF)wx.set(o,new nr(o));const Ax=new Map;for(const o of fF)Ax.set(o,new nr(o,"uint"));const Ex=new Map([...Ax].map(o=>new nr(o.value,"int")));for(const o of pF)Ex.set(o,new nr(o,"int"));const tp=new Map([...Ex].map(o=>new nr(o.value)));for(const o of uw)tp.set(o,new nr(o));for(const o of uw)tp.set(-o,new nr(-o));const ip={bool:wx,uint:Ax,ints:Ex,float:tp},Fv=new Map([...wx,...tp]),ty=(o,e)=>Fv.has(o)?Fv.get(o):o.isNode===!0?o:new nr(o,e),mF=o=>{try{return o.getNodeType()}catch{return}},ai=function(o,e=null){return(...t)=>{if((t.length===0||!["bool","float","int","uint"].includes(o)&&t.every(n=>typeof n!="object"))&&(t=[aw(o,...t)]),t.length===1&&e!==null&&e.has(t[0]))return fe(e.get(t[0]));if(t.length===1){const n=ty(t[0],o);return mF(n)===o?fe(n):fe(new lw(n,o))}const i=t.map(n=>ty(n));return fe(new tF(i,o))}},Uv=o=>typeof o=="object"&&o!==null?o.value:o,gF=o=>o!=null?o.nodeType||o.convertTo||(typeof o=="string"?o:null):null;function ld(o,e){return new Proxy(new uF(o,e),hw)}const fe=(o,e=null)=>rF(o,e),np=(o,e=null)=>new oF(o,e),nl=(o,e=null)=>new aF(o,e),ne=(...o)=>new lF(...o),ge=(...o)=>new cF(...o),be=(o,e)=>{const t=new ld(o,e),i=(...n)=>{let s;return np(n),n[0]&&n[0].isNode?s=[...n]:s=n[0],t.call(s)};return i.shaderNode=t,i.setLayout=n=>(t.setLayout(n),i),i.once=()=>(t.once=!0,i),i};j("toGlobal",o=>(o.global=!0,o));const ff=o=>{fl=o},dw=()=>fl,Ri=(...o)=>fl.If(...o);function yF(o){return fl&&fl.add(o),o}j("append",yF);const xF=new ai("color"),ee=new ai("float",ip.float),Zt=new ai("int",ip.ints),_F=new ai("uint",ip.uint),vF=new ai("bool",ip.bool),Se=new ai("vec2"),Bs=new ai("ivec2"),bF=new ai("uvec2"),SF=new ai("bvec2"),Q=new ai("vec3"),MF=new ai("ivec3"),TF=new ai("uvec3"),wF=new ai("bvec3"),Qe=new ai("vec4"),AF=new ai("ivec4"),EF=new ai("uvec4"),CF=new ai("bvec4"),Cx=new ai("mat2"),Ki=new ai("mat3"),sl=new ai("mat4");j("toColor",xF);j("toFloat",ee);j("toInt",Zt);j("toUint",_F);j("toBool",vF);j("toVec2",Se);j("toIVec2",Bs);j("toUVec2",bF);j("toBVec2",SF);j("toVec3",Q);j("toIVec3",MF);j("toUVec3",TF);j("toBVec3",wF);j("toVec4",Qe);j("toIVec4",AF);j("toUVec4",EF);j("toBVec4",CF);j("toMat2",Cx);j("toMat3",Ki);j("toMat4",sl);const RF=ne(yh),NF=(o,e)=>fe(new lw(fe(o),e));j("element",RF);j("convert",NF);class fw extends st{static get type(){return"UniformGroupNode"}constructor(e,t=!1,i=1){super("string"),this.name=e,this.version=0,this.shared=t,this.order=i,this.isUniformGroup=!0}set needsUpdate(e){e===!0&&this.version++}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const PF=o=>new fw(o),pw=(o,e=0)=>new fw(o,!0,e),IF=pw("frame"),mt=pw("render"),mw=PF("object");class xh extends Tx{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=mw}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const i=this.getSelf();return e=e.bind(i),super.onUpdate(n=>{const s=e(n,i);s!==void 0&&(this.value=s)},t)}generate(e,t){const i=this.getNodeType(e),n=this.getUniformHash(e);let s=e.getNodeFromHash(n);s===void 0&&(e.setHashNode(this,n),s=this);const r=s.getInputType(e),a=e.getUniformFromNode(s,r,e.shaderStage,this.name||e.context.label),l=e.getPropertyName(a);return e.context.label!==void 0&&delete e.context.label,e.format(l,i,t)}}const et=(o,e)=>{const t=gF(e||o),i=o&&o.isNode===!0?o.node&&o.node.value||o.value:o;return fe(new xh(i,t))};class Pt extends st{static get type(){return"PropertyNode"}constructor(e,t=null,i=!1){super(e),this.name=t,this.varying=i,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const za=(o,e)=>fe(new Pt(o,e)),pf=(o,e)=>fe(new Pt(o,e,!0)),Tt=ge(Pt,"vec4","DiffuseColor"),Bv=ge(Pt,"vec3","EmissiveColor"),Gs=ge(Pt,"float","Roughness"),mf=ge(Pt,"float","Metalness"),iy=ge(Pt,"float","Clearcoat"),gf=ge(Pt,"float","ClearcoatRoughness"),Za=ge(Pt,"vec3","Sheen"),Rx=ge(Pt,"float","SheenRoughness"),Nx=ge(Pt,"float","Iridescence"),gw=ge(Pt,"float","IridescenceIOR"),yw=ge(Pt,"float","IridescenceThickness"),ny=ge(Pt,"float","AlphaT"),go=ge(Pt,"float","Anisotropy"),cd=ge(Pt,"vec3","AnisotropyT"),rl=ge(Pt,"vec3","AnisotropyB"),vn=ge(Pt,"color","SpecularColor"),yf=ge(Pt,"float","SpecularF90"),sy=ge(Pt,"float","Shininess"),DF=ge(Pt,"vec4","Output"),Im=ge(Pt,"float","dashSize"),Ov=ge(Pt,"float","gapSize"),hd=ge(Pt,"float","IOR"),ry=ge(Pt,"float","Transmission"),xw=ge(Pt,"float","Thickness"),_w=ge(Pt,"float","AttenuationDistance"),vw=ge(Pt,"color","AttenuationColor"),bw=ge(Pt,"float","Dispersion");class LF extends oi{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const i=e.getTypeLength(t.node.getNodeType(e));return Tl.join("").slice(0,i)!==t.components}return!1}generate(e,t){const{targetNode:i,sourceNode:n}=this,s=this.needsSplitAssign(e),r=i.getNodeType(e),a=i.context({assign:!0}).build(e),l=n.build(e,r),c=n.getNodeType(e),h=e.getDataFromNode(this);let u;if(h.initialized===!0)t!=="void"&&(u=a);else if(s){const d=e.getVarFromNode(this,null,r),f=e.getPropertyName(d);e.addLineFlowCode(`${f} = ${l}`,this);const p=i.node.context({assign:!0}).build(e);for(let m=0;m<i.components.length;m++){const g=i.components[m];e.addLineFlowCode(`${p}.${g} = ${f}[ ${m} ]`,this)}t!=="void"&&(u=a)}else u=`${a} = ${l}`,(t==="void"||c==="void")&&(e.addLineFlowCode(u,this),t!=="void"&&(u=a));return h.initialized=!0,e.format(u,r,t)}}const FF=ne(LF);j("assign",FF);class UF extends oi{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],i=this.functionNode,n=i.getInputs(e),s=this.parameters,r=(l,c)=>{const h=c.type,u=h==="pointer";let d;return u?d="&"+l.build(e):d=l.build(e,h),d};if(Array.isArray(s))for(let l=0;l<s.length;l++)t.push(r(s[l],n[l]));else for(const l of n){const c=s[l.name];if(c!==void 0)t.push(r(c,l));else throw new Error(`FunctionCallNode: Input '${l.name}' not found in FunctionNode.`)}return`${i.build(e,"property")}( ${t.join(", ")} )`}}const BF=(o,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?nl(e):np(e[0]),fe(new UF(fe(o),e)));j("call",BF);class Vt extends oi{static get type(){return"OperatorNode"}constructor(e,t,i,...n){if(super(),n.length>0){let s=new Vt(e,t,i);for(let r=0;r<n.length-1;r++)s=new Vt(e,s,n[r]);t=s,i=n[n.length-1]}this.op=e,this.aNode=t,this.bNode=i}getNodeType(e,t){const i=this.op,n=this.aNode,s=this.bNode,r=n.getNodeType(e),a=typeof s<"u"?s.getNodeType(e):null;if(r==="void"||a==="void")return"void";if(i==="%")return r;if(i==="~"||i==="&"||i==="|"||i==="^"||i===">>"||i==="<<")return e.getIntegerType(r);if(i==="!"||i==="=="||i==="&&"||i==="||"||i==="^^")return"bool";if(i==="<"||i===">"||i==="<="||i===">="){const l=t?e.getTypeLength(t):Math.max(e.getTypeLength(r),e.getTypeLength(a));return l>1?`bvec${l}`:"bool"}else return r==="float"&&e.isMatrix(a)?a:e.isMatrix(r)&&e.isVector(a)?e.getVectorFromMatrix(r):e.isVector(r)&&e.isMatrix(a)?e.getVectorFromMatrix(a):e.getTypeLength(a)>e.getTypeLength(r)?a:r}generate(e,t){const i=this.op,n=this.aNode,s=this.bNode,r=this.getNodeType(e,t);let a=null,l=null;r!=="void"?(a=n.getNodeType(e),l=typeof s<"u"?s.getNodeType(e):null,i==="<"||i===">"||i==="<="||i===">="||i==="=="?e.isVector(a)?l=a:a!==l&&(a=l="float"):i===">>"||i==="<<"?(a=r,l=e.changeComponentType(l,"uint")):e.isMatrix(a)&&e.isVector(l)?l=e.getVectorFromMatrix(a):e.isVector(a)&&e.isMatrix(l)?a=e.getVectorFromMatrix(l):a=l=r):a=l=r;const c=n.build(e,a),h=typeof s<"u"?s.build(e,l):null,u=e.getTypeLength(t),d=e.getFunctionOperator(i);if(t!=="void")return i==="<"&&u>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${c}, ${h} )`,r,t):e.format(`( ${c} < ${h} )`,r,t):i==="<="&&u>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${c}, ${h} )`,r,t):e.format(`( ${c} <= ${h} )`,r,t):i===">"&&u>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${c}, ${h} )`,r,t):e.format(`( ${c} > ${h} )`,r,t):i===">="&&u>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${c}, ${h} )`,r,t):e.format(`( ${c} >= ${h} )`,r,t):i==="!"||i==="~"?e.format(`(${i}${c})`,a,t):d?e.format(`${d}( ${c}, ${h} )`,r,t):e.format(`( ${c} ${i} ${h} )`,r,t);if(a!=="void")return d?e.format(`${d}( ${c}, ${h} )`,r,t):e.format(`${c} ${i} ${h}`,r,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const ji=ne(Vt,"+"),bn=ne(Vt,"-"),dt=ne(Vt,"*"),zr=ne(Vt,"/"),Sw=ne(Vt,"%"),OF=ne(Vt,"=="),zF=ne(Vt,"!="),kF=ne(Vt,"<"),GF=ne(Vt,">"),VF=ne(Vt,"<="),HF=ne(Vt,">="),WF=ne(Vt,"&&"),$F=ne(Vt,"||"),XF=ne(Vt,"!"),qF=ne(Vt,"^^"),YF=ne(Vt,"&"),ZF=ne(Vt,"~"),KF=ne(Vt,"|"),jF=ne(Vt,"^"),JF=ne(Vt,"<<"),QF=ne(Vt,">>");j("add",ji);j("sub",bn);j("mul",dt);j("div",zr);j("modInt",Sw);j("equal",OF);j("notEqual",zF);j("lessThan",kF);j("greaterThan",GF);j("lessThanEqual",VF);j("greaterThanEqual",HF);j("and",WF);j("or",$F);j("not",XF);j("xor",qF);j("bitAnd",YF);j("bitNot",ZF);j("bitOr",KF);j("bitXor",jF);j("shiftLeft",JF);j("shiftRight",QF);const eU=(...o)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),Sw(...o));j("remainder",eU);class U extends oi{static get type(){return"MathNode"}constructor(e,t,i=null,n=null){super(),this.method=e,this.aNode=t,this.bNode=i,this.cNode=n}getInputType(e){const t=this.aNode.getNodeType(e),i=this.bNode?this.bNode.getNodeType(e):null,n=this.cNode?this.cNode.getNodeType(e):null,s=e.isMatrix(t)?0:e.getTypeLength(t),r=e.isMatrix(i)?0:e.getTypeLength(i),a=e.isMatrix(n)?0:e.getTypeLength(n);return s>r&&s>a?t:r>a?i:a>s?n:t}getNodeType(e){const t=this.method;return t===U.LENGTH||t===U.DISTANCE||t===U.DOT?"float":t===U.CROSS?"vec3":t===U.ALL?"bool":t===U.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===U.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){const i=this.method,n=this.getNodeType(e),s=this.getInputType(e),r=this.aNode,a=this.bNode,l=this.cNode,c=e.renderer.isWebGLRenderer===!0;if(i===U.TRANSFORM_DIRECTION){let h=r,u=a;e.isMatrix(h.getNodeType(e))?u=Qe(Q(u),0):h=Qe(Q(h),0);const d=dt(h,u).xyz;return Wc(d).build(e,t)}else{if(i===U.NEGATE)return e.format("( - "+r.build(e,s)+" )",n,t);if(i===U.ONE_MINUS)return bn(1,r).build(e,t);if(i===U.RECIPROCAL)return zr(1,r).build(e,t);if(i===U.DIFFERENCE)return $n(bn(r,a)).build(e,t);{const h=[];return i===U.CROSS||i===U.MOD?h.push(r.build(e,n),a.build(e,n)):c&&i===U.STEP?h.push(r.build(e,e.getTypeLength(r.getNodeType(e))===1?"float":s),a.build(e,s)):c&&(i===U.MIN||i===U.MAX)||i===U.MOD?h.push(r.build(e,s),a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":s)):i===U.REFRACT?h.push(r.build(e,s),a.build(e,s),l.build(e,"float")):i===U.MIX?h.push(r.build(e,s),a.build(e,s),l.build(e,e.getTypeLength(l.getNodeType(e))===1?"float":s)):(h.push(r.build(e,s)),a!==null&&h.push(a.build(e,s)),l!==null&&h.push(l.build(e,s))),e.format(`${e.getMethod(i,n)}( ${h.join(", ")} )`,n,t)}}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}U.ALL="all";U.ANY="any";U.EQUALS="equals";U.RADIANS="radians";U.DEGREES="degrees";U.EXP="exp";U.EXP2="exp2";U.LOG="log";U.LOG2="log2";U.SQRT="sqrt";U.INVERSE_SQRT="inversesqrt";U.FLOOR="floor";U.CEIL="ceil";U.NORMALIZE="normalize";U.FRACT="fract";U.SIN="sin";U.COS="cos";U.TAN="tan";U.ASIN="asin";U.ACOS="acos";U.ATAN="atan";U.ABS="abs";U.SIGN="sign";U.LENGTH="length";U.NEGATE="negate";U.ONE_MINUS="oneMinus";U.DFDX="dFdx";U.DFDY="dFdy";U.ROUND="round";U.RECIPROCAL="reciprocal";U.TRUNC="trunc";U.FWIDTH="fwidth";U.BITCAST="bitcast";U.TRANSPOSE="transpose";U.ATAN2="atan2";U.MIN="min";U.MAX="max";U.MOD="mod";U.STEP="step";U.REFLECT="reflect";U.DISTANCE="distance";U.DIFFERENCE="difference";U.DOT="dot";U.CROSS="cross";U.POW="pow";U.TRANSFORM_DIRECTION="transformDirection";U.MIX="mix";U.CLAMP="clamp";U.REFRACT="refract";U.SMOOTHSTEP="smoothstep";U.FACEFORWARD="faceforward";const tU=ee(1e-6),iU=ee(Math.PI),Mw=ne(U,U.ALL),nU=ne(U,U.ANY),sU=ne(U,U.EQUALS),rU=ne(U,U.RADIANS),oU=ne(U,U.DEGREES),Tw=ne(U,U.EXP),Hc=ne(U,U.EXP2),ww=ne(U,U.LOG),Ks=ne(U,U.LOG2),Px=ne(U,U.SQRT),aU=ne(U,U.INVERSE_SQRT),Lo=ne(U,U.FLOOR),Ix=ne(U,U.CEIL),Wc=ne(U,U.NORMALIZE),$r=ne(U,U.FRACT),Wn=ne(U,U.SIN),wr=ne(U,U.COS),lU=ne(U,U.TAN),cU=ne(U,U.ASIN),hU=ne(U,U.ACOS),uU=ne(U,U.ATAN),$n=ne(U,U.ABS),Aw=ne(U,U.SIGN),Lr=ne(U,U.LENGTH),dU=ne(U,U.NEGATE),fU=ne(U,U.ONE_MINUS),Ew=ne(U,U.DFDX),Cw=ne(U,U.DFDY),pU=ne(U,U.ROUND),mU=ne(U,U.RECIPROCAL),gU=ne(U,U.TRUNC),yU=ne(U,U.FWIDTH);U.BITCAST;const xU=ne(U,U.TRANSPOSE),_U=ne(U,U.ATAN2),$c=ne(U,U.MIN),Ln=ne(U,U.MAX),Rw=ne(U,U.MOD),Nw=ne(U,U.STEP),vU=ne(U,U.REFLECT),bU=ne(U,U.DISTANCE),SU=ne(U,U.DIFFERENCE),Dx=ne(U,U.DOT),Pw=ne(U,U.CROSS),sp=ne(U,U.POW),Iw=ne(U,U.POW,2),MU=ne(U,U.POW,3),TU=ne(U,U.POW,4),wU=ne(U,U.TRANSFORM_DIRECTION),AU=o=>dt(Aw(o),sp($n(o),1/3)),EU=o=>Dx(o,o),zt=ne(U,U.MIX),tr=(o,e=0,t=1)=>fe(new U(U.CLAMP,fe(o),fe(e),fe(t))),CU=o=>tr(o),Dw=ne(U,U.REFRACT),Ho=ne(U,U.SMOOTHSTEP),RU=ne(U,U.FACEFORWARD),NU=be(([o])=>{const i=43758.5453,n=Dx(o.xy,Se(12.9898,78.233)),s=Rw(n,iU);return $r(Wn(s).mul(i))}),PU=(o,e,t)=>zt(e,t,o),IU=(o,e,t)=>Ho(e,t,o);j("all",Mw);j("any",nU);j("equals",sU);j("radians",rU);j("degrees",oU);j("exp",Tw);j("exp2",Hc);j("log",ww);j("log2",Ks);j("sqrt",Px);j("inverseSqrt",aU);j("floor",Lo);j("ceil",Ix);j("normalize",Wc);j("fract",$r);j("sin",Wn);j("cos",wr);j("tan",lU);j("asin",cU);j("acos",hU);j("atan",uU);j("abs",$n);j("sign",Aw);j("length",Lr);j("lengthSq",EU);j("negate",dU);j("oneMinus",fU);j("dFdx",Ew);j("dFdy",Cw);j("round",pU);j("reciprocal",mU);j("trunc",gU);j("fwidth",yU);j("atan2",_U);j("min",$c);j("max",Ln);j("mod",Rw);j("step",Nw);j("reflect",vU);j("distance",bU);j("dot",Dx);j("cross",Pw);j("pow",sp);j("pow2",Iw);j("pow3",MU);j("pow4",TU);j("transformDirection",wU);j("mix",PU);j("clamp",tr);j("refract",Dw);j("smoothstep",IU);j("faceForward",RU);j("difference",SU);j("saturate",CU);j("cbrt",AU);j("transpose",xU);j("rand",NU);class DU extends st{static get type(){return"ConditionalNode"}constructor(e,t,i=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=i}getNodeType(e){const t=this.ifNode.getNodeType(e);if(this.elseNode!==null){const i=this.elseNode.getNodeType(e);if(e.getTypeLength(i)>e.getTypeLength(t))return i}return t}setup(e){const t=this.condNode.cache(),i=this.ifNode.cache(),n=this.elseNode?this.elseNode.cache():null,s=e.context.nodeBlock;e.getDataFromNode(i).parentNodeBlock=s,n!==null&&(e.getDataFromNode(n).parentNodeBlock=s);const r=e.getNodeProperties(this);r.condNode=t,r.ifNode=i.context({nodeBlock:i}),r.elseNode=n?n.context({nodeBlock:n}):null}generate(e,t){const i=this.getNodeType(e),n=e.getDataFromNode(this);if(n.nodeProperty!==void 0)return n.nodeProperty;const{condNode:s,ifNode:r,elseNode:a}=e.getNodeProperties(this),l=t!=="void",c=l?za(i).build(e):"";n.nodeProperty=c;const h=s.build(e,"bool");e.addFlowCode(`
${e.tab}if ( ${h} ) {

`).addFlowTab();let u=r.build(e,i);if(u&&(l?u=c+" = "+u+";":u="return "+u+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+u+`

`+e.tab+"}"),a!==null){e.addFlowCode(` else {

`).addFlowTab();let d=a.build(e,i);d&&(l?d=c+" = "+d+";":d="return "+d+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+d+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(c,i,t)}}const on=ne(DU);j("select",on);const LU=(...o)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),on(...o));j("cond",LU);class Lw extends st{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const i=this.node.build(e);return e.setContext(t),i}generate(e,t){const i=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e,t);return e.setContext(i),n}}const Lx=ne(Lw),FU=(o,e)=>Lx(o,{label:e});j("context",Lx);j("label",FU);class UU extends st{static get type(){return"VarNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:i}=this,n=e.getVarFromNode(this,i,e.getVectorType(this.getNodeType(e))),s=e.getPropertyName(n),r=t.build(e,n.type);return e.addLineFlowCode(`${s} = ${r}`,this),s}}const Fw=ne(UU);j("toVar",(...o)=>Fw(...o).append());const BU=o=>(console.warn('TSL: "temp" is deprecated. Use ".toVar()" instead.'),Fw(o));j("temp",BU);class OU extends st{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let i=t.varying;if(i===void 0){const n=this.name,s=this.getNodeType(e);t.varying=i=e.getVaryingFromNode(this,n,s),t.node=this.node}return i.needsInterpolation||(i.needsInterpolation=e.shaderStage==="fragment"),i}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),i=this.setupVarying(e);if(t.propertyName===void 0){const n=this.getNodeType(e),s=e.getPropertyName(i,Rv.VERTEX);e.flowNodeFromShaderStage(Rv.VERTEX,this.node,n,s),t.propertyName=s}return e.getPropertyName(i)}}const sr=ne(OU);j("varying",sr);const zU=be(([o])=>{const e=o.mul(.9478672986).add(.0521327014).pow(2.4),t=o.mul(.0773993808),i=o.lessThanEqual(.04045);return zt(e,t,i)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),kU=be(([o])=>{const e=o.pow(.41666).mul(1.055).sub(.055),t=o.mul(12.92),i=o.lessThanEqual(.0031308);return zt(e,t,i)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),_h="WorkingColorSpace",Fx="OutputColorSpace";class rp extends oi{static get type(){return"ColorSpaceNode"}constructor(e,t,i){super("vec4"),this.colorNode=e,this.source=t,this.target=i}resolveColorSpace(e,t){return t===_h?ii.workingColorSpace:t===Fx?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,i=this.resolveColorSpace(e,this.source),n=this.resolveColorSpace(e,this.target);let s=t;return ii.enabled===!1||i===n||!i||!n||(ii.getTransfer(i)===kc&&(s=Qe(zU(s.rgb),s.a)),ii.getPrimaries(i)!==ii.getPrimaries(n)&&(s=Qe(Ki(ii._getMatrix(new dn,i,n)).mul(s.rgb),s.a)),ii.getTransfer(n)===kc&&(s=Qe(kU(s.rgb),s.a))),s}}const GU=o=>fe(new rp(fe(o),_h,Fx)),VU=o=>fe(new rp(fe(o),Fx,_h)),HU=(o,e)=>fe(new rp(fe(o),_h,e)),Uw=(o,e)=>fe(new rp(fe(o),e,_h));j("toOutputColorSpace",GU);j("toWorkingColorSpace",VU);j("workingToColorSpace",HU);j("colorSpaceToWorking",Uw);let WU=class extends yh{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),i=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,i,n)}};class Bw extends st{static get type(){return"ReferenceBaseNode"}constructor(e,t,i=null,n=null){super(),this.property=e,this.uniformType=t,this.object=i,this.count=n,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.updateType=ut.OBJECT}setGroup(e){return this.group=e,this}element(e){return fe(new WU(this,fe(e)))}setNodeType(e){const t=et(null,e).getSelf();this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let i=e[t[0]];for(let n=1;n<t.length;n++)i=i[t[n]];return i}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const $U=(o,e,t)=>fe(new Bw(o,e,t));class XU extends Bw{static get type(){return"RendererReferenceNode"}constructor(e,t,i=null){super(e,t,i),this.renderer=i,this.setGroup(mt)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const qU=(o,e,t)=>fe(new XU(o,e,t));class YU extends oi{static get type(){return"ToneMappingNode"}constructor(e,t=KU,i=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=i}getCacheKey(){return hf(super.getCacheKey(),this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,i=this.toneMapping;if(i===el)return t;let n=null;const s=e.renderer.library.getToneMappingFunction(i);return s!==null?n=Qe(s(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",i),n=t),n}}const ZU=(o,e,t)=>fe(new YU(o,fe(e),fe(t))),KU=qU("toneMappingExposure","float");j("toneMapping",(o,e,t)=>ZU(e,t,o));class jU extends Tx{static get type(){return"BufferAttributeNode"}constructor(e,t=null,i=0,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=i,this.bufferOffset=n,this.usage=cf,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),i=this.value,n=e.getTypeLength(t),s=this.bufferStride||n,r=this.bufferOffset,a=i.isInterleavedBuffer===!0?i:new XT(i,s),l=new xx(a,n,r);a.setUsage(this.usage),this.attribute=l,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),i=e.getBufferAttributeFromNode(this,t),n=e.getPropertyName(i);let s=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=n,s=n):s=sr(this).build(e,t),s}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const Ux=(o,e,t,i)=>fe(new jU(o,e,t,i)),JU=(o,e,t,i)=>Ux(o,e,t,i).setUsage(qa),zv=(o,e,t,i)=>Ux(o,e,t,i).setInstanced(!0),kv=(o,e,t,i)=>JU(o,e,t,i).setInstanced(!0);j("toAttribute",o=>Ux(o.value));class QU extends st{static get type(){return"ComputeNode"}constructor(e,t,i=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=i,this.dispatchCount=0,this.version=1,this.updateBeforeType=ut.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let i=t[0];for(let n=1;n<t.length;n++)i*=t[n];this.dispatchCount=Math.ceil(e/i)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if(t==="compute"){const i=this.computeNode.build(e,"void");i!==""&&e.addLineFlowCode(i,this)}}}const eB=(o,e,t)=>fe(new QU(fe(o),e,t));j("compute",eB);class tB extends st{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const i=e.getCache(),n=e.getCacheFromNode(this,this.parent);e.setCache(n);const s=this.node.build(e,...t);return e.setCache(i),s}}const ud=(o,...e)=>fe(new tB(fe(o),...e));j("cache",ud);class iB extends st{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const nB=ne(iB);j("bypass",nB);class Ow extends st{static get type(){return"RemapNode"}constructor(e,t,i,n=ee(0),s=ee(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=i,this.outLowNode=n,this.outHighNode=s,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:i,outLowNode:n,outHighNode:s,doClamp:r}=this;let a=e.sub(t).div(i.sub(t));return r===!0&&(a=a.clamp()),a.mul(s.sub(n)).add(n)}}const sB=ne(Ow,null,null,{doClamp:!1}),rB=ne(Ow);j("remap",sB);j("remapClamp",rB);class oB extends st{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const i=this.getNodeType(e),n=this.snippet;if(i==="void")e.addLineFlowCode(n,this);else return e.format(`( ${n} )`,i,t)}}const Xc=ne(oB),aB=o=>(o?on(o,Xc("discard")):Xc("discard")).append();j("discard",aB);class lB extends oi{static get type(){return"RenderOutputNode"}constructor(e,t,i){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=i,this.isRenderOutput=!0}setup({context:e}){let t=this.colorNode||e.color;const i=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||el,n=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||ko;return i!==el&&(t=t.toneMapping(i)),n!==ko&&n!==ii.workingColorSpace&&(t=t.workingToColorSpace(n)),t}}const cB=(o,e=null,t=null)=>fe(new lB(fe(o),e,t));j("renderOutput",cB);class hB extends st{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const i=this.getAttributeName(e);if(e.hasGeometryAttribute(i)){const n=e.geometry.getAttribute(i);t=e.getTypeFromAttribute(n)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),i=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const s=e.geometry.getAttribute(t),r=e.getTypeFromAttribute(s),a=e.getAttribute(t,r);return e.shaderStage==="vertex"?e.format(a.name,r,i):sr(this).build(e,i)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(i)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const ir=(o,e)=>fe(new hB(o,e)),op=o=>ir("uv"+(o>0?o:""),"vec2");class uB extends st{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const i=this.textureNode.build(e,"property"),n=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${i}, ${n} )`,this.getNodeType(e),t)}}const xc=ne(uB);class dB extends xh{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=ut.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,i=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(i&&i.width!==void 0){const{width:n,height:s}=i;this.value=Math.log2(Math.max(n,s))}}}const fB=ne(dB);class vh extends xh{static get type(){return"TextureNode"}constructor(e,t=null,i=null,n=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=i,this.biasNode=n,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=ut.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Ti?"uvec4":this.value.type===Wi?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return op(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=et(this.value.matrix)),this._matrixUniform.mul(Q(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?ut.FRAME:ut.NONE,this}setupUV(e,t){const i=this.value;return e.isFlipY()&&(i.isRenderTargetTexture===!0||i.isFramebufferTexture===!0||i.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(Zt(xc(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;let i=this.uvNode;(i===null||e.context.forceUVContext===!0)&&e.context.getUV&&(i=e.context.getUV(this)),i||(i=this.getDefaultUV()),this.updateMatrix===!0&&(i=this.getTransformedUV(i)),i=this.setupUV(e,i);let n=this.levelNode;n===null&&e.context.getTextureLevel&&(n=e.context.getTextureLevel(this)),t.uvNode=i,t.levelNode=n,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateSnippet(e,t,i,n,s,r,a,l){const c=this.value;let h;return n?h=e.generateTextureLevel(c,t,i,n,r):s?h=e.generateTextureBias(c,t,i,s,r):l?h=e.generateTextureGrad(c,t,i,l,r):a?h=e.generateTextureCompare(c,t,i,a,r):this.sampler===!1?h=e.generateTextureLoad(c,t,i,r):h=e.generateTexture(c,t,i,r),h}generate(e,t){const i=e.getNodeProperties(this),n=this.value;if(!n||n.isTexture!==!0)throw new Error("TextureNode: Need a three.js texture.");const s=super.generate(e,"property");if(t==="sampler")return s+"_sampler";if(e.isReference(t))return s;{const r=e.getDataFromNode(this);let a=r.propertyName;if(a===void 0){const{uvNode:h,levelNode:u,biasNode:d,compareNode:f,depthNode:p,gradNode:m}=i,g=this.generateUV(e,h),y=u?u.build(e,"float"):null,x=d?d.build(e,"float"):null,_=p?p.build(e,"int"):null,v=f?f.build(e,"float"):null,A=m?[m[0].build(e,"vec2"),m[1].build(e,"vec2")]:null,T=e.getVarFromNode(this);a=e.getPropertyName(T);const M=this.generateSnippet(e,s,g,y,x,_,v,A);e.addLineFlowCode(`${a} = ${M}`,this),r.snippet=M,r.propertyName=a}let l=a;const c=this.getNodeType(e);return e.needsToWorkingColorSpace(n)&&(l=Uw(Xc(l,c),n.colorSpace).setup(e).build(e,c)),e.format(l,c,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=fe(e),t.referenceNode=this.getSelf(),fe(t)}blur(e){const t=this.clone();return t.biasNode=fe(e).mul(fB(t)),t.referenceNode=this.getSelf(),fe(t)}level(e){const t=this.clone();return t.levelNode=fe(e),t.referenceNode=this.getSelf(),fe(t)}size(e){return xc(this,e)}bias(e){const t=this.clone();return t.biasNode=fe(e),t.referenceNode=this.getSelf(),fe(t)}compare(e){const t=this.clone();return t.compareNode=fe(e),t.referenceNode=this.getSelf(),fe(t)}grad(e,t){const i=this.clone();return i.gradNode=[fe(e),fe(t)],i.referenceNode=this.getSelf(),fe(i)}depth(e){const t=this.clone();return t.depthNode=fe(e),t.referenceNode=this.getSelf(),fe(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const jt=ne(vh),Hn=(...o)=>jt(...o).setSampler(!1),_o=et("float").label("cameraNear").setGroup(mt).onRenderUpdate(({camera:o})=>o.near),vo=et("float").label("cameraFar").setGroup(mt).onRenderUpdate(({camera:o})=>o.far),xf=et("mat4").label("cameraProjectionMatrix").setGroup(mt).onRenderUpdate(({camera:o})=>o.projectionMatrix),rr=et("mat4").label("cameraViewMatrix").setGroup(mt).onRenderUpdate(({camera:o})=>o.matrixWorldInverse),pB=et(new G).label("cameraPosition").setGroup(mt).onRenderUpdate(({camera:o},e)=>e.value.setFromMatrixPosition(o.matrixWorld));class Mt extends st{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=ut.OBJECT,this._uniformNode=new xh(null)}getNodeType(){const e=this.scope;if(e===Mt.WORLD_MATRIX)return"mat4";if(e===Mt.POSITION||e===Mt.VIEW_POSITION||e===Mt.DIRECTION||e===Mt.SCALE)return"vec3"}update(e){const t=this.object3d,i=this._uniformNode,n=this.scope;if(n===Mt.WORLD_MATRIX)i.value=t.matrixWorld;else if(n===Mt.POSITION)i.value=i.value||new G,i.value.setFromMatrixPosition(t.matrixWorld);else if(n===Mt.SCALE)i.value=i.value||new G,i.value.setFromMatrixScale(t.matrixWorld);else if(n===Mt.DIRECTION)i.value=i.value||new G,t.getWorldDirection(i.value);else if(n===Mt.VIEW_POSITION){const s=e.camera;i.value=i.value||new G,i.value.setFromMatrixPosition(t.matrixWorld),i.value.applyMatrix4(s.matrixWorldInverse)}}generate(e){const t=this.scope;return t===Mt.WORLD_MATRIX?this._uniformNode.nodeType="mat4":(t===Mt.POSITION||t===Mt.VIEW_POSITION||t===Mt.DIRECTION||t===Mt.SCALE)&&(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Mt.WORLD_MATRIX="worldMatrix";Mt.POSITION="position";Mt.SCALE="scale";Mt.VIEW_POSITION="viewPosition";Mt.DIRECTION="direction";Mt.DIRECTION;Mt.WORLD_MATRIX;Mt.POSITION;Mt.SCALE;Mt.VIEW_POSITION;class ps extends Mt{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}ps.DIRECTION;const Wo=ge(ps,ps.WORLD_MATRIX);ps.POSITION;ps.SCALE;ps.VIEW_POSITION;const mB=et(new dn).onObjectUpdate(({object:o},e)=>e.value.getNormalMatrix(o.matrixWorld)),ap=rr.mul(Wo).toVar("modelViewMatrix"),zw=ir("position","vec3"),Ni=zw.varying("positionLocal"),Gv=zw.varying("positionPrevious"),oy=Wo.mul(Ni).xyz.varying("v_positionWorld"),kw=Ni.transformDirection(Wo).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),Ei=ap.mul(Ni).xyz.varying("v_positionView"),Ht=Ei.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class gB extends st{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:i}=e;return t.coordinateSystem===qn&&i.side===Zn?"false":e.getFrontFacing()}}const yB=ge(gB),lp=ee(yB).mul(2).sub(1),Gw=ir("normal","vec3"),ms=be(o=>o.geometry.hasAttribute("normal")===!1?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),Q(0,1,0)):Gw,"vec3").once()().toVar("normalLocal"),xB=Ei.dFdx().cross(Ei.dFdy()).normalize().toVar("normalFlat"),jn=be(o=>{let e;return o.material.flatShading===!0?e=xB:e=sr(Hw(ms),"v_normalView").normalize(),e},"vec3").once()().toVar("normalView"),Vw=sr(jn.transformDirection(rr),"v_normalWorld").normalize().toVar("normalWorld"),si=be(o=>o.context.setupNormal(),"vec3").once()().mul(lp).toVar("transformedNormalView"),Bx=si.transformDirection(rr).toVar("transformedNormalWorld"),ic=be(o=>o.context.setupClearcoatNormal(),"vec3").once()().mul(lp).toVar("transformedClearcoatNormalView"),_B=be(([o,e=Wo])=>{const t=Ki(e),i=o.div(Q(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(i).xyz}),Hw=be(([o],e)=>{const t=e.renderer.nodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(o);const i=mB.mul(o);return rr.transformDirection(i)}),vB=et(0).onReference(({material:o})=>o).onRenderUpdate(({material:o})=>o.refractionRatio),bB=Ht.negate().reflect(si),SB=Ht.negate().refract(si,vB),MB=bB.transformDirection(rr).toVar("reflectVector"),TB=SB.transformDirection(rr).toVar("reflectVector");class wB extends vh{static get type(){return"CubeTextureNode"}constructor(e,t=null,i=null,n=null){super(e,t,i,n),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===zo?MB:e.mapping===ul?TB:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),Q(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const i=this.value;return e.renderer.coordinateSystem===Go||!i.isRenderTargetTexture?Q(t.x.negate(),t.yz):t}generateUV(e,t){return t.build(e,"vec3")}}const qc=ne(wB);class Ww extends xh{static get type(){return"BufferNode"}constructor(e,t,i=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=i}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const Ox=(o,e,t)=>fe(new Ww(o,e,t));class AB extends yh{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),i=this.getNodeType();return e.format(t,"vec4",i)}}class EB extends Ww{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null,"vec4"),this.array=e,this.elementType=t,this._elementType=null,this._elementLength=0,this.updateType=ut.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:e,value:t}=this,i=this.getElementLength(),n=this.getElementType();if(i===1)for(let s=0;s<e.length;s++){const r=s*4;t[r]=e[s]}else if(n==="color")for(let s=0;s<e.length;s++){const r=s*4,a=e[s];t[r]=a.r,t[r+1]=a.g,t[r+2]=a.b||0}else for(let s=0;s<e.length;s++){const r=s*4,a=e[s];t[r]=a.x,t[r+1]=a.y,t[r+2]=a.z||0,t[r+3]=a.w||0}}setup(e){const t=this.array.length;this._elementType=this.elementType===null?df(this.array[0]):this.elementType,this._elementLength=e.getTypeLength(this._elementType);let i=Float32Array;return this._elementType.charAt(0)==="i"?i=Int32Array:this._elementType.charAt(0)==="u"&&(i=Uint32Array),this.value=new i(t*4),this.bufferCount=t,this.bufferType=e.changeComponentType("vec4",e.getComponentType(this._elementType)),super.setup(e)}element(e){return fe(new AB(this,fe(e)))}}const Yc=(o,e)=>fe(new EB(o,e));class CB extends yh{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),i=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,i,n)}}class zx extends st{static get type(){return"ReferenceNode"}constructor(e,t,i=null,n=null){super(),this.property=e,this.uniformType=t,this.object=i,this.count=n,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.name=null,this.updateType=ut.OBJECT}element(e){return fe(new CB(this,fe(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;this.count!==null?t=Ox(null,e,this.count):Array.isArray(this.getValueFromReference())?t=Yc(null,e):e==="texture"?t=jt(null):e==="cubeTexture"?t=qc(null):t=et(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let i=e[t[0]];for(let n=1;n<t.length;n++)i=i[t[n]];return i}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const Wt=(o,e,t)=>fe(new zx(o,e,t)),Vv=(o,e,t,i)=>fe(new zx(o,e,i,t));class RB extends zx{static get type(){return"MaterialReferenceNode"}constructor(e,t,i=null){super(e,t,i),this.material=i,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const Rr=(o,e,t)=>fe(new RB(o,e,t)),$w=be(o=>(o.geometry.hasAttribute("tangent")===!1&&o.geometry.computeTangents(),ir("tangent","vec4")))(),kx=$w.xyz.toVar("tangentLocal"),Xw=ap.mul(Qe(kx,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),NB=o=>o.mul($w.w).xyz,PB=sr(NB(jn.cross(Xw)),"v_bitangentView").normalize().toVar("bitangentView"),nc=Ki(Xw,PB,jn),IB=(()=>{let o=rl.cross(Ht);return o=o.cross(rl).normalize(),o=zt(o,si,go.mul(Gs.oneMinus()).oneMinus().pow2().pow2()).normalize(),o})(),DB=be(o=>{const{eye_pos:e,surf_norm:t,mapN:i,uv:n}=o,s=e.dFdx(),r=e.dFdy(),a=n.dFdx(),l=n.dFdy(),c=t,h=r.cross(c),u=c.cross(s),d=h.mul(a.x).add(u.mul(l.x)),f=h.mul(a.y).add(u.mul(l.y)),p=d.dot(d).max(f.dot(f)),m=lp.mul(p.inverseSqrt());return ji(d.mul(i.x,m),f.mul(i.y,m),c.mul(i.z)).normalize()});class LB extends oi{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=Or}setup(e){const{normalMapType:t,scaleNode:i}=this;let n=this.node.mul(2).sub(1);i!==null&&(n=Q(n.xy.mul(i),n.z));let s=null;return t===CD?s=Hw(n):t===Or&&(e.hasGeometryAttribute("tangent")===!0?s=nc.mul(n).normalize():s=DB({eye_pos:Ei,surf_norm:jn,mapN:n,uv:op()})),s}}const Hv=ne(LB),FB=be(({textureNode:o,bumpScale:e})=>{const t=n=>o.cache().context({getUV:s=>n(s.uvNode||op()),forceUVContext:!0}),i=ee(t(n=>n));return Se(ee(t(n=>n.add(n.dFdx()))).sub(i),ee(t(n=>n.add(n.dFdy()))).sub(i)).mul(e)}),UB=be(o=>{const{surf_pos:e,surf_norm:t,dHdxy:i}=o,n=e.dFdx().normalize(),s=e.dFdy().normalize(),r=t,a=s.cross(r),l=r.cross(n),c=n.dot(a).mul(lp),h=c.sign().mul(i.x.mul(a).add(i.y.mul(l)));return c.abs().mul(t).sub(h).normalize()});class BB extends oi{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=FB({textureNode:this.textureNode,bumpScale:e});return UB({surf_pos:Ei,surf_norm:jn,dHdxy:t})}}const OB=ne(BB),Wv=new Map;class Y extends st{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let i=Wv.get(e);return i===void 0&&(i=Rr(e,t),Wv.set(e,i)),i}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,i=this.scope;let n=null;if(i===Y.COLOR){const s=t.color!==void 0?this.getColor(i):Q();t.map&&t.map.isTexture===!0?n=s.mul(this.getTexture("map")):n=s}else if(i===Y.OPACITY){const s=this.getFloat(i);t.alphaMap&&t.alphaMap.isTexture===!0?n=s.mul(this.getTexture("alpha")):n=s}else if(i===Y.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?n=this.getTexture("specular").r:n=ee(1);else if(i===Y.SPECULAR_INTENSITY){const s=this.getFloat(i);t.specularMap?n=s.mul(this.getTexture(i).a):n=s}else if(i===Y.SPECULAR_COLOR){const s=this.getColor(i);t.specularColorMap&&t.specularColorMap.isTexture===!0?n=s.mul(this.getTexture(i).rgb):n=s}else if(i===Y.ROUGHNESS){const s=this.getFloat(i);t.roughnessMap&&t.roughnessMap.isTexture===!0?n=s.mul(this.getTexture(i).g):n=s}else if(i===Y.METALNESS){const s=this.getFloat(i);t.metalnessMap&&t.metalnessMap.isTexture===!0?n=s.mul(this.getTexture(i).b):n=s}else if(i===Y.EMISSIVE){const s=this.getFloat("emissiveIntensity"),r=this.getColor(i).mul(s);t.emissiveMap&&t.emissiveMap.isTexture===!0?n=r.mul(this.getTexture(i)):n=r}else if(i===Y.NORMAL)t.normalMap?(n=Hv(this.getTexture("normal"),this.getCache("normalScale","vec2")),n.normalMapType=t.normalMapType):t.bumpMap?n=OB(this.getTexture("bump").r,this.getFloat("bumpScale")):n=jn;else if(i===Y.CLEARCOAT){const s=this.getFloat(i);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?n=s.mul(this.getTexture(i).r):n=s}else if(i===Y.CLEARCOAT_ROUGHNESS){const s=this.getFloat(i);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?n=s.mul(this.getTexture(i).r):n=s}else if(i===Y.CLEARCOAT_NORMAL)t.clearcoatNormalMap?n=Hv(this.getTexture(i),this.getCache(i+"Scale","vec2")):n=jn;else if(i===Y.SHEEN){const s=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?n=s.mul(this.getTexture("sheenColor").rgb):n=s}else if(i===Y.SHEEN_ROUGHNESS){const s=this.getFloat(i);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?n=s.mul(this.getTexture(i).a):n=s,n=n.clamp(.07,1)}else if(i===Y.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const s=this.getTexture(i);n=Cx($l.x,$l.y,$l.y.negate(),$l.x).mul(s.rg.mul(2).sub(Se(1)).normalize().mul(s.b))}else n=$l;else if(i===Y.IRIDESCENCE_THICKNESS){const s=Wt("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const r=Wt("0","float",t.iridescenceThicknessRange);n=s.sub(r).mul(this.getTexture(i).g).add(r)}else n=s}else if(i===Y.TRANSMISSION){const s=this.getFloat(i);t.transmissionMap?n=s.mul(this.getTexture(i).r):n=s}else if(i===Y.THICKNESS){const s=this.getFloat(i);t.thicknessMap?n=s.mul(this.getTexture(i).g):n=s}else if(i===Y.IOR)n=this.getFloat(i);else if(i===Y.LIGHT_MAP)n=this.getTexture(i).rgb.mul(this.getFloat("lightMapIntensity"));else if(i===Y.AO_MAP)n=this.getTexture(i).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const s=this.getNodeType(e);n=this.getCache(i,s)}return n}}Y.ALPHA_TEST="alphaTest";Y.COLOR="color";Y.OPACITY="opacity";Y.SHININESS="shininess";Y.SPECULAR="specular";Y.SPECULAR_STRENGTH="specularStrength";Y.SPECULAR_INTENSITY="specularIntensity";Y.SPECULAR_COLOR="specularColor";Y.REFLECTIVITY="reflectivity";Y.ROUGHNESS="roughness";Y.METALNESS="metalness";Y.NORMAL="normal";Y.CLEARCOAT="clearcoat";Y.CLEARCOAT_ROUGHNESS="clearcoatRoughness";Y.CLEARCOAT_NORMAL="clearcoatNormal";Y.EMISSIVE="emissive";Y.ROTATION="rotation";Y.SHEEN="sheen";Y.SHEEN_ROUGHNESS="sheenRoughness";Y.ANISOTROPY="anisotropy";Y.IRIDESCENCE="iridescence";Y.IRIDESCENCE_IOR="iridescenceIOR";Y.IRIDESCENCE_THICKNESS="iridescenceThickness";Y.IOR="ior";Y.TRANSMISSION="transmission";Y.THICKNESS="thickness";Y.ATTENUATION_DISTANCE="attenuationDistance";Y.ATTENUATION_COLOR="attenuationColor";Y.LINE_SCALE="scale";Y.LINE_DASH_SIZE="dashSize";Y.LINE_GAP_SIZE="gapSize";Y.LINE_WIDTH="linewidth";Y.LINE_DASH_OFFSET="dashOffset";Y.POINT_WIDTH="pointWidth";Y.DISPERSION="dispersion";Y.LIGHT_MAP="light";Y.AO_MAP="ao";const zB=ge(Y,Y.ALPHA_TEST),kB=ge(Y,Y.COLOR),GB=ge(Y,Y.SHININESS),VB=ge(Y,Y.EMISSIVE),qw=ge(Y,Y.OPACITY),HB=ge(Y,Y.SPECULAR),$v=ge(Y,Y.SPECULAR_INTENSITY),WB=ge(Y,Y.SPECULAR_COLOR),dd=ge(Y,Y.SPECULAR_STRENGTH),Dm=ge(Y,Y.REFLECTIVITY),$B=ge(Y,Y.ROUGHNESS),XB=ge(Y,Y.METALNESS),qB=ge(Y,Y.NORMAL).context({getUV:null}),YB=ge(Y,Y.CLEARCOAT),ZB=ge(Y,Y.CLEARCOAT_ROUGHNESS),KB=ge(Y,Y.CLEARCOAT_NORMAL).context({getUV:null}),jB=ge(Y,Y.ROTATION),JB=ge(Y,Y.SHEEN),QB=ge(Y,Y.SHEEN_ROUGHNESS),e3=ge(Y,Y.ANISOTROPY),t3=ge(Y,Y.IRIDESCENCE),i3=ge(Y,Y.IRIDESCENCE_IOR),n3=ge(Y,Y.IRIDESCENCE_THICKNESS),s3=ge(Y,Y.TRANSMISSION),r3=ge(Y,Y.THICKNESS),o3=ge(Y,Y.IOR),a3=ge(Y,Y.ATTENUATION_DISTANCE),l3=ge(Y,Y.ATTENUATION_COLOR),c3=ge(Y,Y.LINE_SCALE),h3=ge(Y,Y.LINE_DASH_SIZE),u3=ge(Y,Y.LINE_GAP_SIZE);Y.LINE_WIDTH;Y.LINE_DASH_OFFSET;Y.POINT_WIDTH;const d3=ge(Y,Y.DISPERSION),Yw=ge(Y,Y.LIGHT_MAP),f3=ge(Y,Y.AO_MAP),$l=et(new _t).onReference(function(o){return o.material}).onRenderUpdate(function({material:o}){this.value.set(o.anisotropy*Math.cos(o.anisotropyRotation),o.anisotropy*Math.sin(o.anisotropyRotation))});class p3 extends oi{static get type(){return"ModelViewProjectionNode"}constructor(e=null){super("vec4"),this.positionNode=e}setup(e){if(e.shaderStage==="fragment")return sr(e.context.mvp);const t=this.positionNode||Ni,i=e.renderer.nodes.modelViewMatrix||ap;return xf.mul(i).mul(t)}}const ay=ne(p3);class kt extends st{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),i=this.scope;let n;if(i===kt.VERTEX)n=e.getVertexIndex();else if(i===kt.INSTANCE)n=e.getInstanceIndex();else if(i===kt.DRAW)n=e.getDrawIndex();else if(i===kt.INVOCATION_LOCAL)n=e.getInvocationLocalIndex();else if(i===kt.INVOCATION_SUBGROUP)n=e.getInvocationSubgroupIndex();else if(i===kt.SUBGROUP)n=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+i);let s;return e.shaderStage==="vertex"||e.shaderStage==="compute"?s=n:s=sr(this).build(e,t),s}}kt.VERTEX="vertex";kt.INSTANCE="instance";kt.SUBGROUP="subgroup";kt.INVOCATION_LOCAL="invocationLocal";kt.INVOCATION_SUBGROUP="invocationSubgroup";kt.DRAW="draw";const m3=ge(kt,kt.VERTEX),Gx=ge(kt,kt.INSTANCE);kt.SUBGROUP;kt.INVOCATION_SUBGROUP;kt.INVOCATION_LOCAL;const g3=ge(kt,kt.DRAW);class y3 extends st{static get type(){return"InstanceNode"}constructor(e){super("void"),this.instanceMesh=e,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=ut.FRAME,this.buffer=null,this.bufferColor=null}setup(e){let t=this.instanceMatrixNode,i=this.instanceColorNode;const n=this.instanceMesh;if(t===null){const a=n.instanceMatrix;if(n.count<=1e3)t=Ox(a.array,"mat4",Math.max(n.count,1)).element(Gx);else{const l=new qL(a.array,16,1);this.buffer=l;const c=a.usage===qa?kv:zv,h=[c(l,"vec4",16,0),c(l,"vec4",16,4),c(l,"vec4",16,8),c(l,"vec4",16,12)];t=sl(...h)}this.instanceMatrixNode=t}const s=n.instanceColor;if(s&&i===null){const a=new DL(s.array,3),l=s.usage===qa?kv:zv;this.bufferColor=a,i=Q(l(a,"vec3",3,0)),this.instanceColorNode=i}const r=t.mul(Ni).xyz;if(Ni.assign(r),e.hasGeometryAttribute("normal")){const a=_B(ms,t);ms.assign(a)}this.instanceColorNode!==null&&pf("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMesh.instanceMatrix.usage!==qa&&this.buffer!=null&&this.instanceMesh.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMesh.instanceMatrix.version),this.instanceMesh.instanceColor&&this.instanceMesh.instanceColor.usage!==qa&&this.bufferColor!=null&&this.instanceMesh.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceMesh.instanceColor.version)}}const x3=ne(y3);class _3 extends st{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=Gx:this.batchingIdNode=g3);const i=be(([p])=>{const m=xc(Hn(this.batchMesh._indirectTexture),0),g=Zt(p).modInt(Zt(m)),y=Zt(p).div(Zt(m));return Hn(this.batchMesh._indirectTexture,Bs(g,y)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(Zt(this.batchingIdNode)),n=this.batchMesh._matricesTexture,s=xc(Hn(n),0),r=ee(i).mul(4).toInt().toVar(),a=r.modInt(s),l=r.div(Zt(s)),c=sl(Hn(n,Bs(a,l)),Hn(n,Bs(a.add(1),l)),Hn(n,Bs(a.add(2),l)),Hn(n,Bs(a.add(3),l))),h=this.batchMesh._colorsTexture;if(h!==null){const m=be(([g])=>{const y=xc(Hn(h),0).x,x=g,_=x.modInt(y),v=x.div(y);return Hn(h,Bs(_,v)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(i);pf("vec3","vBatchColor").assign(m)}const u=Ki(c);Ni.assign(c.mul(Ni));const d=ms.div(Q(u[0].dot(u[0]),u[1].dot(u[1]),u[2].dot(u[2]))),f=u.mul(d).xyz;ms.assign(f),e.hasGeometryAttribute("tangent")&&kx.mulAssign(u)}}const v3=ne(_3),Xv=new WeakMap;class b3 extends st{static get type(){return"SkinningNode"}constructor(e,t=!1){super("void"),this.skinnedMesh=e,this.useReference=t,this.updateType=ut.OBJECT,this.skinIndexNode=ir("skinIndex","uvec4"),this.skinWeightNode=ir("skinWeight","vec4");let i,n,s;t?(i=Wt("bindMatrix","mat4"),n=Wt("bindMatrixInverse","mat4"),s=Vv("skeleton.boneMatrices","mat4",e.skeleton.bones.length)):(i=et(e.bindMatrix,"mat4"),n=et(e.bindMatrixInverse,"mat4"),s=Ox(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)),this.bindMatrixNode=i,this.bindMatrixInverseNode=n,this.boneMatricesNode=s,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=Ni){const{skinIndexNode:i,skinWeightNode:n,bindMatrixNode:s,bindMatrixInverseNode:r}=this,a=e.element(i.x),l=e.element(i.y),c=e.element(i.z),h=e.element(i.w),u=s.mul(t),d=ji(a.mul(n.x).mul(u),l.mul(n.y).mul(u),c.mul(n.z).mul(u),h.mul(n.w).mul(u));return r.mul(d).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=ms){const{skinIndexNode:i,skinWeightNode:n,bindMatrixNode:s,bindMatrixInverseNode:r}=this,a=e.element(i.x),l=e.element(i.y),c=e.element(i.z),h=e.element(i.w);let u=ji(n.x.mul(a),n.y.mul(l),n.z.mul(c),n.w.mul(h));return u=r.mul(u).mul(s),u.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Vv("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Gv)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")}setup(e){this.needsPreviousBoneMatrices(e)&&Gv.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(Ni.assign(t),e.hasGeometryAttribute("normal")){const i=this.getSkinnedNormal();ms.assign(i),e.hasGeometryAttribute("tangent")&&kx.assign(i)}}generate(e,t){if(t!=="void")return Ni.build(e,t)}update(e){const i=(this.useReference?e.object:this.skinnedMesh).skeleton;Xv.get(i)!==e.frameId&&(Xv.set(i,e.frameId),this.previousBoneMatricesNode!==null&&i.previousBoneMatrices.set(i.boneMatrices),i.update())}}const S3=o=>fe(new b3(o,!0));class M3 extends st{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const i={};for(let s=0,r=this.params.length-1;s<r;s++){const a=this.params[s],l=a.isNode!==!0&&a.name||this.getVarName(s),c=a.isNode!==!0&&a.type||"int";i[l]=Xc(l,c)}const n=e.addStack();return t.returnsNode=this.params[this.params.length-1](i,n,e),t.stackNode=n,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),i=this.params,n=t.stackNode;for(let a=0,l=i.length-1;a<l;a++){const c=i[a];let h=null,u=null,d=null,f=null,p=null,m=null;c.isNode?(f="int",d=this.getVarName(a),h="0",u=c.build(e,f),p="<"):(f=c.type||"int",d=c.name||this.getVarName(a),h=c.start,u=c.end,p=c.condition,m=c.update,typeof h=="number"?h=e.generateConst(f,h):h&&h.isNode&&(h=h.build(e,f)),typeof u=="number"?u=e.generateConst(f,u):u&&u.isNode&&(u=u.build(e,f)),h!==void 0&&u===void 0?(h=h+" - 1",u="0",p=">="):u!==void 0&&h===void 0&&(h="0",p="<"),p===void 0&&(Number(h)>Number(u)?p=">=":p="<"));const g={start:h,end:u,condition:p},y=g.start,x=g.end;let _="",v="",A="";m||(f==="int"||f==="uint"?p.includes("<")?m="++":m="--":p.includes("<")?m="+= 1.":m="-= 1."),_+=e.getVar(f,d)+" = "+y,v+=d+" "+p+" "+x,A+=d+" "+m;const T=`for ( ${_}; ${v}; ${A} )`;e.addFlowCode((a===0?`
`:"")+e.tab+T+` {

`).addFlowTab()}const s=n.build(e,"void"),r=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+s);for(let a=0,l=this.params.length-1;a<l;a++)e.addFlowCode((a===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),r}}const ls=(...o)=>fe(new M3(nl(o,"int"))).append(),T3=()=>Xc("break").append(),Lm=new WeakMap,_n=new Ct,qv=be(({bufferMap:o,influence:e,stride:t,width:i,depth:n,offset:s})=>{const r=Zt(m3).mul(t).add(s),a=r.div(i),l=r.sub(a.mul(i));return Hn(o,Bs(l,a)).depth(n).mul(e)});function w3(o){const e=o.morphAttributes.position!==void 0,t=o.morphAttributes.normal!==void 0,i=o.morphAttributes.color!==void 0,n=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,s=n!==void 0?n.length:0;let r=Lm.get(o);if(r===void 0||r.count!==s){let y=function(){m.dispose(),Lm.delete(o),o.removeEventListener("dispose",y)};r!==void 0&&r.texture.dispose();const a=o.morphAttributes.position||[],l=o.morphAttributes.normal||[],c=o.morphAttributes.color||[];let h=0;e===!0&&(h=1),t===!0&&(h=2),i===!0&&(h=3);let u=o.attributes.position.count*h,d=1;const f=4096;u>f&&(d=Math.ceil(u/f),u=f);const p=new Float32Array(u*d*4*s),m=new fL(p,u,d,s);m.type=Sn,m.needsUpdate=!0;const g=h*4;for(let x=0;x<s;x++){const _=a[x],v=l[x],A=c[x],T=u*d*4*x;for(let M=0;M<_.count;M++){const w=M*g;e===!0&&(_n.fromBufferAttribute(_,M),p[T+w+0]=_n.x,p[T+w+1]=_n.y,p[T+w+2]=_n.z,p[T+w+3]=0),t===!0&&(_n.fromBufferAttribute(v,M),p[T+w+4]=_n.x,p[T+w+5]=_n.y,p[T+w+6]=_n.z,p[T+w+7]=0),i===!0&&(_n.fromBufferAttribute(A,M),p[T+w+8]=_n.x,p[T+w+9]=_n.y,p[T+w+10]=_n.z,p[T+w+11]=A.itemSize===4?_n.w:1)}}r={count:s,texture:m,stride:h,size:new _t(u,d)},Lm.set(o,r),o.addEventListener("dispose",y)}return r}class A3 extends st{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=et(1),this.updateType=ut.OBJECT}setup(e){const{geometry:t}=e,i=t.morphAttributes.position!==void 0,n=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,s=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,r=s!==void 0?s.length:0,{texture:a,stride:l,size:c}=w3(t);i===!0&&Ni.mulAssign(this.morphBaseInfluence),n===!0&&ms.mulAssign(this.morphBaseInfluence);const h=Zt(c.width);ls(r,({i:u})=>{const d=ee(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?d.assign(Hn(this.mesh.morphTexture,Bs(Zt(u).add(1),Zt(Gx))).r):d.assign(Wt("morphTargetInfluences","float").element(u).toVar()),i===!0&&Ni.addAssign(qv({bufferMap:a,influence:d,stride:l,width:h,depth:u,offset:Zt(0)})),n===!0&&ms.addAssign(qv({bufferMap:a,influence:d,stride:l,width:h,depth:u,offset:Zt(1)}))})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,i)=>t+i,0)}}const E3=ne(A3);class wl extends st{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class C3 extends wl{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class R3 extends Lw{static get type(){return"LightingContextNode"}constructor(e,t=null,i=null,n=null){super(e),this.lightingModel=t,this.backdropNode=i,this.backdropAlphaNode=n,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,i=Q().toVar("directDiffuse"),n=Q().toVar("directSpecular"),s=Q().toVar("indirectDiffuse"),r=Q().toVar("indirectSpecular"),a={directDiffuse:i,directSpecular:n,indirectDiffuse:s,indirectSpecular:r};return{radiance:Q().toVar("radiance"),irradiance:Q().toVar("irradiance"),iblIrradiance:Q().toVar("iblIrradiance"),ambientOcclusion:ee(1).toVar("ambientOcclusion"),reflectedLight:a,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const N3=ne(R3);class P3 extends wl{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let Xl,ql;class ni extends st{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===ni.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=ut.NONE;return(this.scope===ni.SIZE||this.scope===ni.VIEWPORT)&&(e=ut.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===ni.VIEWPORT?t!==null?ql.copy(t.viewport):(e.getViewport(ql),ql.multiplyScalar(e.getPixelRatio())):t!==null?(Xl.width=t.width,Xl.height=t.height):e.getDrawingBufferSize(Xl)}setup(){const e=this.scope;let t=null;return e===ni.SIZE?t=et(Xl||(Xl=new _t)):e===ni.VIEWPORT?t=et(ql||(ql=new Ct)):t=Se(cp.div(ly)),t}generate(e){if(this.scope===ni.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const i=e.getNodeProperties(ly).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${i}.y - ${t}.y )`}return t}return super.generate(e)}}ni.COORDINATE="coordinate";ni.VIEWPORT="viewport";ni.SIZE="size";ni.UV="uv";const Zc=ge(ni,ni.UV),ly=ge(ni,ni.SIZE),cp=ge(ni,ni.COORDINATE),Zw=ge(ni,ni.VIEWPORT);Zw.zw;Zw.xy;const Yl=new _t;class Kw extends vh{static get type(){return"ViewportTextureNode"}constructor(e=Zc,t=null,i=null){i===null&&(i=new UL,i.minFilter=$s),super(i,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=ut.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(Yl);const i=this.value;(i.image.width!==Yl.width||i.image.height!==Yl.height)&&(i.image.width=Yl.width,i.image.height=Yl.height,i.needsUpdate=!0);const n=i.generateMipmaps;i.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(i),i.generateMipmaps=n}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const jw=ne(Kw,null,null,{generateMipmaps:!0});let Fm=null;class I3 extends Kw{static get type(){return"ViewportDepthTextureNode"}constructor(e=Zc,t=null){Fm===null&&(Fm=new Ml),super(e,t,Fm)}}const D3=ne(I3);class an extends st{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===an.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,i=this.valueNode;let n=null;if(t===an.DEPTH_BASE)i!==null&&(n=eA().assign(i));else if(t===an.DEPTH)e.isPerspectiveCamera?n=L3(Ei.z,_o,vo):n=_c(Ei.z,_o,vo);else if(t===an.LINEAR_DEPTH)if(i!==null)if(e.isPerspectiveCamera){const s=Jw(i,_o,vo);n=_c(s,_o,vo)}else n=i;else n=_c(Ei.z,_o,vo);return n}}an.DEPTH_BASE="depthBase";an.DEPTH="depth";an.LINEAR_DEPTH="linearDepth";const _c=(o,e,t)=>o.add(e).div(e.sub(t)),L3=(o,e,t)=>e.add(o).mul(t).div(t.sub(e).mul(o)),Jw=(o,e,t)=>e.mul(t).div(t.sub(e).mul(o).sub(t)),Qw=(o,e,t)=>{e=e.max(1e-6).toVar();const i=Ks(o.div(e).add(1)),n=Ks(t.div(e).add(1));return i.div(n)},eA=ne(an,an.DEPTH_BASE),tA=ge(an,an.DEPTH),F3=ne(an,an.LINEAR_DEPTH);D3();tA.assign=o=>eA(o);class kr extends st{static get type(){return"ClippingNode"}constructor(e=kr.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{localClipIntersection:i,localClippingCount:n,globalClippingCount:s}=t,r=s+n,a=i?r-n:r;return this.scope===kr.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(t.planes,r,a):this.setupDefault(t.planes,r,a)}setupAlphaToCoverage(e,t,i){return be(()=>{const n=Yc(e),s=za("float","distanceToPlane"),r=za("float","distanceToGradient"),a=za("float","clipOpacity");a.assign(1);let l;if(ls(i,({i:c})=>{l=n.element(c),s.assign(Ei.dot(l.xyz).negate().add(l.w)),r.assign(s.fwidth().div(2)),a.mulAssign(Ho(r.negate(),r,s)),a.equal(0).discard()}),i<t){const c=za("float","unionclipOpacity");c.assign(1),ls({start:i,end:t},({i:h})=>{l=n.element(h),s.assign(Ei.dot(l.xyz).negate().add(l.w)),r.assign(s.fwidth().div(2)),c.mulAssign(Ho(r.negate(),r,s).oneMinus())}),a.mulAssign(c.oneMinus())}Tt.a.mulAssign(a),Tt.a.equal(0).discard()})()}setupDefault(e,t,i){return be(()=>{const n=Yc(e);let s;if(ls(i,({i:r})=>{s=n.element(r),Ei.dot(s.xyz).greaterThan(s.w).discard()}),i<t){const r=za("bool","clipped");r.assign(!0),ls({start:i,end:t},({i:a})=>{s=n.element(a),r.assign(Ei.dot(s.xyz).greaterThan(s.w).and(r))}),r.discard()}})()}}kr.ALPHA_TO_COVERAGE="alphaToCoverage";kr.DEFAULT="default";const U3=()=>fe(new kr),B3=()=>fe(new kr(kr.ALPHA_TO_COVERAGE)),O3=.05,Yv=be(([o])=>$r(dt(1e4,Wn(dt(17,o.x).add(dt(.1,o.y)))).mul(ji(.1,$n(Wn(dt(13,o.y).add(o.x))))))),Zv=be(([o])=>Yv(Se(Yv(o.xy),o.z))),z3=be(([o])=>{const e=Ln(Lr(Ew(o.xyz)),Lr(Cw(o.xyz))).toVar("maxDeriv"),t=ee(1).div(ee(O3).mul(e)).toVar("pixScale"),i=Se(Hc(Lo(Ks(t))),Hc(Ix(Ks(t)))).toVar("pixScales"),n=Se(Zv(Lo(i.x.mul(o.xyz))),Zv(Lo(i.y.mul(o.xyz)))).toVar("alpha"),s=$r(Ks(t)).toVar("lerpFactor"),r=ji(dt(s.oneMinus(),n.x),dt(s,n.y)).toVar("x"),a=$c(s,s.oneMinus()).toVar("a"),l=Q(r.mul(r).div(dt(2,a).mul(bn(1,a))),r.sub(dt(.5,a)).div(bn(1,a)),bn(1,bn(1,r).mul(bn(1,r)).div(dt(2,a).mul(bn(1,a))))).toVar("cases"),c=r.lessThan(a.oneMinus()).select(r.lessThan(a).select(l.x,l.y),l.z);return tr(c,1e-6,1)});class ri extends hn{static get type(){return"NodeMaterial"}constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.shadowNode=null,this.shadowPositionNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+ow(this)}build(e){this.setup(e)}setupObserver(e){return new ZL(e)}setup(e){e.context.setupNormal=()=>this.setupNormal(e),e.addStack(),e.stack.outputNode=this.vertexNode||this.setupPosition(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let t;const i=this.setupClipping(e);if(this.depthWrite===!0&&this.setupDepth(e),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const n=this.setupLighting(e);i!==null&&e.stack.add(i);const s=Qe(n,Tt.a).max(0);if(t=this.setupOutput(e,s),DF.assign(t),this.outputNode!==null&&(t=this.outputNode),e.renderer.getRenderTarget()!==null){const a=e.renderer.getMRT(),l=this.mrtNode;a!==null?(t=a,l!==null&&(t=a.merge(l))):l!==null&&(t=l)}}else{let n=this.fragmentNode;n.isOutputStructNode!==!0&&(n=Qe(n)),t=this.setupOutput(e,n)}e.stack.outputNode=t,e.addFlow("fragment",e.removeStack()),e.monitor=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{globalClippingCount:t,localClippingCount:i}=e.clippingContext;let n=null;if(t||i){const s=e.renderer.samples;this.alphaToCoverage&&s>1?n=B3():e.stack.add(U3())}return n}setupDepth(e){const{renderer:t,camera:i}=e;let n=this.depthNode;if(n===null){const s=t.getMRT();s&&s.has("depth")?n=s.get("depth"):t.logarithmicDepthBuffer===!0&&(i.isPerspectiveCamera?n=Qw(ay().w,_o,vo):n=_c(Ei.z,_o,vo))}n!==null&&tA.assign(n).append()}setupPosition(e){const{object:t}=e,i=t.geometry;if(e.addStack(),(i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color)&&E3(t).append(),t.isSkinnedMesh===!0&&S3(t).append(),this.displacementMap){const s=Rr("displacementMap","texture"),r=Rr("displacementScale","float"),a=Rr("displacementBias","float");Ni.addAssign(ms.normalize().mul(s.x.mul(r).add(a)))}t.isBatchedMesh&&v3(t).append(),t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&x3(t).append(),this.positionNode!==null&&Ni.assign(this.positionNode);const n=ay();return e.context.vertex=e.removeStack(),e.context.mvp=n,n}setupDiffuseColor({object:e,geometry:t}){let i=this.colorNode?Qe(this.colorNode):kB;this.vertexColors===!0&&t.hasAttribute("color")&&(i=Qe(i.xyz.mul(ir("color","vec3")),i.a)),e.instanceColor&&(i=pf("vec3","vInstanceColor").mul(i)),e.isBatchedMesh&&e._colorsTexture&&(i=pf("vec3","vBatchColor").mul(i)),Tt.assign(i);const n=this.opacityNode?ee(this.opacityNode):qw;if(Tt.a.assign(Tt.a.mul(n)),this.alphaTestNode!==null||this.alphaTest>0){const s=this.alphaTestNode!==null?ee(this.alphaTestNode):zB;Tt.a.lessThanEqual(s).discard()}this.alphaHash===!0&&Tt.a.lessThan(z3(Ni)).discard(),this.transparent===!1&&this.blending===Pr&&this.alphaToCoverage===!1&&Tt.a.assign(1)}setupVariants(){}setupOutgoingLight(){return this.lights===!0?Q(0):Tt.rgb}setupNormal(){return this.normalNode?Q(this.normalNode):qB}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?Rr("envMap","cubeTexture"):Rr("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new P3(Yw)),t}setupLights(e){const t=[],i=this.setupEnvironment(e);i&&i.isLightingNode&&t.push(i);const n=this.setupLightMap(e);if(n&&n.isLightingNode&&t.push(n),this.aoNode!==null||e.material.aoMap){const r=this.aoNode!==null?this.aoNode:f3;t.push(new C3(r))}let s=this.lightsNode||e.lightsNode;return t.length>0&&(s=e.renderer.lighting.createNode([...s.getLights(),...t])),s}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:i,backdropAlphaNode:n,emissiveNode:s}=this,a=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let l=this.setupOutgoingLight(e);if(a&&a.getScope().hasLights){const c=this.setupLightingModel(e);l=N3(a,c,i,n)}else i!==null&&(l=Q(n!==null?zt(l,i,n):i));return(s&&s.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(Bv.assign(Q(s||VB)),l=l.add(Bv)),l}setupOutput(e,t){if(this.fog===!0){const i=e.fogNode;i&&(t=Qe(i.mix(t.rgb,i.colorNode),t.a))}return t}setDefaultValues(e){for(const i in e){const n=e[i];this[i]===void 0&&(this[i]=n,n&&n.clone&&(this[i]=n.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const i in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,i)===void 0&&t[i].get!==void 0&&Object.defineProperty(this.constructor.prototype,i,t[i])}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});const i=hn.prototype.toJSON.call(this,e),n=uf(this);i.inputNodes={};for(const{property:r,childNode:a}of n)i.inputNodes[r]=a.toJSON(e).uuid;function s(r){const a=[];for(const l in r){const c=r[l];delete c.metadata,a.push(c)}return a}if(t){const r=s(e.textures),a=s(e.images),l=s(e.nodes);r.length>0&&(i.textures=r),a.length>0&&(i.images=a),l.length>0&&(i.nodes=l)}return i}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.shadowNode=e.shadowNode,this.shadowPositionNode=e.shadowPositionNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const k3=new _x;class G3 extends ri{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(k3),this.setValues(e)}}const V3=new nw;class H3 extends ri{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(V3),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode,t=this.dashScaleNode?ee(this.dashScaleNode):c3,i=this.dashSizeNode?ee(this.dashSizeNode):h3,n=this.dashSizeNode?ee(this.dashGapNode):u3;Im.assign(i),Ov.assign(n);const s=sr(ir("lineDistance").mul(t));(e?s.add(e):s).mod(Im.add(Ov)).greaterThan(Im).discard()}}const W3=o=>fe(o).mul(.5).add(.5),$3=new ew;class X3 extends ri{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues($3),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?ee(this.opacityNode):qw;Tt.assign(Qe(W3(si),e))}}class q3 extends oi{static get type(){return"EquirectUVNode"}constructor(e=kw){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(Math.PI*2)).add(.5),i=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return Se(t,i)}}const iA=ne(q3);class nA extends PL{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const i=t.minFilter,n=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const s=new gh(5,5,5),r=iA(kw),a=new ri;a.colorNode=jt(t,r,0),a.side=Zn,a.blending=hl;const l=new Vo(s,a),c=new $T;c.add(l),t.minFilter===$s&&(t.minFilter=wn);const h=new WT(1,10,this),u=e.getMRT();return e.setMRT(null),h.update(e,c),e.setMRT(u),t.minFilter=i,t.currentGenerateMipmaps=n,l.geometry.dispose(),l.material.dispose(),this}}const vc=new WeakMap;class Y3 extends oi{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=qc();const t=new yx;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=ut.RENDER}updateBefore(e){const{renderer:t,material:i}=e,n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const s=n.isTextureNode?n.value:i[n.property];if(s&&s.isTexture){const r=s.mapping;if(r===uh||r===dh){if(vc.has(s)){const a=vc.get(s);Kv(a,s.mapping),this._cubeTexture=a}else{const a=s.image;if(Z3(a)){const l=new nA(a.height);l.fromEquirectangularTexture(t,s),Kv(l.texture,s.mapping),this._cubeTexture=l.texture,vc.set(s,l.texture),s.addEventListener("dispose",sA)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function Z3(o){return o==null?!1:o.height>0}function sA(o){const e=o.target;e.removeEventListener("dispose",sA);const t=vc.get(e);t!==void 0&&(vc.delete(e),t.dispose())}function Kv(o,e){e===uh?o.mapping=zo:e===dh&&(o.mapping=ul)}const rA=ne(Y3);class Vx extends wl{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=rA(this.envNode)}}class K3 extends wl{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=ee(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class hp{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class oA extends hp{constructor(){super()}indirect(e,t,i){const n=e.ambientOcclusion,s=e.reflectedLight,r=i.context.irradianceLightMap;s.indirectDiffuse.assign(Qe(0)),r?s.indirectDiffuse.addAssign(r):s.indirectDiffuse.addAssign(Qe(1,1,1,0)),s.indirectDiffuse.mulAssign(n),s.indirectDiffuse.mulAssign(Tt.rgb)}finish(e,t,i){const n=i.material,s=e.outgoingLight,r=i.context.environment;if(r)switch(n.combine){case Qf:s.rgb.assign(zt(s.rgb,s.rgb.mul(r.rgb),dd.mul(Dm)));break;case fD:s.rgb.assign(zt(s.rgb,r.rgb,dd.mul(Dm)));break;case pD:s.rgb.addAssign(r.rgb.mul(dd.mul(Dm)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",n.combine);break}}}const j3=new ep;class J3 extends ri{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(j3),this.setValues(e)}setupNormal(){return jn}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Vx(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new K3(Yw)),t}setupOutgoingLight(){return Tt.rgb}setupLightingModel(){return new oA}}const Kc=be(({f0:o,f90:e,dotVH:t})=>{const i=t.mul(-5.55473).sub(6.98316).mul(t).exp2();return o.mul(i.oneMinus()).add(e.mul(i))}),pl=be(o=>o.diffuseColor.mul(1/Math.PI)),Q3=()=>ee(.25),eO=be(({dotNH:o})=>sy.mul(ee(.5)).add(1).mul(ee(1/Math.PI)).mul(o.pow(sy))),tO=be(({lightDirection:o})=>{const e=o.add(Ht).normalize(),t=si.dot(e).clamp(),i=Ht.dot(e).clamp(),n=Kc({f0:vn,f90:1,dotVH:i}),s=Q3(),r=eO({dotNH:t});return n.mul(s).mul(r)});class aA extends oA{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:i}){const s=si.dot(e).clamp().mul(t);i.directDiffuse.addAssign(s.mul(pl({diffuseColor:Tt.rgb}))),this.specular===!0&&i.directSpecular.addAssign(s.mul(tO({lightDirection:e})).mul(dd))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:i}){i.indirectDiffuse.addAssign(t.mul(pl({diffuseColor:Tt}))),i.indirectDiffuse.mulAssign(e)}}const iO=new tw;class nO extends ri{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(iO),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Vx(t):null}setupLightingModel(){return new aA(!1)}}const sO=new JT;class rO extends ri{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(sO),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Vx(t):null}setupLightingModel(){return new aA}setupVariants(){const e=(this.shininessNode?ee(this.shininessNode):GB).max(1e-4);sy.assign(e);const t=this.specularNode||HB;vn.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const oO=be(o=>{if(o.geometry.hasAttribute("normal")===!1)return ee(0);const e=jn.dFdx().abs().max(jn.dFdy().abs());return e.x.max(e.y).max(e.z)}),lA=be(o=>{const{roughness:e}=o,t=oO();let i=e.max(.0525);return i=i.add(t),i=i.min(1),i}),aO=be(({alpha:o,dotNL:e,dotNV:t})=>{const i=o.pow2(),n=e.mul(i.add(i.oneMinus().mul(t.pow2())).sqrt()),s=t.mul(i.add(i.oneMinus().mul(e.pow2())).sqrt());return zr(.5,n.add(s).max(tU))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),lO=be(({alphaT:o,alphaB:e,dotTV:t,dotBV:i,dotTL:n,dotBL:s,dotNV:r,dotNL:a})=>{const l=a.mul(Q(o.mul(t),e.mul(i),r).length()),c=r.mul(Q(o.mul(n),e.mul(s),a).length());return zr(.5,l.add(c)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),cO=be(({alpha:o,dotNH:e})=>{const t=o.pow2(),i=e.pow2().mul(t.oneMinus()).oneMinus();return t.div(i.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),hO=ee(1/Math.PI),uO=be(({alphaT:o,alphaB:e,dotNH:t,dotTH:i,dotBH:n})=>{const s=o.mul(e),r=Q(e.mul(i),o.mul(n),s.mul(t)),a=r.dot(r),l=s.div(a);return hO.mul(s.mul(l.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),jv=be(o=>{const{lightDirection:e,f0:t,f90:i,roughness:n,f:s,USE_IRIDESCENCE:r,USE_ANISOTROPY:a}=o,l=o.normalView||si,c=n.pow2(),h=e.add(Ht).normalize(),u=l.dot(e).clamp(),d=l.dot(Ht).clamp(),f=l.dot(h).clamp(),p=Ht.dot(h).clamp();let m=Kc({f0:t,f90:i,dotVH:p}),g,y;if(Uv(r)&&(m=Nx.mix(m,s)),Uv(a)){const x=cd.dot(e),_=cd.dot(Ht),v=cd.dot(h),A=rl.dot(e),T=rl.dot(Ht),M=rl.dot(h);g=lO({alphaT:ny,alphaB:c,dotTV:_,dotBV:T,dotTL:x,dotBL:A,dotNV:d,dotNL:u}),y=uO({alphaT:ny,alphaB:c,dotNH:f,dotTH:v,dotBH:M})}else g=aO({alpha:c,dotNL:u,dotNV:d}),y=cO({alpha:c,dotNH:f});return m.mul(g).mul(y)}),cA=be(({roughness:o,dotNV:e})=>{const t=Qe(-1,-.0275,-.572,.022),i=Qe(1,.0425,1.04,-.04),n=o.mul(t).add(i),s=n.x.mul(n.x).min(e.mul(-9.28).exp2()).mul(n.x).add(n.y);return Se(-1.04,1.04).mul(s).add(n.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),hA=be(o=>{const{dotNV:e,specularColor:t,specularF90:i,roughness:n}=o,s=cA({dotNV:e,roughness:n});return t.mul(s.x).add(i.mul(s.y))}),dO=be(({f:o,f90:e,dotVH:t})=>{const i=t.oneMinus().saturate(),n=i.mul(i),s=i.mul(n,n).clamp(0,.9999);return o.sub(Q(e).mul(s)).div(s.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),fO=be(({roughness:o,dotNH:e})=>{const t=o.pow2(),i=ee(1).div(t),s=e.pow2().oneMinus().max(.0078125);return ee(2).add(i).mul(s.pow(i.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),pO=be(({dotNV:o,dotNL:e})=>ee(1).div(ee(4).mul(e.add(o).sub(e.mul(o))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),mO=be(({lightDirection:o})=>{const e=o.add(Ht).normalize(),t=si.dot(o).clamp(),i=si.dot(Ht).clamp(),n=si.dot(e).clamp(),s=fO({roughness:Rx,dotNH:n}),r=pO({dotNV:i,dotNL:t});return Za.mul(s).mul(r)}),gO=be(({N:o,V:e,roughness:t})=>{const s=.0078125,r=o.dot(e).saturate(),a=Se(t,r.oneMinus().sqrt());return a.assign(a.mul(.984375).add(s)),a}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),yO=be(({f:o})=>{const e=o.length();return Ln(e.mul(e).add(o.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),Uu=be(({v1:o,v2:e})=>{const t=o.dot(e),i=t.abs().toVar(),n=i.mul(.0145206).add(.4965155).mul(i).add(.8543985).toVar(),s=i.add(4.1616724).mul(i).add(3.417594).toVar(),r=n.div(s),a=t.greaterThan(0).select(r,Ln(t.mul(t).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(r));return o.cross(e).mul(a)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),Jv=be(({N:o,V:e,P:t,mInv:i,p0:n,p1:s,p2:r,p3:a})=>{const l=s.sub(n).toVar(),c=a.sub(n).toVar(),h=l.cross(c),u=Q().toVar();return Ri(h.dot(t.sub(n)).greaterThanEqual(0),()=>{const d=e.sub(o.mul(e.dot(o))).normalize(),f=o.cross(d).negate(),p=i.mul(Ki(d,f,o).transpose()).toVar(),m=p.mul(n.sub(t)).normalize().toVar(),g=p.mul(s.sub(t)).normalize().toVar(),y=p.mul(r.sub(t)).normalize().toVar(),x=p.mul(a.sub(t)).normalize().toVar(),_=Q(0).toVar();_.addAssign(Uu({v1:m,v2:g})),_.addAssign(Uu({v1:g,v2:y})),_.addAssign(Uu({v1:y,v2:x})),_.addAssign(Uu({v1:x,v2:m})),u.assign(Q(yO({f:_})))}),u}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),up=1/6,uA=o=>dt(up,dt(o,dt(o,o.negate().add(3)).sub(3)).add(1)),cy=o=>dt(up,dt(o,dt(o,dt(3,o).sub(6))).add(4)),dA=o=>dt(up,dt(o,dt(o,dt(-3,o).add(3)).add(3)).add(1)),hy=o=>dt(up,sp(o,3)),Qv=o=>uA(o).add(cy(o)),eb=o=>dA(o).add(hy(o)),tb=o=>ji(-1,cy(o).div(uA(o).add(cy(o)))),ib=o=>ji(1,hy(o).div(dA(o).add(hy(o)))),nb=(o,e,t)=>{const i=o.uvNode,n=dt(i,e.zw).add(.5),s=Lo(n),r=$r(n),a=Qv(r.x),l=eb(r.x),c=tb(r.x),h=ib(r.x),u=tb(r.y),d=ib(r.y),f=Se(s.x.add(c),s.y.add(u)).sub(.5).mul(e.xy),p=Se(s.x.add(h),s.y.add(u)).sub(.5).mul(e.xy),m=Se(s.x.add(c),s.y.add(d)).sub(.5).mul(e.xy),g=Se(s.x.add(h),s.y.add(d)).sub(.5).mul(e.xy),y=Qv(r.y).mul(ji(a.mul(o.uv(f).level(t)),l.mul(o.uv(p).level(t)))),x=eb(r.y).mul(ji(a.mul(o.uv(m).level(t)),l.mul(o.uv(g).level(t))));return y.add(x)},xO=be(([o,e=ee(3)])=>{const t=Se(o.size(Zt(e))),i=Se(o.size(Zt(e.add(1)))),n=zr(1,t),s=zr(1,i),r=nb(o,Qe(n,t),Lo(e)),a=nb(o,Qe(s,i),Ix(e));return $r(e).mix(r,a)}),sb=be(([o,e,t,i,n])=>{const s=Q(Dw(e.negate(),Wc(o),zr(1,i))),r=Q(Lr(n[0].xyz),Lr(n[1].xyz),Lr(n[2].xyz));return Wc(s).mul(t.mul(r))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),_O=be(([o,e])=>o.mul(tr(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),vO=jw(),bO=jw(),rb=be(([o,e,t],{material:i})=>{const s=(i.side==Zn?vO:bO).uv(o),r=Ks(ly.x).mul(_O(e,t));return xO(s,r)}),ob=be(([o,e,t])=>(Ri(t.notEqual(0),()=>{const i=ww(e).negate().div(t);return Tw(i.negate().mul(o))}),Q(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),SO=be(([o,e,t,i,n,s,r,a,l,c,h,u,d,f,p])=>{let m,g;if(p){m=Qe().toVar(),g=Q().toVar();const A=h.sub(1).mul(p.mul(.025)),T=Q(h.sub(A),h,h.add(A));ls({start:0,end:3},({i:M})=>{const w=T.element(M),S=sb(o,e,u,w,a),b=r.add(S),N=c.mul(l.mul(Qe(b,1))),z=Se(N.xy.div(N.w)).toVar();z.addAssign(1),z.divAssign(2),z.assign(Se(z.x,z.y.oneMinus()));const L=rb(z,t,w);m.element(M).assign(L.element(M)),m.a.addAssign(L.a),g.element(M).assign(i.element(M).mul(ob(Lr(S),d,f).element(M)))}),m.a.divAssign(3)}else{const A=sb(o,e,u,h,a),T=r.add(A),M=c.mul(l.mul(Qe(T,1))),w=Se(M.xy.div(M.w)).toVar();w.addAssign(1),w.divAssign(2),w.assign(Se(w.x,w.y.oneMinus())),m=rb(w,t,h),g=i.mul(ob(Lr(A),d,f))}const y=g.rgb.mul(m.rgb),x=o.dot(e).clamp(),_=Q(hA({dotNV:x,specularColor:n,specularF90:s,roughness:t})),v=g.r.add(g.g,g.b).div(3);return Qe(_.oneMinus().mul(y),m.a.oneMinus().mul(v).oneMinus())}),MO=Ki(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),TO=o=>{const e=o.sqrt();return Q(1).add(e).div(Q(1).sub(e))},ab=(o,e)=>o.sub(e).div(o.add(e)).pow2(),wO=(o,e)=>{const t=o.mul(2*Math.PI*1e-9),i=Q(54856e-17,44201e-17,52481e-17),n=Q(1681e3,1795300,2208400),s=Q(43278e5,93046e5,66121e5),r=ee(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(t.mul(2239900).add(e.x).cos()).mul(t.pow2().mul(-45282e5).exp());let a=i.mul(s.mul(2*Math.PI).sqrt()).mul(n.mul(t).add(e).cos()).mul(t.pow2().negate().mul(s).exp());return a=Q(a.x.add(r),a.y,a.z).div(10685e-11),MO.mul(a)},AO=be(({outsideIOR:o,eta2:e,cosTheta1:t,thinFilmThickness:i,baseF0:n})=>{const s=zt(o,e,Ho(0,.03,i)),a=o.div(s).pow2().mul(t.pow2().oneMinus()).oneMinus();Ri(a.lessThan(0),()=>Q(1));const l=a.sqrt(),c=ab(s,o),h=Kc({f0:c,f90:1,dotVH:t}),u=h.oneMinus(),d=s.lessThan(o).select(Math.PI,0),f=ee(Math.PI).sub(d),p=TO(n.clamp(0,.9999)),m=ab(p,s.toVec3()),g=Kc({f0:m,f90:1,dotVH:l}),y=Q(p.x.lessThan(s).select(Math.PI,0),p.y.lessThan(s).select(Math.PI,0),p.z.lessThan(s).select(Math.PI,0)),x=s.mul(i,l,2),_=Q(f).add(y),v=h.mul(g).clamp(1e-5,.9999),A=v.sqrt(),T=u.pow2().mul(g).div(Q(1).sub(v)),w=h.add(T).toVar(),S=T.sub(u).toVar();return ls({start:1,end:2,condition:"<=",name:"m"},({m:b})=>{S.mulAssign(A);const N=wO(ee(b).mul(x),ee(b).mul(_)).mul(2);w.addAssign(S.mul(N))}),w.max(Q(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),EO=be(({normal:o,viewDir:e,roughness:t})=>{const i=o.dot(e).saturate(),n=t.pow2(),s=on(t.lessThan(.25),ee(-339.2).mul(n).add(ee(161.4).mul(t)).sub(25.9),ee(-8.48).mul(n).add(ee(14.3).mul(t)).sub(9.95)),r=on(t.lessThan(.25),ee(44).mul(n).sub(ee(23.7).mul(t)).add(3.26),ee(1.97).mul(n).sub(ee(3.27).mul(t)).add(.72));return on(t.lessThan(.25),0,ee(.1).mul(t).sub(.025)).add(s.mul(i).add(r).exp()).mul(1/Math.PI).saturate()}),Um=Q(.04),Bm=ee(1);class fA extends hp{constructor(e=!1,t=!1,i=!1,n=!1,s=!1,r=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=i,this.anisotropy=n,this.transmission=s,this.dispersion=r,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=Q().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=Q().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=Q().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=Q().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=Q().toVar("sheenSpecularIndirect")),this.iridescence===!0){const t=si.dot(Ht).clamp();this.iridescenceFresnel=AO({outsideIOR:ee(1),eta2:gw,cosTheta1:t,thinFilmThickness:yw,baseF0:vn}),this.iridescenceF0=dO({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(this.transmission===!0){const t=oy,i=pB.sub(oy).normalize(),n=Bx;e.backdrop=SO(n,i,Gs,Tt,vn,yf,t,Wo,rr,xf,hd,xw,vw,_w,this.dispersion?bw:null),e.backdropAlpha=ry,Tt.a.mulAssign(zt(1,e.backdrop.a,ry))}}computeMultiscattering(e,t,i){const n=si.dot(Ht).clamp(),s=cA({roughness:Gs,dotNV:n}),a=(this.iridescenceF0?Nx.mix(vn,this.iridescenceF0):vn).mul(s.x).add(i.mul(s.y)),c=s.x.add(s.y).oneMinus(),h=vn.add(vn.oneMinus().mul(.047619)),u=a.mul(h).div(c.mul(h).oneMinus());e.addAssign(a),t.addAssign(u.mul(c))}direct({lightDirection:e,lightColor:t,reflectedLight:i}){const s=si.dot(e).clamp().mul(t);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(s.mul(mO({lightDirection:e}))),this.clearcoat===!0){const a=ic.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(a.mul(jv({lightDirection:e,f0:Um,f90:Bm,roughness:gf,normalView:ic})))}i.directDiffuse.addAssign(s.mul(pl({diffuseColor:Tt.rgb}))),i.directSpecular.addAssign(s.mul(jv({lightDirection:e,f0:vn,f90:1,roughness:Gs,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:i,halfHeight:n,reflectedLight:s,ltc_1:r,ltc_2:a}){const l=t.add(i).sub(n),c=t.sub(i).sub(n),h=t.sub(i).add(n),u=t.add(i).add(n),d=si,f=Ht,p=Ei.toVar(),m=gO({N:d,V:f,roughness:Gs}),g=r.uv(m).toVar(),y=a.uv(m).toVar(),x=Ki(Q(g.x,0,g.y),Q(0,1,0),Q(g.z,0,g.w)).toVar(),_=vn.mul(y.x).add(vn.oneMinus().mul(y.y)).toVar();s.directSpecular.addAssign(e.mul(_).mul(Jv({N:d,V:f,P:p,mInv:x,p0:l,p1:c,p2:h,p3:u}))),s.directDiffuse.addAssign(e.mul(Tt).mul(Jv({N:d,V:f,P:p,mInv:Ki(1,0,0,0,1,0,0,0,1),p0:l,p1:c,p2:h,p3:u})))}indirect(e,t,i){this.indirectDiffuse(e,t,i),this.indirectSpecular(e,t,i),this.ambientOcclusion(e,t,i)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(pl({diffuseColor:Tt})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:i}){if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(t.mul(Za,EO({normal:si,viewDir:Ht,roughness:Rx}))),this.clearcoat===!0){const c=ic.dot(Ht).clamp(),h=hA({dotNV:c,specularColor:Um,specularF90:Bm,roughness:gf});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(h))}const n=Q().toVar("singleScattering"),s=Q().toVar("multiScattering"),r=t.mul(1/Math.PI);this.computeMultiscattering(n,s,yf);const a=n.add(s),l=Tt.mul(a.r.max(a.g).max(a.b).oneMinus());i.indirectSpecular.addAssign(e.mul(n)),i.indirectSpecular.addAssign(s.mul(r)),i.indirectDiffuse.addAssign(l.mul(r))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const n=si.dot(Ht).clamp().add(e),s=Gs.mul(-16).oneMinus().negate().exp2(),r=e.sub(n.pow(s).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(e),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(r)}finish(e){const{outgoingLight:t}=e;if(this.clearcoat===!0){const i=ic.dot(Ht).clamp(),n=Kc({dotVH:i,f0:Um,f90:Bm}),s=t.mul(iy.mul(n).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(iy));t.assign(s)}if(this.sheen===!0){const i=Za.r.max(Za.g).max(Za.b).mul(.157).oneMinus(),n=t.mul(i).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(n)}}}const lb=ee(1),uy=ee(-2),Bu=ee(.8),Om=ee(-1),Ou=ee(.4),zm=ee(2),zu=ee(.305),km=ee(3),cb=ee(.21),CO=ee(4),hb=ee(4),RO=ee(16),NO=be(([o])=>{const e=Q($n(o)).toVar(),t=ee(-1).toVar();return Ri(e.x.greaterThan(e.z),()=>{Ri(e.x.greaterThan(e.y),()=>{t.assign(on(o.x.greaterThan(0),0,3))}).Else(()=>{t.assign(on(o.y.greaterThan(0),1,4))})}).Else(()=>{Ri(e.z.greaterThan(e.y),()=>{t.assign(on(o.z.greaterThan(0),2,5))}).Else(()=>{t.assign(on(o.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),PO=be(([o,e])=>{const t=Se().toVar();return Ri(e.equal(0),()=>{t.assign(Se(o.z,o.y).div($n(o.x)))}).ElseIf(e.equal(1),()=>{t.assign(Se(o.x.negate(),o.z.negate()).div($n(o.y)))}).ElseIf(e.equal(2),()=>{t.assign(Se(o.x.negate(),o.y).div($n(o.z)))}).ElseIf(e.equal(3),()=>{t.assign(Se(o.z.negate(),o.y).div($n(o.x)))}).ElseIf(e.equal(4),()=>{t.assign(Se(o.x.negate(),o.z).div($n(o.y)))}).Else(()=>{t.assign(Se(o.x,o.y).div($n(o.z)))}),dt(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),IO=be(([o])=>{const e=ee(0).toVar();return Ri(o.greaterThanEqual(Bu),()=>{e.assign(lb.sub(o).mul(Om.sub(uy)).div(lb.sub(Bu)).add(uy))}).ElseIf(o.greaterThanEqual(Ou),()=>{e.assign(Bu.sub(o).mul(zm.sub(Om)).div(Bu.sub(Ou)).add(Om))}).ElseIf(o.greaterThanEqual(zu),()=>{e.assign(Ou.sub(o).mul(km.sub(zm)).div(Ou.sub(zu)).add(zm))}).ElseIf(o.greaterThanEqual(cb),()=>{e.assign(zu.sub(o).mul(CO.sub(km)).div(zu.sub(cb)).add(km))}).Else(()=>{e.assign(ee(-2).mul(Ks(dt(1.16,o))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),DO=be(([o,e])=>{const t=o.toVar();t.assign(dt(2,t).sub(1));const i=Q(t,1).toVar();return Ri(e.equal(0),()=>{i.assign(i.zyx)}).ElseIf(e.equal(1),()=>{i.assign(i.xzy),i.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{i.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{i.assign(i.zyx),i.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{i.assign(i.xzy),i.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{i.z.mulAssign(-1)}),i}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),LO=be(([o,e,t,i,n,s])=>{const r=ee(t),a=Q(e),l=tr(IO(r),uy,s),c=$r(l),h=Lo(l),u=Q(dy(o,a,h,i,n,s)).toVar();return Ri(c.notEqual(0),()=>{const d=Q(dy(o,a,h.add(1),i,n,s)).toVar();u.assign(zt(u,d,c))}),u}),dy=be(([o,e,t,i,n,s])=>{const r=ee(t).toVar(),a=Q(e),l=ee(NO(a)).toVar(),c=ee(Ln(hb.sub(r),0)).toVar();r.assign(Ln(r,hb));const h=ee(Hc(r)).toVar(),u=Se(PO(a,l).mul(h.sub(2)).add(1)).toVar();return Ri(l.greaterThan(2),()=>{u.y.addAssign(h),l.subAssign(3)}),u.x.addAssign(l.mul(h)),u.x.addAssign(c.mul(dt(3,RO))),u.y.addAssign(dt(4,Hc(s).sub(h))),u.x.mulAssign(i),u.y.mulAssign(n),o.uv(u).grad(Se(),Se())}),Gm=be(({envMap:o,mipInt:e,outputDirection:t,theta:i,axis:n,CUBEUV_TEXEL_WIDTH:s,CUBEUV_TEXEL_HEIGHT:r,CUBEUV_MAX_MIP:a})=>{const l=wr(i),c=t.mul(l).add(n.cross(t).mul(Wn(i))).add(n.mul(n.dot(t).mul(l.oneMinus())));return dy(o,c,e,s,r,a)}),FO=be(({n:o,latitudinal:e,poleAxis:t,outputDirection:i,weights:n,samples:s,dTheta:r,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u})=>{const d=Q(on(e,t,Pw(t,i))).toVar();Ri(Mw(d.equals(Q(0))),()=>{d.assign(Q(i.z,0,i.x.negate()))}),d.assign(Wc(d));const f=Q().toVar();return f.addAssign(n.element(Zt(0)).mul(Gm({theta:0,axis:d,outputDirection:i,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u}))),ls({start:Zt(1),end:o},({i:p})=>{Ri(p.greaterThanEqual(s),()=>{T3()});const m=ee(r.mul(ee(p))).toVar();f.addAssign(n.element(p).mul(Gm({theta:m.mul(-1),axis:d,outputDirection:i,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u}))),f.addAssign(n.element(p).mul(Gm({theta:m,axis:d,outputDirection:i,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:u})))}),Qe(f,1)});let _f=null;const ub=new WeakMap;function UO(o){const e=Math.log2(o)-2,t=1/o;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:t,maxMip:e}}function BO(o){let e=ub.get(o);if((e!==void 0?e.pmremVersion:-1)!==o.pmremVersion){const i=o.image;if(o.isCubeTexture)if(zO(i))e=_f.fromCubemap(o,e);else return null;else if(kO(i))e=_f.fromEquirectangular(o,e);else return null;e.pmremVersion=o.pmremVersion,ub.set(o,e)}return e.texture}class OO extends oi{static get type(){return"PMREMNode"}constructor(e,t=null,i=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=i,this._generator=null;const n=new Zi;n.isRenderTargetTexture=!0,this._texture=jt(n),this._width=et(0),this._height=et(0),this._maxMip=et(0),this.updateBeforeType=ut.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=UO(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(){let e=this._pmrem;const t=e?e.pmremVersion:-1,i=this._value;t!==i.pmremVersion&&(i.isPMREMTexture===!0?e=i:e=BO(i),e!==null&&(this._pmrem=e,this.updateFromTexture(e)))}setup(e){_f===null&&(_f=e.createPMREMGenerator()),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this));const i=this.value;e.renderer.coordinateSystem===qn&&i.isPMREMTexture!==!0&&i.isRenderTargetTexture===!0&&(t=Q(t.x.negate(),t.yz));let n=this.levelNode;return n===null&&e.context.getTextureLevel&&(n=e.context.getTextureLevel(this)),LO(this._texture,t,n,this._width,this._height,this._maxMip)}}function zO(o){if(o==null)return!1;let e=0;const t=6;for(let i=0;i<t;i++)o[i]!==void 0&&e++;return e===t}function kO(o){return o==null?!1:o.height>0}const pA=ne(OO),db=new WeakMap;class GO extends wl{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){const f=i.isTextureNode?i.value:t[i.property];let p=db.get(f);p===void 0&&(p=pA(f),db.set(f,p)),i=p}const s=t.envMap?Wt("envMapIntensity","float",e.material):Wt("environmentIntensity","float",e.scene),a=t.useAnisotropy===!0||t.anisotropy>0?IB:si,l=i.context(fb(Gs,a)).mul(s),c=i.context(VO(Bx)).mul(Math.PI).mul(s),h=ud(l),u=ud(c);e.context.radiance.addAssign(h),e.context.iblIrradiance.addAssign(u);const d=e.context.lightingModel.clearcoatRadiance;if(d){const f=i.context(fb(gf,ic)).mul(s),p=ud(f);d.addAssign(p)}}}const fb=(o,e)=>{let t=null;return{getUV:()=>(t===null&&(t=Ht.negate().reflect(e),t=o.mul(o).mix(t,e).normalize(),t=t.transformDirection(rr)),t),getTextureLevel:()=>o}},VO=o=>({getUV:()=>o,getTextureLevel:()=>ee(1)}),HO=new bx;class mA extends ri{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(HO),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t===null&&e.environmentNode&&(t=e.environmentNode),t?new GO(t):null}setupLightingModel(){return new fA}setupSpecular(){const e=zt(Q(.04),Tt.rgb,mf);vn.assign(e),yf.assign(1)}setupVariants(){const e=this.metalnessNode?ee(this.metalnessNode):XB;mf.assign(e);let t=this.roughnessNode?ee(this.roughnessNode):$B;t=lA({roughness:t}),Gs.assign(t),this.setupSpecular(),Tt.assign(Qe(Tt.rgb.mul(e.oneMinus()),Tt.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const WO=new jT;class $O extends mA{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(WO),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?ee(this.iorNode):o3;hd.assign(e),vn.assign(zt($c(Iw(hd.sub(1).div(hd.add(1))).mul(WB),Q(1)).mul($v),Tt.rgb,mf)),yf.assign(zt($v,1,mf))}setupLightingModel(){return new fA(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const t=this.clearcoatNode?ee(this.clearcoatNode):YB,i=this.clearcoatRoughnessNode?ee(this.clearcoatRoughnessNode):ZB;iy.assign(t),gf.assign(lA({roughness:i}))}if(this.useSheen){const t=this.sheenNode?Q(this.sheenNode):JB,i=this.sheenRoughnessNode?ee(this.sheenRoughnessNode):QB;Za.assign(t),Rx.assign(i)}if(this.useIridescence){const t=this.iridescenceNode?ee(this.iridescenceNode):t3,i=this.iridescenceIORNode?ee(this.iridescenceIORNode):i3,n=this.iridescenceThicknessNode?ee(this.iridescenceThicknessNode):n3;Nx.assign(t),gw.assign(i),yw.assign(n)}if(this.useAnisotropy){const t=(this.anisotropyNode?Se(this.anisotropyNode):e3).toVar();go.assign(t.length()),Ri(go.equal(0),()=>{t.assign(Se(1,0))}).Else(()=>{t.divAssign(Se(go)),go.assign(go.saturate())}),ny.assign(go.pow2().mix(Gs.pow2(),1)),cd.assign(nc[0].mul(t.x).add(nc[1].mul(t.y))),rl.assign(nc[1].mul(t.x).sub(nc[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?ee(this.transmissionNode):s3,i=this.thicknessNode?ee(this.thicknessNode):r3,n=this.attenuationDistanceNode?ee(this.attenuationDistanceNode):a3,s=this.attenuationColorNode?Q(this.attenuationColorNode):l3;if(ry.assign(t),xw.assign(i),_w.assign(n),vw.assign(s),this.useDispersion){const r=this.dispersionNode?ee(this.dispersionNode):d3;bw.assign(r)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?Q(this.clearcoatNormalNode):KB}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const XO=be(({normal:o,lightDirection:e,builder:t})=>{const i=o.dot(e),n=Se(i.mul(.5).add(.5),0);if(t.material.gradientMap){const s=Rr("gradientMap","texture").context({getUV:()=>n});return Q(s.r)}else{const s=n.fwidth().mul(.5);return zt(Q(.7),Q(1),Ho(ee(.7).sub(s.x),ee(.7).add(s.x),n.x))}});class qO extends hp{direct({lightDirection:e,lightColor:t,reflectedLight:i},n,s){const r=XO({normal:Gw,lightDirection:e,builder:s}).mul(t);i.directDiffuse.addAssign(r.mul(pl({diffuseColor:Tt.rgb})))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:i}){i.indirectDiffuse.addAssign(t.mul(pl({diffuseColor:Tt}))),i.indirectDiffuse.mulAssign(e)}}const YO=new QT;class ZO extends ri{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(YO),this.setValues(e)}setupLightingModel(){return new qO}}class KO extends oi{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=Q(Ht.z,0,Ht.x.negate()).normalize(),t=Ht.cross(e);return Se(e.dot(si),t.dot(si)).mul(.495).add(.5)}}const jO=ge(KO),JO=new iw;class QO extends ri{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(JO),this.setValues(e)}setupVariants(e){const t=jO;let i;e.material.matcap?i=Rr("matcap","texture").context({getUV:()=>t}):i=Q(zt(.2,.8,t.y)),Tt.rgb.mulAssign(i.rgb)}}const ez=new ZT;class tz extends ri{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(ez),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}class iz extends oi{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:i}=this;if(this.getNodeType(e)==="vec2"){const s=t.cos(),r=t.sin();return Cx(s,r,r.negate(),s).mul(i)}else{const s=t,r=sl(Qe(1,0,0,0),Qe(0,wr(s.x),Wn(s.x).negate(),0),Qe(0,Wn(s.x),wr(s.x),0),Qe(0,0,0,1)),a=sl(Qe(wr(s.y),0,Wn(s.y),0),Qe(0,1,0,0),Qe(Wn(s.y).negate(),0,wr(s.y),0),Qe(0,0,0,1)),l=sl(Qe(wr(s.z),Wn(s.z).negate(),0,0),Qe(Wn(s.z),wr(s.z),0,0),Qe(0,0,1,0),Qe(0,0,0,1));return r.mul(a).mul(l).mul(Qe(i,1)).xyz}}}const nz=ne(iz),sz=new qT;class rz extends ri{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(sz),this.setValues(e)}setupPosition({object:e,camera:t,context:i}){const n=this.sizeAttenuation,{positionNode:s,rotationNode:r,scaleNode:a}=this,l=Ni;let c=ap.mul(Q(s||0)),h=Se(Wo[0].xyz.length(),Wo[1].xyz.length());if(a!==null&&(h=h.mul(a)),!n)if(t.isPerspectiveCamera)h=h.mul(c.z.negate());else{const m=ee(2).div(xf.element(1).element(1));h=h.mul(m.mul(2))}let u=l.xy;if(e.center&&e.center.isVector2===!0){const m=$U("center","vec2");u=u.sub(m.sub(.5))}u=u.mul(h);const d=ee(r||jB),f=nz(u,d);c=Qe(c.xy.add(f),c.zw);const p=xf.mul(c);return i.vertex=l,p}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}class oz extends hp{constructor(){super(),this.shadowNode=ee(1).toVar("shadowMask")}direct({shadowMask:e}){this.shadowNode.mulAssign(e)}finish(e){Tt.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(Tt.rgb)}}const az=new KT;class lz extends ri{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(az),this.setValues(e)}setupLightingModel(){return new oz}}be(({texture:o,uv:e})=>{const i=Q().toVar();return Ri(e.x.lessThan(1e-4),()=>{i.assign(Q(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{i.assign(Q(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{i.assign(Q(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{i.assign(Q(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{i.assign(Q(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{i.assign(Q(0,0,-1))}).Else(()=>{const s=o.uv(e.add(Q(-.01,0,0))).r.sub(o.uv(e.add(Q(.01,0,0))).r),r=o.uv(e.add(Q(0,-.01,0))).r.sub(o.uv(e.add(Q(0,.01,0))).r),a=o.uv(e.add(Q(0,0,-.01))).r.sub(o.uv(e.add(Q(0,0,.01))).r);i.assign(Q(s,r,a))}),i.normalize()});class cz{constructor(e,t){this.nodes=e,this.info=t,this.animationLoop=null,this.requestId=null,this._init()}_init(){const e=(t,i)=>{this.requestId=self.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this.animationLoop!==null&&this.animationLoop(t,i)};e()}dispose(){self.cancelAnimationFrame(this.requestId),this.requestId=null}setAnimationLoop(e){this.animationLoop=e}}class gs{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let i=0;i<e.length;i++)if(t=t.get(e[i]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let i=this.weakMap;for(let n=0;n<e.length;n++){const s=e[n];i.has(s)===!1&&i.set(s,new WeakMap),i=i.get(s)}return i.set(e[e.length-1],t)}delete(e){let t=this.weakMap;for(let i=0;i<e.length;i++)if(t=t.get(e[i]),t===void 0)return!1;return t.delete(e[e.length-1])}}const Vm=new Tr;class fy{constructor(){this.version=0,this.globalClippingCount=0,this.localClippingCount=0,this.localClippingEnabled=!1,this.localClipIntersection=!1,this.planes=[],this.parentVersion=0,this.viewNormalMatrix=new dn,this.cacheKey=0}projectPlanes(e,t){const i=e.length,n=this.planes;for(let s=0;s<i;s++){Vm.copy(e[s]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const r=n[t+s],a=Vm.normal;r.x=-a.x,r.y=-a.y,r.z=-a.z,r.w=Vm.constant}}updateGlobal(e,t){const i=e.clippingPlanes;this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix);let n=!1;if(Array.isArray(i)&&i.length!==0){const s=i.length;if(s!==this.globalClippingCount){const r=[];for(let a=0;a<s;a++)r.push(new Ct);this.globalClippingCount=s,this.planes=r,n=!0}this.projectPlanes(i,0)}else this.globalClippingCount!==0&&(this.globalClippingCount=0,this.planes=[],n=!0);e.localClippingEnabled!==this.localClippingEnabled&&(this.localClippingEnabled=e.localClippingEnabled,n=!0),n&&(this.version++,this.cacheKey=hf(this.globalClippingCount,this.localClippingEnabled===!0?1:0))}update(e,t){let i=!1;if(this!==e&&e.version!==this.parentVersion&&(this.globalClippingCount=t.isShadowNodeMaterial?0:e.globalClippingCount,this.localClippingEnabled=e.localClippingEnabled,this.planes=Array.from(e.planes),this.parentVersion=e.version,this.viewMatrix=e.viewMatrix,this.viewNormalMatrix=e.viewNormalMatrix,i=!0),this.localClippingEnabled){const n=t.clippingPlanes;if(Array.isArray(n)&&n.length!==0){const s=n.length,r=this.planes,a=this.globalClippingCount;if(i||s!==this.localClippingCount){r.length=a+s;for(let l=0;l<s;l++)r[a+l]=new Ct;this.localClippingCount=s,i=!0}this.projectPlanes(n,a)}else this.localClippingCount!==0&&(this.localClippingCount=0,i=!0);this.localClipIntersection!==t.clipIntersection&&(this.localClipIntersection=t.clipIntersection,i=!0)}i&&(this.version+=e.version,this.cacheKey=hf(e.cacheKey,this.localClippingCount,this.localClipIntersection===!0?1:0))}}let hz=0;function uz(o){const e=Object.keys(o);let t=Object.getPrototypeOf(o);for(;t;){const i=Object.getOwnPropertyDescriptors(t);for(const n in i)if(i[n]!==void 0){const s=i[n];s&&typeof s.get=="function"&&e.push(n)}t=Object.getPrototypeOf(t)}return e}class dz{constructor(e,t,i,n,s,r,a,l,c){this._nodes=e,this._geometries=t,this.id=hz++,this.renderer=i,this.object=n,this.material=s,this.scene=r,this.camera=a,this.lightsNode=l,this.context=c,this.geometry=n.geometry,this.version=s.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.updateClipping(c.clippingContext),this.clippingContextVersion=this.clippingContext.version,this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){const t=this.material;let i=this.clippingContext;Array.isArray(t.clippingPlanes)?((i===e||!i)&&(i=new fy,this.clippingContext=i),i.update(e,t)):this.clippingContext!==e&&(this.clippingContext=e)}get clippingNeedsUpdate(){return this.clippingContext.version===this.clippingContextVersion?!1:(this.clippingContextVersion=this.clippingContext.version,!0)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,i=[],n=new Set;for(const s of e){const r=s.node&&s.node.attribute?s.node.attribute:t.getAttribute(s.name);if(r===void 0)continue;i.push(r);const a=r.isInterleavedBufferAttribute?r.data:r;n.add(a)}return this.attributes=i,this.vertexBuffers=Array.from(n.values()),i}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:i,group:n,drawRange:s}=this,r=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),l=a!==null,c=i.isInstancedBufferGeometry?i.instanceCount:e.count>1?e.count:1;if(c===0)return null;if(r.instanceCount=c,e.isBatchedMesh===!0)return r;let h=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(h=2);let u=s.start*h,d=(s.start+s.count)*h;n!==null&&(u=Math.max(u,n.start*h),d=Math.min(d,(n.start+n.count)*h));const f=i.attributes.position;let p=1/0;l?p=a.count:f!=null&&(p=f.count),u=Math.max(u,0),d=Math.min(d,p);const m=d-u;return m<0||m===1/0?null:(r.vertexCount=m,r.firstVertex=u,r)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const i of Object.keys(e.attributes).sort()){const n=e.attributes[i];t+=i+",",n.data&&(t+=n.data.stride+","),n.offset&&(t+=n.offset+","),n.itemSize&&(t+=n.itemSize+","),n.normalized&&(t+="n,")}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let i=t.customProgramCacheKey();for(const n of uz(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(n))continue;const s=t[n];let r;if(s!==null){const a=typeof s;a==="number"?r=s!==0?"1":"0":a==="object"?(r="{",s.isTexture&&(r+=s.mapping),r+="}"):r=String(s)}else r=String(s);i+=r+","}return i+=this.clippingContext.cacheKey+",",e.geometry&&(i+=this.getGeometryCacheKey()),e.skeleton&&(i+=e.skeleton.bones.length+","),e.morphTargetInfluences&&(i+=e.morphTargetInfluences.length+","),e.isBatchedMesh&&(i+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(i+=e._colorsTexture.uuid+",")),e.count>1&&(i+=e.uuid+","),KL(i)}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=this._nodes.getCacheKey(this.scene,this.lightsNode);return this.object.receiveShadow&&(e+=1),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const Ia=[];class fz{constructor(e,t,i,n,s,r){this.renderer=e,this.nodes=t,this.geometries=i,this.pipelines=n,this.bindings=s,this.info=r,this.chainMaps={}}get(e,t,i,n,s,r,a){const l=this.getChainMap(a);Ia[0]=e,Ia[1]=t,Ia[2]=r,Ia[3]=s;let c=l.get(Ia);return c===void 0?(c=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,i,n,s,r,a),l.set(Ia,c)):(c.updateClipping(r.clippingContext),(c.version!==t.version||c.needsUpdate)&&(c.initialCacheKey!==c.getCacheKey()?(c.dispose(),c=this.get(e,t,i,n,s,r,a)):c.version=t.version)),c}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new gs)}dispose(){this.chainMaps={}}createRenderObject(e,t,i,n,s,r,a,l,c,h){const u=this.getChainMap(h),d=new dz(e,t,i,n,s,r,a,l,c);return d.onDispose=()=>{this.pipelines.delete(d),this.bindings.delete(d),this.nodes.delete(d),u.delete(d.getChainArray())},d}}class Xr{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const cs={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},Nr=16,pz=211,mz=212;class gz extends Xr{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return t!==void 0&&this.backend.destroyAttribute(e),t}update(e,t){const i=this.get(e);if(i.version===void 0)t===cs.VERTEX?this.backend.createAttribute(e):t===cs.INDEX?this.backend.createIndexAttribute(e):t===cs.STORAGE?this.backend.createStorageAttribute(e):t===cs.INDIRECT&&this.backend.createIndirectStorageAttribute(e),i.version=this._getBufferAttribute(e).version;else{const n=this._getBufferAttribute(e);(i.version<n.version||n.usage===qa)&&(this.backend.updateAttribute(e),i.version=n.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function yz(o){for(let e=o.length-1;e>=0;--e)if(o[e]>=65535)return!0;return!1}function gA(o){return o.index!==null?o.index.version:o.attributes.position.version}function pb(o){const e=[],t=o.index,i=o.attributes.position;if(t!==null){const s=t.array;for(let r=0,a=s.length;r<a;r+=3){const l=s[r+0],c=s[r+1],h=s[r+2];e.push(l,c,c,h,h,l)}}else{const s=i.array;for(let r=0,a=s.length/3-1;r<a;r+=3){const l=r+0,c=r+1,h=r+2;e.push(l,c,c,h,h,l)}}const n=new(yz(e)?kT:zT)(e,1);return n.version=gA(o),n}class xz extends Xr{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry,i=this.get(t);i.initialized=!0,this.info.memory.geometries++;const n=()=>{this.info.memory.geometries--;const s=t.index,r=e.getAttributes();s!==null&&this.attributes.delete(s);for(const l of r)this.attributes.delete(l);const a=this.wireframes.get(t);a!==void 0&&this.attributes.delete(a),t.removeEventListener("dispose",n)};t.addEventListener("dispose",n)}updateAttributes(e){const t=e.getAttributes();for(const s of t)s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute?this.updateAttribute(s,cs.STORAGE):this.updateAttribute(s,cs.VERTEX);const i=this.getIndex(e);i!==null&&this.updateAttribute(i,cs.INDEX);const n=e.geometry.indirect;n!==null&&this.updateAttribute(n,cs.INDIRECT)}updateAttribute(e,t){const i=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,i)):this.attributeCall.get(e.data)!==i&&(this.attributes.update(e,t),this.attributeCall.set(e.data,i),this.attributeCall.set(e,i)):this.attributeCall.get(e)!==i&&(this.attributes.update(e,t),this.attributeCall.set(e,i))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:i}=e;let n=t.index;if(i.wireframe===!0){const s=this.wireframes;let r=s.get(t);r===void 0?(r=pb(t),s.set(t,r)):r.version!==gA(t)&&(this.attributes.delete(r),r=pb(t),s.set(t,r)),n=r}return n}}class _z{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.compute={calls:0,frameCalls:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.memory={geometries:0,textures:0}}update(e,t,i){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=i*(t/3):e.isPoints?this.render.points+=i*t:e.isLineSegments?this.render.lines+=i*(t/2):e.isLine?this.render.lines+=i*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}updateTimestamp(e,t){this[e].timestampCalls===0&&(this[e].timestamp=0),this[e].timestamp+=t,this[e].timestampCalls++,this[e].timestampCalls>=this[e].previousFrameCalls&&(this[e].timestampCalls=0)}reset(){const e=this.render.frameCalls;this.render.previousFrameCalls=e;const t=this.compute.frameCalls;this.compute.previousFrameCalls=t,this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class yA{constructor(e){this.cacheKey=e,this.usedTimes=0}}class vz extends yA{constructor(e,t,i){super(e),this.vertexProgram=t,this.fragmentProgram=i}}class bz extends yA{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let Sz=0;class Hm{constructor(e,t,i=null,n=null){this.id=Sz++,this.code=e,this.stage=t,this.transforms=i,this.attributes=n,this.usedTimes=0}}class Mz extends Xr{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:i}=this,n=this.get(e);if(this._needsComputeUpdate(e)){const s=n.pipeline;s&&(s.usedTimes--,s.computeProgram.usedTimes--);const r=this.nodes.getForCompute(e);let a=this.programs.compute.get(r.computeShader);a===void 0&&(s&&s.computeProgram.usedTimes===0&&this._releaseProgram(s.computeProgram),a=new Hm(r.computeShader,"compute",r.transforms,r.nodeAttributes),this.programs.compute.set(r.computeShader,a),i.createProgram(a));const l=this._getComputeCacheKey(e,a);let c=this.caches.get(l);c===void 0&&(s&&s.usedTimes===0&&this._releasePipeline(s),c=this._getComputePipeline(e,a,l,t)),c.usedTimes++,a.usedTimes++,n.version=e.version,n.pipeline=c}return n.pipeline}getForRender(e,t=null){const{backend:i}=this,n=this.get(e);if(this._needsRenderUpdate(e)){const s=n.pipeline;s&&(s.usedTimes--,s.vertexProgram.usedTimes--,s.fragmentProgram.usedTimes--);const r=e.getNodeBuilderState();let a=this.programs.vertex.get(r.vertexShader);a===void 0&&(s&&s.vertexProgram.usedTimes===0&&this._releaseProgram(s.vertexProgram),a=new Hm(r.vertexShader,"vertex"),this.programs.vertex.set(r.vertexShader,a),i.createProgram(a));let l=this.programs.fragment.get(r.fragmentShader);l===void 0&&(s&&s.fragmentProgram.usedTimes===0&&this._releaseProgram(s.fragmentProgram),l=new Hm(r.fragmentShader,"fragment"),this.programs.fragment.set(r.fragmentShader,l),i.createProgram(l));const c=this._getRenderCacheKey(e,a,l);let h=this.caches.get(c);h===void 0?(s&&s.usedTimes===0&&this._releasePipeline(s),h=this._getRenderPipeline(e,a,l,c,t)):e.pipeline=h,h.usedTimes++,a.usedTimes++,l.usedTimes++,n.pipeline=h}return n.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,i,n){i=i||this._getComputeCacheKey(e,t);let s=this.caches.get(i);return s===void 0&&(s=new bz(i,t),this.caches.set(i,s),this.backend.createComputePipeline(s,n)),s}_getRenderPipeline(e,t,i,n,s){n=n||this._getRenderCacheKey(e,t,i);let r=this.caches.get(n);return r===void 0&&(r=new vz(n,t,i),this.caches.set(n,r),e.pipeline=r,this.backend.createRenderPipeline(e,s)),r}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,i){return t.id+","+i.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,i=e.stage;this.programs[i].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class Tz extends Xr{constructor(e,t,i,n,s,r){super(),this.backend=e,this.textures=i,this.pipelines=s,this.attributes=n,this.nodes=t,this.info=r,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const i of t){const n=this.get(i);n.bindGroup===void 0&&(this._init(i),this.backend.createBindings(i,t),n.bindGroup=i)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const i of t){const n=this.get(i);n.bindGroup===void 0&&(this._init(i),this.backend.createBindings(i,t),n.bindGroup=i)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const i=t.attribute,n=i.isIndirectStorageBufferAttribute?cs.INDIRECT:cs.STORAGE;this.attributes.update(i,n)}}_update(e,t){const{backend:i}=this;let n=!1;for(const s of e.bindings)if(!(s.isNodeUniformsGroup&&!this.nodes.updateGroup(s))){if(s.isUniformBuffer)s.update()&&i.updateBinding(s);else if(s.isSampler)s.update();else if(s.isSampledTexture){s.needsBindingsUpdate(this.textures.get(s.texture).generation)&&(n=!0);const r=s.update(),a=s.texture;r&&this.textures.updateTexture(a);const l=i.get(a);if(i.isWebGPUBackend===!0&&l.texture===void 0&&l.externalTexture===void 0&&(console.error("Bindings._update: binding should be available:",s,r,a,s.textureNode.value,n),this.textures.updateTexture(a),n=!0),a.isStorageTexture===!0){const c=this.get(a);s.store===!0?c.needsMipmap=!0:this.textures.needsMipmaps(a)&&c.needsMipmap===!0&&(this.backend.generateMipmaps(a),c.needsMipmap=!1)}}}n===!0&&this.backend.updateBindings(e,t)}}function wz(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.material.id!==e.material.id?o.material.id-e.material.id:o.z!==e.z?o.z-e.z:o.id-e.id}function mb(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?e.z-o.z:o.id-e.id}function gb(o){return(o.transmission>0||o.transmissionNode)&&o.side===Qa&&o.forceSinglePass===!1}class Az{constructor(e,t,i){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,i),this.lightsArray=[],this.scene=t,this.camera=i,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,i,n,s,r){let a=this.renderItems[this.renderItemsIndex];return a===void 0?(a={id:e.id,object:e,geometry:t,material:i,groupOrder:n,renderOrder:e.renderOrder,z:s,group:r},this.renderItems[this.renderItemsIndex]=a):(a.id=e.id,a.object=e,a.geometry=t,a.material=i,a.groupOrder=n,a.renderOrder=e.renderOrder,a.z=s,a.group=r),this.renderItemsIndex++,a}push(e,t,i,n,s,r){const a=this.getNextRenderItem(e,t,i,n,s,r);e.occlusionTest===!0&&this.occlusionQueryCount++,i.transparent===!0||i.transmission>0?(gb(i)&&this.transparentDoublePass.push(a),this.transparent.push(a)):this.opaque.push(a)}unshift(e,t,i,n,s,r){const a=this.getNextRenderItem(e,t,i,n,s,r);i.transparent===!0||i.transmission>0?(gb(i)&&this.transparentDoublePass.unshift(a),this.transparent.unshift(a)):this.opaque.unshift(a)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||wz),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||mb),this.transparent.length>1&&this.transparent.sort(t||mb)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const i=this.renderItems[e];if(i.id===null)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.groupOrder=null,i.renderOrder=null,i.z=null,i.group=null}}}class Ez{constructor(e){this.lighting=e,this.lists=new gs}get(e,t){const i=this.lists,n=[e,t];let s=i.get(n);return s===void 0&&(s=new Az(this.lighting,e,t),i.set(n,s)),s}dispose(){this.lists=new gs}}let Cz=0;class Rz{constructor(){this.id=Cz++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new Ct,this.scissor=!1,this.scissorValue=new Ct,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0,this.isRenderContext=!0}getCacheKey(){return xA(this)}}function xA(o){const{textures:e,activeCubeFace:t}=o,i=[t];for(const n of e)i.push(n.id);return rw(i)}class Nz{constructor(){this.chainMaps={}}get(e,t,i=null){const n=[e,t];let s;if(i===null)s="default";else{const l=i.texture.format;s=`${i.textures.length}:${l}:${i.samples}:${i.depthBuffer}:${i.stencilBuffer}`}const r=this.getChainMap(s);let a=r.get(n);return a===void 0&&(a=new Rz,r.set(n,a)),i!==null&&(a.sampleCount=i.samples===0?1:i.samples),a}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new gs)}dispose(){this.chainMaps={}}}const Pz=new G;class Iz extends Xr{constructor(e,t,i){super(),this.renderer=e,this.backend=t,this.info=i}updateRenderTarget(e,t=0){const i=this.get(e),n=e.samples===0?1:e.samples,s=i.depthTextureMips||(i.depthTextureMips={}),r=e.textures,a=this.getSize(r[0]),l=a.width>>t,c=a.height>>t;let h=e.depthTexture||s[t];const u=e.depthBuffer===!0||e.stencilBuffer===!0;let d=!1;h===void 0&&u&&(h=new Ml,h.format=e.stencilBuffer?dl:Do,h.type=e.stencilBuffer?fh:Ti,h.image.width=l,h.image.height=c,s[t]=h),(i.width!==a.width||a.height!==i.height)&&(d=!0,h&&(h.needsUpdate=!0,h.image.width=l,h.image.height=c)),i.width=a.width,i.height=a.height,i.textures=r,i.depthTexture=h||null,i.depth=e.depthBuffer,i.stencil=e.stencilBuffer,i.renderTarget=e,i.sampleCount!==n&&(d=!0,h&&(h.needsUpdate=!0),i.sampleCount=n);const f={sampleCount:n};for(let p=0;p<r.length;p++){const m=r[p];d&&(m.needsUpdate=!0),this.updateTexture(m,f)}if(h&&this.updateTexture(h,f),i.initialized!==!0){i.initialized=!0;const p=()=>{e.removeEventListener("dispose",p);for(let m=0;m<r.length;m++)this._destroyTexture(r[m]);h&&this._destroyTexture(h),this.delete(e)};e.addEventListener("dispose",p)}}updateTexture(e,t={}){const i=this.get(e);if(i.initialized===!0&&i.version===e.version)return;const n=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,s=this.backend;if(n&&i.initialized===!0&&(s.destroySampler(e),s.destroyTexture(e)),e.isFramebufferTexture){const c=this.renderer.getRenderTarget();c?e.type=c.texture.type:e.type=Ir}const{width:r,height:a,depth:l}=this.getSize(e);if(t.width=r,t.height=a,t.depth=l,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,r,a):1,n||e.isStorageTexture===!0)s.createSampler(e),s.createTexture(e,t),i.generation=e.version;else if(i.initialized!==!0&&s.createSampler(e),e.version>0){const h=e.image;if(h===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(h.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const u=[];for(const d of e.images)u.push(d);t.images=u}else t.image=h;(i.isDefaultTexture===void 0||i.isDefaultTexture===!0)&&(s.createTexture(e,t),i.isDefaultTexture=!1,i.generation=e.version),e.source.dataReady===!0&&s.updateTexture(e,t),t.needsMipmaps&&e.mipmaps.length===0&&s.generateMipmaps(e)}}else s.createDefaultTexture(e),i.isDefaultTexture=!0,i.generation=e.version;if(i.initialized!==!0){i.initialized=!0,i.generation=e.version,this.info.memory.textures++;const c=()=>{e.removeEventListener("dispose",c),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",c)}i.version=e.version}getSize(e,t=Pz){let i=e.images?e.images[0]:e.image;return i?(i.image!==void 0&&(i=i.image),t.width=i.width,t.height=i.height,t.depth=e.isCubeTexture?6:i.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,i){let n;return e.isCompressedTexture?n=e.mipmaps.length:n=Math.floor(Math.log2(Math.max(t,i)))+1,n}needsMipmaps(e){return this.isEnvironmentTexture(e)||e.isCompressedTexture===!0||e.generateMipmaps}isEnvironmentTexture(e){const t=e.mapping;return t===uh||t===dh||t===zo||t===ul}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class Hx extends Rt{constructor(e,t,i,n=1){super(e,t,i),this.a=n}set(e,t,i,n=1){return this.a=n,super.set(e,t,i)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class Dz extends Pt{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class Lz extends st{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}If(e,t){const i=new ld(t);return this._currentCond=on(e,i),this.add(this._currentCond)}ElseIf(e,t){const i=new ld(t),n=on(e,i);return this._currentCond.elseNode=n,this._currentCond=n,this}Else(e){return this._currentCond.elseNode=new ld(e),this}build(e,...t){const i=dw();ff(this);for(const n of this.nodes)n.build(e,"void");return ff(i),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}}const Wm=ne(Lz);new Tr;new G;new G;new G;new Gt;new G(0,0,-1);new Ct;new G;new G;new Ct;new _t;const Fz=new Sl;Zc.flipX();Fz.depthTexture=new Ml(1,1);const $m=new Mx(-1,1,1,-1,0,1);class Uz extends Ko{constructor(e=!1){super();const t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Zs([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Zs(t,2))}}const Bz=new Uz;class _A extends Vo{constructor(e=null){super(Bz,e),this.camera=$m,this.isQuadMesh=!0}renderAsync(e){return e.renderAsync(this,$m)}render(e){e.render(this,$m)}}const Zl=new Kn,Xm=new Gt;class ln extends st{static get type(){return"SceneNode"}constructor(e=ln.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,i=this.scene!==null?this.scene:e.scene;let n;return t===ln.BACKGROUND_BLURRINESS?n=Wt("backgroundBlurriness","float",i):t===ln.BACKGROUND_INTENSITY?n=Wt("backgroundIntensity","float",i):t===ln.BACKGROUND_ROTATION?n=et("mat4").label("backgroundRotation").setGroup(mt).onRenderUpdate(()=>{const s=i.background;return s!==null&&s.isTexture&&s.mapping!==lx?(Zl.copy(i.backgroundRotation),Zl.x*=-1,Zl.y*=-1,Zl.z*=-1,Xm.makeRotationFromEuler(Zl)):Xm.identity(),Xm}):console.error("THREE.SceneNode: Unknown scope:",t),n}}ln.BACKGROUND_BLURRINESS="backgroundBlurriness";ln.BACKGROUND_INTENSITY="backgroundIntensity";ln.BACKGROUND_ROTATION="backgroundRotation";const Oz=ge(ln,ln.BACKGROUND_BLURRINESS),yb=ge(ln,ln.BACKGROUND_INTENSITY),zz=ge(ln,ln.BACKGROUND_ROTATION),Ka={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},bi={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},Si={Store:"store",Discard:"discard"},ti={Load:"load",Clear:"clear"},qm={CCW:"ccw",CW:"cw"},Ym={None:"none",Front:"front",Back:"back"},ml={Uint16:"uint16",Uint32:"uint32"},D={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Zm={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},bo={Linear:"linear",Nearest:"nearest"},je={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},uo={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},xb={None:0,Red:1,Green:2,Blue:4,Alpha:8,All:15},br={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},py={Uniform:"uniform",Storage:"storage",ReadOnlyStorage:"read-only-storage"},_b={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},Kl={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},vb={OneD:"1d",TwoD:"2d",ThreeD:"3d"},Rn={OneD:"1d",TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",CubeArray:"cube-array",ThreeD:"3d"},kz={All:"all",StencilOnly:"stencil-only",DepthOnly:"depth-only"},ku={Vertex:"vertex",Instance:"instance"},my={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"},Gz=new _t;class Vz extends vh{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class bb extends Vz{static get type(){return"PassMultipleTextureNode"}constructor(e,t,i=!1){super(e,null),this.textureName=t,this.previousTexture=i}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class dp extends oi{static get type(){return"PassNode"}constructor(e,t,i,n={}){super("vec4"),this.scope=e,this.scene=t,this.camera=i,this.options=n,this._pixelRatio=1,this._width=1,this._height=1;const s=new Ml;s.isRenderTargetTexture=!0,s.name="depth";const r=new Sl(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Xs,...n});r.texture.name="output",r.depthTexture=s,this.renderTarget=r,this.updateBeforeType=ut.FRAME,this._textures={output:r.texture,depth:s},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=et(0),this._cameraFar=et(0),this._mrt=null,this.isPassNode=!0}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.isRenderTargetTexture=!0,t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),t.isRenderTargetTexture=!0,this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const i=this._textures[e],n=this.renderTarget.textures.indexOf(i);this.renderTarget.textures[n]=t,this._textures[e]=t,this._previousTextures[e]=i,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=fe(new bb(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=fe(new bb(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const i=this._cameraNear,n=this._cameraFar;this._viewZNodes[e]=t=Jw(this.getTextureNode(e),i,n)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const i=this._cameraNear,n=this._cameraFar,s=this.getViewZNode(e);this._linearDepthNodes[e]=t=_c(s,i,n)}return t}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,e.backend.isWebGLBackend===!0&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===dp.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:i,camera:n}=this;this._pixelRatio=t.getPixelRatio();const s=t.getSize(Gz);this.setSize(s.width,s.height);const r=t.getRenderTarget(),a=t.getMRT();this._cameraNear.value=n.near,this._cameraFar.value=n.far;for(const l in this._previousTextures)this.toggleTexture(l);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(i,n),t.setRenderTarget(r),t.setMRT(a)}setSize(e,t){this._width=e,this._height=t;const i=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget.setSize(i,n)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}dp.COLOR="color";dp.DEPTH="depth";const Hz=be(([o,e])=>o.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Wz=be(([o,e])=>(o=o.mul(e),o.div(o.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),$z=be(([o,e])=>{o=o.mul(e),o=o.sub(.004).max(0);const t=o.mul(o.mul(6.2).add(.5)),i=o.mul(o.mul(6.2).add(1.7)).add(.06);return t.div(i).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Xz=be(([o])=>{const e=o.mul(o.add(.0245786)).sub(90537e-9),t=o.mul(o.add(.432951).mul(.983729)).add(.238081);return e.div(t)}),qz=be(([o,e])=>{const t=Ki(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),i=Ki(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return o=o.mul(e).div(.6),o=t.mul(o),o=Xz(o),o=i.mul(o),o.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Yz=Ki(Q(1.6605,-.1246,-.0182),Q(-.5876,1.1329,-.1006),Q(-.0728,-.0083,1.1187)),Zz=Ki(Q(.6274,.0691,.0164),Q(.3293,.9195,.088),Q(.0433,.0113,.8956)),Kz=be(([o])=>{const e=Q(o).toVar(),t=Q(e.mul(e)).toVar(),i=Q(t.mul(t)).toVar();return ee(15.5).mul(i.mul(t)).sub(dt(40.14,i.mul(e))).add(dt(31.96,i).sub(dt(6.868,t.mul(e))).add(dt(.4298,t).add(dt(.1191,e).sub(.00232))))}),jz=be(([o,e])=>{const t=Q(o).toVar(),i=Ki(Q(.856627153315983,.137318972929847,.11189821299995),Q(.0951212405381588,.761241990602591,.0767994186031903),Q(.0482516061458583,.101439036467562,.811302368396859)),n=Ki(Q(1.1271005818144368,-.1413297634984383,-.14132976349843826),Q(-.11060664309660323,1.157823702216272,-.11060664309660294),Q(-.016493938717834573,-.016493938717834257,1.2519364065950405)),s=ee(-12.47393),r=ee(4.026069);return t.mulAssign(e),t.assign(Zz.mul(t)),t.assign(i.mul(t)),t.assign(Ln(t,1e-10)),t.assign(Ks(t)),t.assign(t.sub(s).div(r.sub(s))),t.assign(tr(t,0,1)),t.assign(Kz(t)),t.assign(n.mul(t)),t.assign(sp(Ln(Q(0),t),Q(2.2))),t.assign(Yz.mul(t)),t.assign(tr(t,0,1)),t}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Jz=be(([o,e])=>{const t=ee(.76),i=ee(.15);o=o.mul(e);const n=$c(o.r,$c(o.g,o.b)),s=on(n.lessThan(.08),n.sub(dt(6.25,n.mul(n))),.04);o.subAssign(s);const r=Ln(o.r,Ln(o.g,o.b));Ri(r.lessThan(t),()=>o);const a=bn(1,t),l=bn(1,a.mul(a).div(r.add(a.sub(t))));o.mulAssign(l.div(r));const c=bn(1,zr(1,i.mul(r.sub(l)).add(1)));return zt(o,Q(l),c)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class Bi extends st{static get type(){return"CodeNode"}constructor(e="",t=[],i=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=i,this.includes=t}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const n of t)n.build(e);const i=e.getCodeFromNode(this,this.getNodeType(e));return i.code=this.code,i.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}class Qz extends Bi{static get type(){return"FunctionNode"}constructor(e="",t=[],i=""){super(e,t,i)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let i=t.nodeFunction;return i===void 0&&(i=e.parser.parseFunction(this.code),t.nodeFunction=i),i}generate(e,t){super.generate(e);const i=this.getNodeFunction(e),n=i.name,s=i.type,r=e.getCodeFromNode(this,s);n!==""&&(r.name=n);const a=e.getPropertyName(r),l=this.getNodeFunction(e).getCode(a);return r.code=l+`
`,t==="property"?a:e.format(`${a}()`,s,t)}}class vA extends st{static get type(){return"FogNode"}constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}getViewZNode(e){let t;const i=e.context.getViewZ;return i!==void 0&&(t=i(this)),(t||Ei.z).negate()}setup(){return this.factorNode}}class ek extends vA{static get type(){return"FogRangeNode"}constructor(e,t,i){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=i}setup(e){const t=this.getViewZNode(e);return Ho(this.nearNode,this.farNode,t)}}const tk=ne(ek);class ik extends vA{static get type(){return"FogExp2Node"}constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(e){const t=this.getViewZNode(e),i=this.densityNode;return i.mul(i,t,t).negate().exp().oneMinus()}}const nk=ne(ik);class sk extends st{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:i}=e;i.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}ne(sk);class _s extends oi{static get type(){return"AtomicFunctionNode"}constructor(e,t,i,n=null){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=i,this.storeNode=n}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=this.method,i=this.getNodeType(e),n=this.getInputType(e),s=this.pointerNode,r=this.valueNode,a=[];a.push(`&${s.build(e,n)}`),a.push(r.build(e,n));const l=`${e.getMethod(t,i)}( ${a.join(", ")} )`;if(this.storeNode!==null){const c=this.storeNode.build(e,n);e.addLineFlowCode(`${c} = ${l}`,this)}else e.addLineFlowCode(l,this)}}_s.ATOMIC_LOAD="atomicLoad";_s.ATOMIC_STORE="atomicStore";_s.ATOMIC_ADD="atomicAdd";_s.ATOMIC_SUB="atomicSub";_s.ATOMIC_MAX="atomicMax";_s.ATOMIC_MIN="atomicMin";_s.ATOMIC_AND="atomicAnd";_s.ATOMIC_OR="atomicOr";_s.ATOMIC_XOR="atomicXor";ne(_s);let Gu;function Wx(o){Gu=Gu||new WeakMap;let e=Gu.get(o);return e===void 0&&Gu.set(o,e={}),e}function bA(o){const e=Wx(o);return e.position||(e.position=et(new G).setGroup(mt).onRenderUpdate((t,i)=>i.value.setFromMatrixPosition(o.matrixWorld)))}function rk(o){const e=Wx(o);return e.targetPosition||(e.targetPosition=et(new G).setGroup(mt).onRenderUpdate((t,i)=>i.value.setFromMatrixPosition(o.target.matrixWorld)))}function $x(o){const e=Wx(o);return e.viewPosition||(e.viewPosition=et(new G).setGroup(mt).onRenderUpdate(({camera:t},i)=>{i.value=i.value||new G,i.value.setFromMatrixPosition(o.matrixWorld),i.value.applyMatrix4(t.matrixWorldInverse)}))}const SA=o=>rr.transformDirection(bA(o).sub(rk(o))),ok=o=>o.sort((e,t)=>e.id-t.id),ak=(o,e)=>{for(const t of e)if(t.isAnalyticLightNode&&t.light.id===o)return t;return null},Km=new WeakMap;class MA extends st{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=Q().toVar("totalDiffuse"),this.totalSpecularNode=Q().toVar("totalSpecular"),this.outgoingLightNode=Q().toVar("outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const t=[];for(const i of this._lightNodes)t.push(i.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const i of t.nodes)i.build(e)}setupLightsNode(e){const t=[],i=this._lightNodes,n=ok(this._lights),s=e.renderer.library;for(const r of n)if(r.isNode)t.push(fe(r));else{let a=null;if(i!==null&&(a=ak(r.id,i)),a===null){const l=s.getLightNodeClass(r.constructor);if(l===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${r.constructor.name}`);continue}let c=null;Km.has(r)?c=Km.get(r):(c=fe(new l(r)),Km.set(r,c)),t.push(c)}}this._lightNodes=t}setupLights(e,t){for(const i of t)i.build(e)}setup(e){this._lightNodes===null&&this.setupLightsNode(e);const t=e.context,i=t.lightingModel;let n=this.outgoingLightNode;if(i){const{_lightNodes:s,totalDiffuseNode:r,totalSpecularNode:a}=this;t.outgoingLight=n;const l=e.addStack(),c=e.getDataFromNode(this);c.nodes=l.nodes,i.start(t,l,e),this.setupLights(e,s),i.indirect(t,l,e);const{backdrop:h,backdropAlpha:u}=t,{directDiffuse:d,directSpecular:f,indirectDiffuse:p,indirectSpecular:m}=t.reflectedLight;let g=d.add(p);h!==null&&(u!==null?g=Q(u.mix(g,h)):g=Q(h),t.material.transparent=!0),r.assign(g),a.assign(f.add(m)),n.assign(r.add(a)),i.finish(t,l,e),n=n.bypass(e.removeStack())}return n}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const lk=be(({depthTexture:o,shadowCoord:e})=>jt(o,e.xy).compare(e.z)),ck=be(({depthTexture:o,shadowCoord:e,shadow:t})=>{const i=(m,g)=>jt(o,m).compare(g),n=Wt("mapSize","vec2",t).setGroup(mt),s=Wt("radius","float",t).setGroup(mt),r=Se(1).div(n),a=r.x.negate().mul(s),l=r.y.negate().mul(s),c=r.x.mul(s),h=r.y.mul(s),u=a.div(2),d=l.div(2),f=c.div(2),p=h.div(2);return ji(i(e.xy.add(Se(a,l)),e.z),i(e.xy.add(Se(0,l)),e.z),i(e.xy.add(Se(c,l)),e.z),i(e.xy.add(Se(u,d)),e.z),i(e.xy.add(Se(0,d)),e.z),i(e.xy.add(Se(f,d)),e.z),i(e.xy.add(Se(a,0)),e.z),i(e.xy.add(Se(u,0)),e.z),i(e.xy,e.z),i(e.xy.add(Se(f,0)),e.z),i(e.xy.add(Se(c,0)),e.z),i(e.xy.add(Se(u,p)),e.z),i(e.xy.add(Se(0,p)),e.z),i(e.xy.add(Se(f,p)),e.z),i(e.xy.add(Se(a,h)),e.z),i(e.xy.add(Se(0,h)),e.z),i(e.xy.add(Se(c,h)),e.z)).mul(1/17)}),hk=be(({depthTexture:o,shadowCoord:e,shadow:t})=>{const i=(h,u)=>jt(o,h).compare(u),n=Wt("mapSize","vec2",t).setGroup(mt),s=Se(1).div(n),r=s.x,a=s.y,l=e.xy,c=$r(l.mul(n).add(.5));return l.subAssign(c.mul(s)),ji(i(l,e.z),i(l.add(Se(r,0)),e.z),i(l.add(Se(0,a)),e.z),i(l.add(s),e.z),zt(i(l.add(Se(r.negate(),0)),e.z),i(l.add(Se(r.mul(2),0)),e.z),c.x),zt(i(l.add(Se(r.negate(),a)),e.z),i(l.add(Se(r.mul(2),a)),e.z),c.x),zt(i(l.add(Se(0,a.negate())),e.z),i(l.add(Se(0,a.mul(2))),e.z),c.y),zt(i(l.add(Se(r,a.negate())),e.z),i(l.add(Se(r,a.mul(2))),e.z),c.y),zt(zt(i(l.add(Se(r.negate(),a.negate())),e.z),i(l.add(Se(r.mul(2),a.negate())),e.z),c.x),zt(i(l.add(Se(r.negate(),a.mul(2))),e.z),i(l.add(Se(r.mul(2),a.mul(2))),e.z),c.x),c.y)).mul(1/9)}),uk=be(({depthTexture:o,shadowCoord:e})=>{const t=ee(1).toVar(),i=jt(o).uv(e.xy).rg,n=Nw(e.z,i.x);return Ri(n.notEqual(ee(1)),()=>{const s=e.z.sub(i.x),r=Ln(0,i.y.mul(i.y));let a=r.div(r.add(s.mul(s)));a=tr(bn(a,.3).div(.95-.3)),t.assign(tr(Ln(n,a)))}),t}),dk=be(({samples:o,radius:e,size:t,shadowPass:i})=>{const n=ee(0).toVar(),s=ee(0).toVar(),r=o.lessThanEqual(ee(1)).select(ee(0),ee(2).div(o.sub(1))),a=o.lessThanEqual(ee(1)).select(ee(0),ee(-1));ls({start:Zt(0),end:Zt(o),type:"int",condition:"<"},({i:c})=>{const h=a.add(ee(c).mul(r)),u=i.uv(ji(cp.xy,Se(0,h).mul(e)).div(t)).x;n.addAssign(u),s.addAssign(u.mul(u))}),n.divAssign(o),s.divAssign(o);const l=Px(s.sub(n.mul(n)));return Se(n,l)}),fk=be(({samples:o,radius:e,size:t,shadowPass:i})=>{const n=ee(0).toVar(),s=ee(0).toVar(),r=o.lessThanEqual(ee(1)).select(ee(0),ee(2).div(o.sub(1))),a=o.lessThanEqual(ee(1)).select(ee(0),ee(-1));ls({start:Zt(0),end:Zt(o),type:"int",condition:"<"},({i:c})=>{const h=a.add(ee(c).mul(r)),u=i.uv(ji(cp.xy,Se(h,0).mul(e)).div(t));n.addAssign(u.x),s.addAssign(ji(u.y.mul(u.y),u.x.mul(u.x)))}),n.divAssign(o),s.divAssign(o);const l=Px(s.sub(n.mul(n)));return Se(n,l)}),pk=[lk,ck,hk,uk];let Da=null;const Vu=new _A;class mk extends st{static get type(){return"ShadowNode"}constructor(e,t=null){super(),this.light=e,this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.updateBeforeType=ut.RENDER,this._node=null,this.isShadowNode=!0}setupShadow(e){const{object:t,renderer:i}=e;Da===null&&(Da=new ri,Da.fragmentNode=Qe(0,0,0,1),Da.isShadowNodeMaterial=!0,Da.name="ShadowMaterial");const n=this.shadow,s=i.shadowMap.type,r=new Ml(n.mapSize.width,n.mapSize.height);r.compareFunction=px;const a=e.createRenderTarget(n.mapSize.width,n.mapSize.height);if(a.depthTexture=r,n.camera.updateProjectionMatrix(),s===yu){r.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:zc,type:Xs}),this.vsmShadowMapHorizontal=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:zc,type:Xs});const x=jt(r),_=jt(this.vsmShadowMapVertical.texture),v=Wt("blurSamples","float",n).setGroup(mt),A=Wt("radius","float",n).setGroup(mt),T=Wt("mapSize","vec2",n).setGroup(mt);let M=this.vsmMaterialVertical||(this.vsmMaterialVertical=new ri);M.fragmentNode=dk({samples:v,radius:A,size:T,shadowPass:x}).context(e.getSharedContext()),M.name="VSMVertical",M=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new ri),M.fragmentNode=fk({samples:v,radius:A,size:T,shadowPass:_}).context(e.getSharedContext()),M.name="VSMHorizontal"}const l=Wt("intensity","float",n).setGroup(mt),c=Wt("bias","float",n).setGroup(mt),h=Wt("normalBias","float",n).setGroup(mt),u=t.material.shadowPositionNode||oy;let d=et(n.matrix).setGroup(mt).mul(u.add(Bx.mul(h))),f;if(n.camera.isOrthographicCamera||i.logarithmicDepthBuffer!==!0)d=d.xyz.div(d.w),f=d.z,i.coordinateSystem===Go&&(f=f.mul(2).sub(1));else{const x=d.w;d=d.xy.div(x);const _=et("float").onRenderUpdate(()=>n.camera.near),v=et("float").onRenderUpdate(()=>n.camera.far);f=Qw(x,_,v)}d=Q(d.x,d.y.oneMinus(),f.add(c));const p=d.x.greaterThanEqual(0).and(d.x.lessThanEqual(1)).and(d.y.greaterThanEqual(0)).and(d.y.lessThanEqual(1)).and(d.z.lessThanEqual(1)),m=n.filterNode||pk[i.shadowMap.type]||null;if(m===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const g=jt(a.texture,d),y=p.select(m({depthTexture:s===yu?this.vsmShadowMapHorizontal.texture:r,shadowCoord:d,shadow:n}),ee(1));return this.shadowMap=a,this.shadow.map=a,zt(1,y.rgb.mix(g,1),l.mul(g.a))}setup(e){if(e.renderer.shadowMap.enabled!==!1)return this._node!==null?this._node:this._node=this.setupShadow(e)}updateShadow(e){const{shadowMap:t,light:i,shadow:n}=this,{renderer:s,scene:r,camera:a}=e,l=s.shadowMap.type,c=t.depthTexture.version;this._depthVersionCached=c;const h=r.overrideMaterial;r.overrideMaterial=Da,t.setSize(n.mapSize.width,n.mapSize.height),n.updateMatrices(i),n.camera.layers.mask=a.layers.mask;const u=s.getRenderTarget(),d=s.getRenderObjectFunction();s.setRenderObjectFunction((f,...p)=>{(f.castShadow===!0||f.receiveShadow&&l===yu)&&s.renderObject(f,...p)}),s.setRenderTarget(t),s.render(r,n.camera),s.setRenderObjectFunction(d),i.isPointLight!==!0&&l===yu&&this.vsmPass(s),s.setRenderTarget(u),r.overrideMaterial=h}vsmPass(e){const{shadow:t}=this;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height),e.setRenderTarget(this.vsmShadowMapVertical),Vu.material=this.vsmMaterialVertical,Vu.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),Vu.material=this.vsmMaterialHorizontal,Vu.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.updateBeforeType=ut.NONE}updateBefore(e){const{shadow:t}=this;(t.needsUpdate||t.autoUpdate)&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const gk=(o,e)=>fe(new mk(o,e));class Jo extends wl{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.updateType=ut.FRAME,this.light=e,this.color=new Rt,this.colorNode=et(this.color).setGroup(mt),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0}getCacheKey(){return hf(super.getCacheKey(),this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadow(e){const{renderer:t}=e;if(t.shadowMap.enabled===!1)return;let i=this.shadowColorNode;if(i===null){const n=this.light.shadow.shadowNode;let s;n!==void 0?s=fe(n):s=gk(this.light),this.shadowNode=s,this.shadowColorNode=i=this.colorNode.mul(s),this.baseColorNode=this.colorNode}this.colorNode=i}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&this.shadowNode.dispose()}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const TA=be(o=>{const{lightDistance:e,cutoffDistance:t,decayExponent:i}=o,n=e.pow(i).max(.01).reciprocal();return t.greaterThan(0).select(n.mul(e.div(t).pow4().oneMinus().clamp().pow2()),n)}),yk=be(({color:o,lightViewPosition:e,cutoffDistance:t,decayExponent:i},n)=>{const s=n.context.lightingModel,r=e.sub(Ei),a=r.normalize(),l=r.length(),c=TA({lightDistance:l,cutoffDistance:t,decayExponent:i}),h=o.mul(c),u=n.context.reflectedLight;s.direct({lightDirection:a,lightColor:h,reflectedLight:u},n.stack,n)});class xk extends Jo{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=et(0).setGroup(mt),this.decayExponentNode=et(0).setGroup(mt)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setup(){yk({color:this.colorNode,lightViewPosition:$x(this.light),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode}).append()}}const _k=be(([o,e])=>{const t=o.x,i=o.y,n=o.z;let s=e.element(0).mul(.886227);return s=s.add(e.element(1).mul(2*.511664).mul(i)),s=s.add(e.element(2).mul(2*.511664).mul(n)),s=s.add(e.element(3).mul(2*.511664).mul(t)),s=s.add(e.element(4).mul(2*.429043).mul(t).mul(i)),s=s.add(e.element(5).mul(2*.429043).mul(i).mul(n)),s=s.add(e.element(6).mul(n.mul(n).mul(.743125).sub(.247708))),s=s.add(e.element(7).mul(2*.429043).mul(t).mul(n)),s=s.add(e.element(8).mul(.429043).mul(dt(t,t).sub(dt(i,i)))),s}),Ds=new Hx;class vk extends Xr{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,i){const n=this.renderer,s=this.nodes.getBackgroundNode(e)||e.background;let r=!1;if(s===null)n._clearColor.getRGB(Ds,Dr),Ds.a=n._clearColor.a;else if(s.isColor===!0)s.getRGB(Ds,Dr),Ds.a=1,r=!0;else if(s.isNode===!0){const a=this.get(e),l=s;Ds.copy(n._clearColor);let c=a.backgroundMesh;if(c===void 0){const u=Lx(Qe(l).mul(yb),{getUV:()=>zz.mul(Vw),getTextureLevel:()=>Oz});let d=ay();d=d.setZ(d.w);const f=new ri;f.name="Background.material",f.side=Zn,f.depthTest=!1,f.depthWrite=!1,f.fog=!1,f.lights=!1,f.vertexNode=d,f.colorNode=u,a.backgroundMeshNode=u,a.backgroundMesh=c=new Vo(new vx(1,32,32),f),c.frustumCulled=!1,c.name="Background.mesh",c.onBeforeRender=function(p,m,g){this.matrixWorld.copyPosition(g.matrixWorld)}}const h=l.getCacheKey();a.backgroundCacheKey!==h&&(a.backgroundMeshNode.node=Qe(l).mul(yb),a.backgroundMeshNode.needsUpdate=!0,c.material.needsUpdate=!0,a.backgroundCacheKey=h),t.unshift(c,c.geometry,c.material,0,0,null)}else console.error("THREE.Renderer: Unsupported background configuration.",s);if(n.autoClear===!0||r===!0){const a=i.clearColorValue;a.r=Ds.r,a.g=Ds.g,a.b=Ds.b,a.a=Ds.a,(n.backend.isWebGLBackend===!0||n.alpha===!0)&&(a.r*=a.a,a.g*=a.a,a.b*=a.a),i.depthClearValue=n._clearDepth,i.stencilClearValue=n._clearStencil,i.clearColor=n.autoClearColor===!0,i.clearDepth=n.autoClearDepth===!0,i.clearStencil=n.autoClearStencil===!0}else i.clearColor=!1,i.clearDepth=!1,i.clearStencil=!1}}let bk=0;class gy{constructor(e="",t=[],i=0,n=[]){this.name=e,this.bindings=t,this.index=i,this.bindingsReference=n,this.id=bk++}}class Sk{constructor(e,t,i,n,s,r,a,l,c,h=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=i,this.transforms=h,this.nodeAttributes=n,this.bindings=s,this.updateNodes=r,this.updateBeforeNodes=a,this.updateAfterNodes=l,this.monitor=c,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){const n=new gy(t.name,[],t.index,t);e.push(n);for(const s of t.bindings)n.bindings.push(s.clone())}else e.push(t);return e}}class Sb{constructor(e,t,i=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=i}}class Mk{constructor(e,t,i){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=i.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class wA{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class Tk extends wA{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class wk{constructor(e,t,i=""){this.name=e,this.type=t,this.code=i,Object.defineProperty(this,"isNodeCode",{value:!0})}}let Ak=0;class jm{constructor(e=null){this.id=Ak++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class Qo{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class Ek extends Qo{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class Ck extends Qo{constructor(e,t=new _t){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class Rk extends Qo{constructor(e,t=new G){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class Nk extends Qo{constructor(e,t=new Ct){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class Pk extends Qo{constructor(e,t=new Rt){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class Ik extends Qo{constructor(e,t=new dn){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class Dk extends Qo{constructor(e,t=new Gt){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class Lk extends Ek{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Fk extends Ck{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Uk extends Rk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Bk extends Nk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Ok extends Pk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class zk extends Ik{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class kk extends Dk{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}const ja=4,Mb=[.125,.215,.35,.446,.526,.582],So=20,Jm=new Mx(-1,1,1,-1,0,1),Gk=new Us(90,1),Tb=new Rt;let Qm=null,eg=0,tg=0;const yo=(1+Math.sqrt(5))/2,La=1/yo,wb=[new G(-yo,La,0),new G(yo,La,0),new G(-La,0,yo),new G(La,0,yo),new G(0,yo,-La),new G(0,yo,La),new G(-1,1,-1),new G(1,1,-1),new G(-1,1,1),new G(1,1,1)],Vk=[3,1,5,0,4,2],ig=DO(op(),ir("faceIndex")).normalize(),Xx=Q(ig.x,ig.y.negate(),ig.z);class Hk{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}fromScene(e,t=0,i=.1,n=100){Qm=this._renderer.getRenderTarget(),eg=this._renderer.getActiveCubeFace(),tg=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,n,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Eb(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Cb(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Qm,eg,tg),e.scissorTest=!1,Hu(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===zo||e.mapping===ul?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Qm=this._renderer.getRenderTarget(),eg=this._renderer.getActiveCubeFace(),tg=this._renderer.getActiveMipmapLevel();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:wn,minFilter:wn,generateMipmaps:!1,type:Xs,format:vl,colorSpace:Dr},n=Ab(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Ab(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=Wk(s)),this._blurMaterial=$k(s,e,t)}return n}async _compileMaterial(e){const t=new Vo(this._lodPlanes[0],e);await this._renderer.compile(t,Jm)}_sceneToCubeUV(e,t,i,n){const s=Gk;s.near=t,s.far=i;const r=[-1,1,-1,-1,-1,-1],a=[1,1,1,-1,-1,-1],l=this._renderer,c=l.autoClear;l.getClearColor(Tb),l.autoClear=!1;let h=this._backgroundBox;if(h===null){const f=new ep({name:"PMREM.Background",side:Zn,depthWrite:!1,depthTest:!1});h=new Vo(new gh,f)}let u=!1;const d=e.background;d?d.isColor&&(h.material.color.copy(d),e.background=null,u=!0):(h.material.color.copy(Tb),u=!0),l.setRenderTarget(n),l.clear(),u&&l.render(h,s);for(let f=0;f<6;f++){const p=f%3;p===0?(s.up.set(0,r[f],0),s.lookAt(a[f],0,0)):p===1?(s.up.set(0,0,r[f]),s.lookAt(0,a[f],0)):(s.up.set(0,r[f],0),s.lookAt(0,0,a[f]));const m=this._cubeSize;Hu(n,p*m,f>2?m:0,m,m),l.render(e,s)}l.autoClear=c,e.background=d}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===zo||e.mapping===ul;n?this._cubemapMaterial===null&&(this._cubemapMaterial=Eb(e)):this._equirectMaterial===null&&(this._equirectMaterial=Cb(e));const s=n?this._cubemapMaterial:this._equirectMaterial;s.fragmentNode.value=e;const r=this._lodMeshes[0];r.material=s;const a=this._cubeSize;Hu(t,0,0,3*a,2*a),i.setRenderTarget(t),i.render(r,Jm)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let s=1;s<n;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=wb[(n-s-1)%wb.length];this._blur(e,s-1,s,r,a)}t.autoClear=i}_blur(e,t,i,n,s){const r=this._pingPongRenderTarget;this._halfBlur(e,r,t,i,n,"latitudinal",s),this._halfBlur(r,e,i,i,n,"longitudinal",s)}_halfBlur(e,t,i,n,s,r,a){const l=this._renderer,c=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=this._lodMeshes[n];u.material=c;const d=c.uniforms,f=this._sizeLods[i]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*So-1),m=s/p,g=isFinite(s)?1+Math.floor(h*m):So;g>So&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${So}`);const y=[];let x=0;for(let M=0;M<So;++M){const w=M/m,S=Math.exp(-w*w/2);y.push(S),M===0?x+=S:M<g&&(x+=2*S)}for(let M=0;M<y.length;M++)y[M]=y[M]/x;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=y,d.latitudinal.value=r==="latitudinal"?1:0,a&&(d.poleAxis.value=a);const{_lodMax:_}=this;d.dTheta.value=p,d.mipInt.value=_-i;const v=this._sizeLods[n],A=3*v*(n>_-ja?n-_+ja:0),T=4*(this._cubeSize-v);Hu(t,A,T,3*v,2*v),l.setRenderTarget(t),l.render(u,Jm)}}function Wk(o){const e=[],t=[],i=[],n=[];let s=o;const r=o-ja+1+Mb.length;for(let a=0;a<r;a++){const l=Math.pow(2,s);t.push(l);let c=1/l;a>o-ja?c=Mb[a-o+ja-1]:a===0&&(c=0),i.push(c);const h=1/(l-2),u=-h,d=1+h,f=[u,u,d,u,d,d,u,u,d,d,u,d],p=6,m=6,g=3,y=2,x=1,_=new Float32Array(g*m*p),v=new Float32Array(y*m*p),A=new Float32Array(x*m*p);for(let M=0;M<p;M++){const w=M%3*2/3-1,S=M>2?0:-1,b=[w,S,0,w+2/3,S,0,w+2/3,S+1,0,w,S,0,w+2/3,S+1,0,w,S+1,0],N=Vk[M];_.set(b,g*m*N),v.set(f,y*m*N);const z=[N,N,N,N,N,N];A.set(z,x*m*N)}const T=new Ko;T.setAttribute("position",new In(_,g)),T.setAttribute("uv",new In(v,y)),T.setAttribute("faceIndex",new In(A,x)),e.push(T),n.push(new Vo(T,null)),s>ja&&s--}return{lodPlanes:e,sizeLods:t,sigmas:i,lodMeshes:n}}function Ab(o,e,t){const i=new Sl(o,e,t);return i.texture.mapping=Lg,i.texture.name="PMREM.cubeUv",i.texture.isPMREMTexture=!0,i.scissorTest=!0,i}function Hu(o,e,t,i,n){o.viewport.set(e,t,i,n),o.scissor.set(e,t,i,n)}function qx(o){const e=new ri;return e.depthTest=!1,e.depthWrite=!1,e.blending=hl,e.name=`PMREM_${o}`,e}function $k(o,e,t){const i=Yc(new Array(So).fill(0)),n=et(new G(0,1,0)),s=et(0),r=ee(So),a=et(0),l=et(1),c=jt(null),h=et(0),u=ee(1/e),d=ee(1/t),f=ee(o),p={n:r,latitudinal:a,weights:i,poleAxis:n,outputDirection:Xx,dTheta:s,samples:l,envMap:c,mipInt:h,CUBEUV_TEXEL_WIDTH:u,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:f},m=qx("blur");return m.uniforms=p,m.fragmentNode=FO({...p,latitudinal:a.equal(1)}),m}function Eb(o){const e=qx("cubemap");return e.fragmentNode=qc(o,Xx),e}function Cb(o){const e=qx("equirect");return e.fragmentNode=jt(o,iA(Xx),0),e}const Rb=new WeakMap,Xk=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),qk=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),Wu=o=>/e/g.test(o)?String(o).replace(/\+/g,""):(o=Number(o),o+(o%1?"":".0"));class AA{constructor(e,t,i){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=i,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=Wm(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new jm,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let e=Rb.get(this.renderer);return e===void 0&&(e=new gs,Rb.set(this.renderer,e)),e}createRenderTarget(e,t,i){return new Sl(e,t,i)}createCubeRenderTarget(e,t){return new nA(e,t)}createPMREMGenerator(){return new Hk(this.renderer)}includes(e){return this.nodes.includes(e)}_getBindGroup(e,t){const i=this.getBindGroupsCache(),n=[];let s=!0;for(const a of t)n.push(a),s=s&&a.groupNode.shared!==!0;let r;return s?(r=i.get(n),r===void 0&&(r=new gy(e,n,this.bindingsIndexes[e].group,n),i.set(n,r))):r=new gy(e,n,this.bindingsIndexes[e].group,n),r}getBindGroupArray(e,t){const i=this.bindings[t];let n=i[e];return n===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),i[e]=n=[]),n}getBindings(){let e=this.bindGroups;if(e===null){const t={},i=this.bindings;for(const n of Pv)for(const s in i[n]){const r=i[n][s];(t[s]||(t[s]=[])).push(...r)}e=[];for(const n in t){const s=t[n],r=this._getBindGroup(n,s);e.push(r)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((t,i)=>t.bindings[0].groupNode.order-i.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const i=e[t];this.bindingsIndexes[i.name].group=t,i.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==ut.NONE&&this.updateNodes.push(e.getSelf());for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),i=e.getUpdateAfterType();t!==ut.NONE&&this.updateBeforeNodes.push(e.getSelf()),i!==ut.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===wn||e.magFilter===Ug||e.magFilter===tl||e.magFilter===$s||e.minFilter===wn||e.minFilter===Ug||e.minFilter===tl||e.minFilter===$s}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const i=this.getDataFromNode(e);return i.cache===void 0&&(i.cache=new jm(t?this.getCache():null)),i.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new Rt:e==="vec2"?t=new _t:e==="vec3"?t=new G:e==="vec4"&&(t=new Ct)),e==="float")return Wu(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${Wu(t.r)}, ${Wu(t.g)}, ${Wu(t.b)} )`;const i=this.getTypeLength(e),n=this.getComponentType(e),s=r=>this.generateConst(n,r);if(i===2)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)} )`;if(i===3)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)} )`;if(i===4)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)}, ${s(t.w)} )`;if(i>4&&t&&(t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(s).join(", ")} )`;if(i>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){const i=this.attributes;for(const s of i)if(s.name===e)return s;const n=new Sb(e,t);return i.push(n),n}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===Wi)return"int";if(t===Ti)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;const i=Xk.get(e);return(t==="float"?"":t[0])+i}getTypeFromArray(e){return qk.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const i=t.array,n=e.itemSize,s=e.normalized;let r;return!(e instanceof GT)&&s!==!0&&(r=this.getTypeFromArray(i)),this.getTypeFromLength(n,r)}getTypeLength(e){const t=this.getVectorType(e),i=/vec([2-4])/.exec(t);return i!==null?Number(i[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}addStack(){return this.stack=Wm(this.stack),this.stacks.push(dw()||this.stack),ff(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,ff(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,i=null){i=i===null?e.isGlobal(this)?this.globalCache:this.cache:i;let n=i.getData(e);return n===void 0&&(n={},i.setData(e,n)),n[t]===void 0&&(n[t]={}),n[t]}getNodeProperties(e,t="any"){const i=this.getDataFromNode(e,t);return i.properties||(i.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const i=this.getDataFromNode(e);let n=i.bufferAttribute;if(n===void 0){const s=this.uniforms.index++;n=new Sb("nodeAttribute"+s,t,e),this.bufferAttributes.push(n),i.bufferAttribute=n}return n}getStructTypeFromNode(e,t=this.shaderStage){const i=this.getDataFromNode(e,t);if(i.structType===void 0){const n=this.structs.index++;e.name=`StructType${n}`,this.structs[t].push(e),i.structType=e}return e}getUniformFromNode(e,t,i=this.shaderStage,n=null){const s=this.getDataFromNode(e,i,this.globalCache);let r=s.uniform;if(r===void 0){const a=this.uniforms.index++;r=new Mk(n||"nodeUniform"+a,t,e),this.uniforms[i].push(r),s.uniform=r}return r}getVarFromNode(e,t=null,i=e.getNodeType(this),n=this.shaderStage){const s=this.getDataFromNode(e,n);let r=s.variable;if(r===void 0){const a=this.vars[n]||(this.vars[n]=[]);t===null&&(t="nodeVar"+a.length),r=new wA(t,i),a.push(r),s.variable=r}return r}getVaryingFromNode(e,t=null,i=e.getNodeType(this)){const n=this.getDataFromNode(e,"any");let s=n.varying;if(s===void 0){const r=this.varyings,a=r.length;t===null&&(t="nodeVarying"+a),s=new Tk(t,i),r.push(s),n.varying=s}return s}getCodeFromNode(e,t,i=this.shaderStage){const n=this.getDataFromNode(e);let s=n.code;if(s===void 0){const r=this.codes[i]||(this.codes[i]=[]),a=r.length;s=new wk("nodeCode"+a,t),r.push(s),n.code=s}return s}addFlowCodeHierarchy(e,t){const{flowCodes:i,flowCodeBlock:n}=this.getDataFromNode(e);let s=!0,r=t;for(;r;){if(n.get(r)===!0){s=!1;break}r=this.getDataFromNode(r).parentNodeBlock}if(s)for(const a of i)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,i){const n=this.getDataFromNode(e),s=n.flowCodes||(n.flowCodes=[]),r=n.flowCodeBlock||(n.flowCodeBlock=new WeakMap);s.push(t),r.set(i,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),i=this.flowChildNode(e,t);return this.flowsData.set(e,i),i}buildFunctionNode(e){const t=new Qz,i=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=i,t}flowShaderNode(e){const t=e.layout,i={[Symbol.iterator](){let r=0;const a=Object.values(this);return{next:()=>({value:a[r],done:r++>=a.length})}}};for(const r of t.inputs)i[r.name]=new Dz(r.type,r.name);e.layout=null;const n=e.call(i),s=this.flowStagesNode(n,t.type);return e.layout=t,s}flowStagesNode(e,t=null){const i=this.flow,n=this.vars,s=this.cache,r=this.buildStage,a=this.stack,l={code:""};this.flow=l,this.vars={},this.cache=new jm,this.stack=Wm();for(const c of Nv)this.setBuildStage(c),l.result=e.build(this,t);return l.vars=this.getVars(this.shaderStage),this.flow=i,this.vars=n,this.cache=s,this.stack=a,this.setBuildStage(r),l}getFunctionOperator(){return null}flowChildNode(e,t=null){const i=this.flow,n={code:""};return this.flow=n,n.result=e.build(this,t),this.flow=i,n}flowNodeFromShaderStage(e,t,i=null,n=null){const s=this.shaderStage;this.setShaderStage(e);const r=this.flowChildNode(t,i);return n!==null&&(r.code+=`${this.tab+n} = ${r.result};
`),this.flowCode[e]=this.flowCode[e]+r.code,this.setShaderStage(s),r}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const i=this.vars[e];if(i!==void 0)for(const n of i)t+=`${this.getVar(n.type,n.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let i="";if(t!==void 0)for(const n of t)i+=n.code+`
`;return i}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:e,material:t,renderer:i}=this;if(t!==null){let n=i.library.fromMaterial(t);n===null&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),n=new ri),n.build(this)}else this.addFlow("compute",e);for(const n of Nv){this.setBuildStage(n),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const s of Pv){this.setShaderStage(s);const r=this.flowNodes[s];for(const a of r)n==="generate"?this.flowNode(a):a.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new Lk(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new Fk(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new Uk(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new Bk(e);if(t==="color")return new Ok(e);if(t==="mat3")return new zk(e);if(t==="mat4")return new kk(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}format(e,t,i){if(t=this.getVectorType(t),i=this.getVectorType(i),t===i||i===null||this.isReference(i))return e;const n=this.getTypeLength(t),s=this.getTypeLength(i);return n===16&&s===9?`${this.getType(i)}(${e}[0].xyz, ${e}[1].xyz, ${e}[2].xyz)`:n===9&&s===4?`${this.getType(i)}(${e}[0].xy, ${e}[1].xy)`:n>4||s>4||s===0?e:n===s?`${this.getType(i)}( ${e} )`:n>s?this.format(`${e}.${"xyz".slice(0,s)}`,this.getTypeFromLength(s,this.getComponentType(t)),i):s===4&&n>1?`${this.getType(i)}( ${this.format(e,t,"vec3")}, 1.0 )`:n===2?`${this.getType(i)}( ${this.format(e,t,"vec2")}, 0.0 )`:(n===1&&s>1&&t!==this.getComponentType(i)&&(e=`${this.getType(this.getComponentType(i))}( ${e} )`),`${this.getType(i)}( ${e} )`)}getSignature(){return`// Three.js r${Jf} - Node System
`}}class Nb{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let i=e.get(t);return i===void 0&&(i={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,i)),i}updateBeforeNode(e){const t=e.getUpdateBeforeType(),i=e.updateReference(this);if(t===ut.FRAME){const{frameMap:n}=this._getMaps(this.updateBeforeMap,i);n.get(i)!==this.frameId&&e.updateBefore(this)!==!1&&n.set(i,this.frameId)}else if(t===ut.RENDER){const{renderMap:n}=this._getMaps(this.updateBeforeMap,i);n.get(i)!==this.renderId&&e.updateBefore(this)!==!1&&n.set(i,this.renderId)}else t===ut.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),i=e.updateReference(this);if(t===ut.FRAME){const{frameMap:n}=this._getMaps(this.updateAfterMap,i);n.get(i)!==this.frameId&&e.updateAfter(this)!==!1&&n.set(i,this.frameId)}else if(t===ut.RENDER){const{renderMap:n}=this._getMaps(this.updateAfterMap,i);n.get(i)!==this.renderId&&e.updateAfter(this)!==!1&&n.set(i,this.renderId)}else t===ut.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),i=e.updateReference(this);if(t===ut.FRAME){const{frameMap:n}=this._getMaps(this.updateMap,i);n.get(i)!==this.frameId&&e.update(this)!==!1&&n.set(i,this.frameId)}else if(t===ut.RENDER){const{renderMap:n}=this._getMaps(this.updateMap,i);n.get(i)!==this.renderId&&e.update(this)!==!1&&n.set(i,this.renderId)}else t===ut.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class Yx{constructor(e,t,i=null,n="",s=!1){this.type=e,this.name=t,this.count=i,this.qualifier=n,this.isConst=s}}Yx.isNodeFunctionInput=!0;class Yk extends Jo{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,i=this.colorNode,n=SA(this.light),s=e.context.reflectedLight;t.direct({lightDirection:n,lightColor:i,reflectedLight:s},e.stack,e)}}const ng=new Gt,$u=new Gt;let jl=null;class Zk extends Jo{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=et(new G).setGroup(mt),this.halfWidth=et(new G).setGroup(mt),this.updateType=ut.RENDER}update(e){super.update(e);const{light:t}=this,i=e.camera.matrixWorldInverse;$u.identity(),ng.copy(t.matrixWorld),ng.premultiply(i),$u.extractRotation(ng),this.halfWidth.value.set(t.width*.5,0,0),this.halfHeight.value.set(0,t.height*.5,0),this.halfWidth.value.applyMatrix4($u),this.halfHeight.value.applyMatrix4($u)}setup(e){super.setup(e);let t,i;e.isAvailable("float32Filterable")?(t=jt(jl.LTC_FLOAT_1),i=jt(jl.LTC_FLOAT_2)):(t=jt(jl.LTC_HALF_1),i=jt(jl.LTC_HALF_2));const{colorNode:n,light:s}=this,r=e.context.lightingModel,a=$x(s),l=e.context.reflectedLight;r.directRectArea({lightColor:n,lightPosition:a,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:l,ltc_1:t,ltc_2:i},e.stack,e)}static setLTC(e){jl=e}}class EA extends Jo{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=et(0).setGroup(mt),this.penumbraCosNode=et(0).setGroup(mt),this.cutoffDistanceNode=et(0).setGroup(mt),this.decayExponentNode=et(0).setGroup(mt)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:i}=this;return Ho(t,i,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:i,cutoffDistanceNode:n,decayExponentNode:s,light:r}=this,a=$x(r).sub(Ei),l=a.normalize(),c=l.dot(SA(r)),h=this.getSpotAttenuation(c),u=a.length(),d=TA({lightDistance:u,cutoffDistance:n,decayExponent:s}),f=i.mul(h).mul(d),p=e.context.reflectedLight;t.direct({lightDirection:l,lightColor:f,reflectedLight:p},e.stack,e)}}class Kk extends EA{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let i=null;if(t&&t.isTexture===!0){const n=e.acos().mul(1/Math.PI);i=jt(t,Se(n,0),0).r}else i=super.getSpotAttenuation(e);return i}}class jk extends Jo{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class Jk extends Jo{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=bA(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=et(new Rt).setGroup(mt)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:i,lightDirectionNode:n}=this,r=jn.dot(n).mul(.5).add(.5),a=zt(i,t,r);e.context.irradiance.addAssign(a)}}class Qk extends Jo{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let i=0;i<9;i++)t.push(new G);this.lightProbe=Yc(t)}update(e){const{light:t}=this;super.update(e);for(let i=0;i<9;i++)this.lightProbe.array[i].copy(t.sh.coefficients[i]).multiplyScalar(t.intensity)}setup(e){const t=_k(Vw,this.lightProbe);e.context.irradiance.addAssign(t)}}class CA{parseFunction(){console.warn("Abstract function.")}}class Zx{constructor(e,t,i="",n=""){this.type=e,this.inputs=t,this.name=i,this.precision=n}getCode(){console.warn("Abstract function.")}}Zx.isNodeFunction=!0;const eG=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,tG=/[a-z_0-9]+/ig,Pb="#pragma main",iG=o=>{o=o.trim();const e=o.indexOf(Pb),t=e!==-1?o.slice(e+Pb.length):o,i=t.match(eG);if(i!==null&&i.length===5){const n=i[4],s=[];let r=null;for(;(r=tG.exec(n))!==null;)s.push(r);const a=[];let l=0;for(;l<s.length;){const p=s[l][0]==="const";p===!0&&l++;let m=s[l][0];m==="in"||m==="out"||m==="inout"?l++:m="";const g=s[l++][0];let y=Number.parseInt(s[l][0]);Number.isNaN(y)===!1?l++:y=null;const x=s[l++][0];a.push(new Yx(g,x,y,m,p))}const c=t.substring(i[0].length),h=i[3]!==void 0?i[3]:"",u=i[2],d=i[1]!==void 0?i[1]:"",f=e!==-1?o.slice(0,e):"";return{type:u,inputs:a,name:h,precision:d,inputsCode:n,blockCode:c,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class nG extends Zx{constructor(e){const{type:t,inputs:i,name:n,precision:s,inputsCode:r,blockCode:a,headerCode:l}=iG(e);super(t,i,n,s),this.inputsCode=r,this.blockCode=a,this.headerCode=l}getCode(e=this.name){let t;const i=this.blockCode;if(i!==""){const{type:n,inputsCode:s,headerCode:r,precision:a}=this;let l=`${n} ${e} ( ${s.trim()} )`;a!==""&&(l=`${a} ${l}`),t=r+l+i}else t="";return t}}class sG extends CA{parseFunction(e){return new nG(e)}}const Ib=new WeakMap;class rG extends Xr{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new Nb,this.nodeBuilderCache=new Map,this.callHashCache=new gs,this.groupsData=new gs}updateGroup(e){const t=e.groupNode,i=t.name;if(i===mw.name)return!0;if(i===mt.name){const r=this.get(e),a=this.nodeFrame.renderId;return r.renderId!==a?(r.renderId=a,!0):!1}if(i===IF.name){const r=this.get(e),a=this.nodeFrame.frameId;return r.frameId!==a?(r.frameId=a,!0):!1}const n=[t,e];let s=this.groupsData.get(n);return s===void 0&&this.groupsData.set(n,s={}),s.version!==t.version?(s.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let i=t.nodeBuilderState;if(i===void 0){const{nodeBuilderCache:n}=this,s=this.getForRenderCacheKey(e);if(i=n.get(s),i===void 0){const r=this.backend.createNodeBuilder(e.object,this.renderer);r.scene=e.scene,r.material=e.material,r.camera=e.camera,r.context.material=e.material,r.lightsNode=e.lightsNode,r.environmentNode=this.getEnvironmentNode(e.scene),r.fogNode=this.getFogNode(e.scene),r.clippingContext=e.clippingContext,r.build(),i=this._createNodeBuilderState(r),n.set(s,i)}i.usedTimes++,t.nodeBuilderState=i}return i}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let i=t.nodeBuilderState;if(i===void 0){const n=this.backend.createNodeBuilder(e,this.renderer);n.build(),i=this._createNodeBuilderState(n),t.nodeBuilderState=i}return i}_createNodeBuilderState(e){return new Sk(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.monitor,e.transforms)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){const i=[e,t],n=this.renderer.info.calls;let s=this.callHashCache.get(i);if(s===void 0||s.callId!==n){const r=this.getEnvironmentNode(e),a=this.getFogNode(e),l=[];t&&l.push(t.getCacheKey(!0)),r&&l.push(r.getCacheKey()),a&&l.push(a.getCacheKey()),l.push(this.renderer.shadowMap.enabled?1:0),s={callId:n,cacheKey:rw(l)},this.callHashCache.set(i,s)}return s.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e)}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),i=e.background;if(i){const n=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==i||n){let s=null;if(i.isCubeTexture===!0||i.mapping===uh||i.mapping===dh||i.mapping===Lg)if(e.backgroundBlurriness>0||i.mapping===Lg)s=pA(i);else{let r;i.isCubeTexture===!0?r=qc(i):r=jt(i),s=rA(r)}else i.isTexture===!0?s=jt(i,Zc.flipY()).setUpdateMatrix(!0):i.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",i);t.backgroundNode=s,t.background=i,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),i=e.fog;if(i){if(t.fog!==i){let n=null;if(i.isFogExp2){const s=Wt("color","color",i).setGroup(mt),r=Wt("density","float",i).setGroup(mt);n=nk(s,r)}else if(i.isFog){const s=Wt("color","color",i).setGroup(mt),r=Wt("near","float",i).setGroup(mt),a=Wt("far","float",i).setGroup(mt);n=tk(s,r,a)}else console.error("WebGPUNodes: Unsupported fog configuration.",i);t.fogNode=n,t.fog=i}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),i=e.environment;if(i){if(t.environment!==i){let n=null;i.isCubeTexture===!0?n=qc(i):i.isTexture===!0?n=jt(i):console.error("Nodes: Unsupported environment configuration.",i),t.environmentNode=n,t.environment=i}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,i=null,n=null,s=null){const r=this.nodeFrame;return r.renderer=e,r.scene=t,r.object=i,r.camera=n,r.material=s,r}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return Ib.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,i=this.getOutputCacheKey(),n=jt(e,Zc).renderOutput(t.toneMapping,t.currentColorSpace);return Ib.set(e,i),n}updateBefore(e){const t=e.getNodeBuilderState();for(const i of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(i)}updateAfter(e){const t=e.getNodeBuilderState();for(const i of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(i)}updateForCompute(e){const t=this.getNodeFrame(),i=this.getForCompute(e);for(const n of i.updateNodes)t.updateNode(n)}updateForRender(e){const t=this.getNodeFrameForRender(e),i=e.getNodeBuilderState();for(const n of i.updateNodes)t.updateNode(n)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new Nb,this.nodeBuilderCache=new Map}}class oG{constructor(e,t){this.scene=e,this.camera=t}clone(){return Object.assign(new this.constructor,this)}}class aG{constructor(){this.lists=new gs}get(e,t){const i=this.lists,n=[e,t];let s=i.get(n);return s===void 0&&(s=new oG(e,t),i.set(n,s)),s}dispose(){this.lists=new gs}}class RA{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const i=this.getMaterialNodeClass(e.type);if(i!==null){t=new i;for(const n in e)t[n]=e[n]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t.type,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,i){if(i.has(t)){console.warn(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);i.set(t,e)}addClass(e,t,i){if(i.has(t)){console.warn(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);i.set(t,e)}}const lG=new MA;class cG extends gs{constructor(){super()}createNode(e=[]){return new MA().setLights(e)}getNode(e,t){if(e.isQuadMesh)return lG;const i=[e,t];let n=this.get(i);return n===void 0&&(n=this.createNode(),this.set(i,n)),n}}const Db=new $T,Xu=new _t,sg=new Ct,rg=new YT,qu=new Gt,Sr=new Ct;class hG{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:i=!1,alpha:n=!0,depth:s=!0,stencil:r=!1,antialias:a=!1,samples:l=0,getFallback:c=null}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=l||a===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=n,this.logarithmicDepthBuffer=i,this.outputColorSpace=We,this.toneMapping=el,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=s,this.stencil=r,this.clippingPlanes=[],this.info=new _z,this.nodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new RA,this.lighting=new cG,this._getFallback=c,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new Ct(0,0,this._width,this._height),this._scissor=new Ct(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new _A(new ri),this._quad.material.type="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const h=this.alpha===!0?0:1;this._clearColor=new Hx(0,0,0,h),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:hD},this.xr={enabled:!1},this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(u,d,f)=>{await this.compileAsync(u,d);const p=this._renderLists.get(u,d),m=this._renderContexts.get(u,d,this._renderTarget),g=u.overrideMaterial||f.material,y=this._objects.get(f,g,u,d,p.lightsNode,m),{fragmentShader:x,vertexShader:_}=y.getNodeBuilderState();return{fragmentShader:x,vertexShader:_}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let i=this.backend;try{await i.init(this)}catch(n){if(this._getFallback!==null)try{this.backend=i=this._getFallback(n),await i.init(this)}catch(s){t(s);return}else{t(n);return}}this._nodes=new rG(this,i),this._animation=new cz(this._nodes,this.info),this._attributes=new gz(i),this._background=new vk(this,this._nodes),this._geometries=new xz(this._attributes,this.info),this._textures=new Iz(this,i,this.info),this._pipelines=new Mz(i,this._nodes),this._bindings=new Tz(i,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new fz(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new Ez(this.lighting),this._bundles=new aG,this._renderContexts=new Nz,this._initialized=!0,e()}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,i=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const n=this._nodes.nodeFrame,s=n.renderId,r=this._currentRenderContext,a=this._currentRenderObjectFunction,l=this._compilationPromises,c=e.isScene===!0?e:Db;i===null&&(i=e);const h=this._renderTarget,u=this._renderContexts.get(i,t,h),d=this._activeMipmapLevel,f=[];this._currentRenderContext=u,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,n.renderId++,n.update(),u.depth=this.depth,u.stencil=this.stencil,u.clippingContext||(u.clippingContext=new fy),u.clippingContext.updateGlobal(this,t),c.onBeforeRender(this,e,t,h);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p),i!==e&&i.traverseVisible(function(x){x.isLight&&x.layers.test(t.layers)&&p.pushLight(x)}),p.finish(),h!==null){this._textures.updateRenderTarget(h,d);const x=this._textures.get(h);u.textures=x.textures,u.depthTexture=x.depthTexture}else u.textures=null,u.depthTexture=null;this._nodes.updateScene(c),this._background.update(c,p,u);const m=p.opaque,g=p.transparent,y=p.lightsNode;this.opaque===!0&&m.length>0&&this._renderObjects(m,t,c,y),this.transparent===!0&&g.length>0&&this._renderTransparents(g,t,c,y),n.renderId=s,this._currentRenderContext=r,this._currentRenderObjectFunction=a,this._compilationPromises=l,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(e,t){this._initialized===!1&&await this.init();const i=this._renderScene(e,t);await this.backend.resolveTimestampAsync(i,"render")}async waitForGPU(){await this.backend.waitForGPU()}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(t+=`
Reason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,i){const{bundleGroup:n,camera:s,renderList:r}=e,a=this._currentRenderContext,l=this._bundles.get(n,s),c=this.backend.get(l);c.renderContexts===void 0&&(c.renderContexts=new Set);const h=n.version!==c.version,u=c.renderContexts.has(a)===!1||h;if(c.renderContexts.add(a),u){this.backend.beginBundle(a),(c.renderObjects===void 0||h)&&(c.renderObjects=[]),this._currentRenderBundle=l;const d=r.opaque;this.opaque===!0&&d.length>0&&this._renderObjects(d,s,t,i),this._currentRenderBundle=null,this.backend.finishBundle(a,l),c.version=n.version}else{const{renderObjects:d}=c;for(let f=0,p=d.length;f<p;f++){const m=d[f];this._nodes.needsRefresh(m)&&(this._nodes.updateBefore(m),this._nodes.updateForRender(m),this._bindings.updateForRender(m),this._nodes.updateAfter(m))}}this.backend.addBundle(a,l)}render(e,t){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(e!==el===!1&&t!==Dr===!1)return null;const{width:s,height:r}=this.getDrawingBufferSize(Xu),{depth:a,stencil:l}=this;let c=this._frameBufferTarget;return c===null&&(c=new Sl(s,r,{depthBuffer:a,stencilBuffer:l,type:Xs,format:vl,colorSpace:Dr,generateMipmaps:!1,minFilter:wn,magFilter:wn,samples:this.samples}),c.isPostProcessingRenderTarget=!0,this._frameBufferTarget=c),c.depthBuffer=a,c.stencilBuffer=l,c.setSize(s,r),c.viewport.copy(this._viewport),c.scissor.copy(this._scissor),c.viewport.multiplyScalar(this._pixelRatio),c.scissor.multiplyScalar(this._pixelRatio),c.scissorTest=this._scissorTest,c}_renderScene(e,t,i=!0){if(this._isDeviceLost===!0)return;const n=i?this._getFrameBufferTarget():null,s=this._nodes.nodeFrame,r=s.renderId,a=this._currentRenderContext,l=this._currentRenderObjectFunction,c=e.isScene===!0?e:Db,h=this._renderTarget,u=this._activeCubeFace,d=this._activeMipmapLevel;let f;n!==null?(f=n,this.setRenderTarget(f)):f=h;const p=this._renderContexts.get(e,t,f);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,s.renderId=this.info.calls;const m=this.coordinateSystem;t.coordinateSystem!==m&&(t.coordinateSystem=m,t.updateProjectionMatrix()),e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld();let g=this._viewport,y=this._scissor,x=this._pixelRatio;f!==null&&(g=f.viewport,y=f.scissor,x=1),this.getDrawingBufferSize(Xu),sg.set(0,0,Xu.width,Xu.height);const _=g.minDepth===void 0?0:g.minDepth,v=g.maxDepth===void 0?1:g.maxDepth;p.viewportValue.copy(g).multiplyScalar(x).floor(),p.viewportValue.width>>=d,p.viewportValue.height>>=d,p.viewportValue.minDepth=_,p.viewportValue.maxDepth=v,p.viewport=p.viewportValue.equals(sg)===!1,p.scissorValue.copy(y).multiplyScalar(x).floor(),p.scissor=this._scissorTest&&p.scissorValue.equals(sg)===!1,p.scissorValue.width>>=d,p.scissorValue.height>>=d,p.clippingContext||(p.clippingContext=new fy),p.clippingContext.updateGlobal(this,t),c.onBeforeRender(this,e,t,f),qu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),rg.setFromProjectionMatrix(qu,m);const A=this._renderLists.get(e,t);if(A.begin(),this._projectObject(e,t,0,A),A.finish(),this.sortObjects===!0&&A.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,d);const N=this._textures.get(f);p.textures=N.textures,p.depthTexture=N.depthTexture,p.width=N.width,p.height=N.height,p.renderTarget=f,p.depth=f.depthBuffer,p.stencil=f.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=d,p.height>>=d,p.activeCubeFace=u,p.activeMipmapLevel=d,p.occlusionQueryCount=A.occlusionQueryCount,this._nodes.updateScene(c),this._background.update(c,A,p),this.backend.beginRender(p);const{bundles:T,lightsNode:M,transparentDoublePass:w,transparent:S,opaque:b}=A;if(T.length>0&&this._renderBundles(T,c,M),this.opaque===!0&&b.length>0&&this._renderObjects(b,t,c,M),this.transparent===!0&&S.length>0&&this._renderTransparents(S,w,t,c,M),this.backend.finishRender(p),s.renderId=r,this._currentRenderContext=a,this._currentRenderObjectFunction=l,n!==null){this.setRenderTarget(h,u,d);const N=this._quad;this._nodes.hasOutputChange(f.texture)&&(N.material.fragmentNode=this._nodes.getOutputNode(f.texture),N.material.needsUpdate=!0),this._renderScene(N,N.camera,!1)}return c.onAfterRender(this,e,t,f),p}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,i){this._width=e,this._height=t,this._pixelRatio=i,this.domElement.width=Math.floor(e*i),this.domElement.height=Math.floor(t*i),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,i=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),i===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,i,n){const s=this._scissor;e.isVector4?s.copy(e):s.set(e,t,i,n)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,i,n,s=0,r=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,i,n),a.minDepth=s,a.maxDepth=r}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,i=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,i);const n=this._renderTarget||this._getFrameBufferTarget();let s=null;if(n!==null&&(this._textures.updateRenderTarget(n),s=this._textures.get(n)),this.backend.clear(e,t,i,s),n!==null&&this._renderTarget===null){const r=this._quad;this._nodes.hasOutputChange(n.texture)&&(r.material.fragmentNode=this._nodes.getOutputNode(n.texture),r.material.needsUpdate=!0),this._renderScene(r,r.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,i=!0){this._initialized===!1&&await this.init(),this.clear(e,t,i)}clearColorAsync(){return this.clearAsync(!0,!1,!1)}clearDepthAsync(){return this.clearAsync(!1,!0,!1)}clearStencilAsync(){return this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this._renderTarget!==null?el:this.toneMapping}get currentColorSpace(){return this._renderTarget!==null?Dr:this.outputColorSpace}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,i=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=i}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e){if(this.isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const t=this._nodes.nodeFrame,i=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const n=this.backend,s=this._pipelines,r=this._bindings,a=this._nodes,l=Array.isArray(e)?e:[e];if(l[0]===void 0||l[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");n.beginCompute(e);for(const c of l){if(s.has(c)===!1){const d=()=>{c.removeEventListener("dispose",d),s.delete(c),r.delete(c),a.delete(c)};c.addEventListener("dispose",d);const f=c.onInitFunction;f!==null&&f.call(c,{renderer:this})}a.updateForCompute(c),r.updateForCompute(c);const h=r.getForCompute(c),u=s.getForCompute(c,h);n.compute(e,c,h,u)}n.finishCompute(e),t.renderId=i}async computeAsync(e){this._initialized===!1&&await this.init(),this.compute(e),await this.backend.resolveTimestampAsync(e,"compute")}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}copyFramebufferToTexture(e,t=null){if(t!==null)if(t.isVector2)t=Sr.set(t.x,t.y,e.image.width,e.image.height).floor();else if(t.isVector4)t=Sr.copy(t).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else t=Sr.set(0,0,e.image.width,e.image.height);let i=this._currentRenderContext,n;i!==null?n=i.renderTarget:(n=this._renderTarget||this._getFrameBufferTarget(),n!==null&&(this._textures.updateRenderTarget(n),i=this._textures.get(n))),this._textures.updateTexture(e,{renderTarget:n}),this.backend.copyFramebufferToTexture(e,i,t)}copyTextureToTexture(e,t,i=null,n=null,s=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,i,n,s)}readRenderTargetPixelsAsync(e,t,i,n,s,r=0,a=0){return this.backend.copyTextureToBuffer(e.textures[r],t,i,n,s,a)}_projectObject(e,t,i,n){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)i=e.renderOrder;else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)n.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||rg.intersectsSprite(e)){this.sortObjects===!0&&Sr.setFromMatrixPosition(e.matrixWorld).applyMatrix4(qu);const{geometry:a,material:l}=e;l.visible&&n.push(e,a,l,i,Sr.z,null)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||rg.intersectsObject(e))){const{geometry:a,material:l}=e;if(this.sortObjects===!0&&(a.boundingSphere===null&&a.computeBoundingSphere(),Sr.copy(a.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(qu)),Array.isArray(l)){const c=a.groups;for(let h=0,u=c.length;h<u;h++){const d=c[h],f=l[d.materialIndex];f&&f.visible&&n.push(e,a,f,i,Sr.z,d)}}else l.visible&&n.push(e,a,l,i,Sr.z,null)}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const a=n;n=this._renderLists.get(e,t),n.begin(),a.pushBundle({bundleGroup:e,camera:t,renderList:n}),n.finish()}const r=e.children;for(let a=0,l=r.length;a<l;a++)this._projectObject(r[a],t,i,n)}_renderBundles(e,t,i){for(const n of e)this._renderBundle(n,t,i)}_renderTransparents(e,t,i,n,s){if(t.length>0){for(const{material:r}of t)r.side=Zn;this._renderObjects(t,i,n,s,"backSide");for(const{material:r}of t)r.side=cl;this._renderObjects(e,i,n,s);for(const{material:r}of t)r.side=Qa}else this._renderObjects(e,i,n,s)}_renderObjects(e,t,i,n,s=null){for(let r=0,a=e.length;r<a;r++){const l=e[r],{object:c,geometry:h,material:u,group:d}=l;if(t.isArrayCamera){const f=t.cameras;for(let p=0,m=f.length;p<m;p++){const g=f[p];if(c.layers.test(g.layers)){const y=g.viewport,x=y.minDepth===void 0?0:y.minDepth,_=y.maxDepth===void 0?1:y.maxDepth,v=this._currentRenderContext.viewportValue;v.copy(y).multiplyScalar(this._pixelRatio).floor(),v.minDepth=x,v.maxDepth=_,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(c,i,g,h,u,d,n,s)}}}else this._currentRenderObjectFunction(c,i,t,h,u,d,n,s)}}renderObject(e,t,i,n,s,r,a,l=null){let c,h,u;if(e.onBeforeRender(this,t,i,n,s,r),t.overrideMaterial!==null){const d=t.overrideMaterial;s.positionNode&&s.positionNode.isNode&&(c=d.positionNode,d.positionNode=s.positionNode),d.isShadowNodeMaterial&&(d.side=s.shadowSide===null?s.side:s.shadowSide,s.depthNode&&s.depthNode.isNode&&(u=d.depthNode,d.depthNode=s.depthNode),s.shadowNode&&s.shadowNode.isNode&&(h=d.fragmentNode,d.fragmentNode=s.shadowNode),this.localClippingEnabled&&(s.clipShadows?(d.clippingPlanes!==s.clippingPlanes&&(d.clippingPlanes=s.clippingPlanes,d.needsUpdate=!0),d.clipIntersection!==s.clipIntersection&&(d.clipIntersection=s.clipIntersection)):Array.isArray(d.clippingPlanes)&&(d.clippingPlanes=null,d.needsUpdate=!0))),s=d}s.transparent===!0&&s.side===Qa&&s.forceSinglePass===!1?(s.side=Zn,this._handleObjectFunction(e,s,t,i,a,r,"backSide"),s.side=cl,this._handleObjectFunction(e,s,t,i,a,r,l),s.side=Qa):this._handleObjectFunction(e,s,t,i,a,r,l),c!==void 0&&(t.overrideMaterial.positionNode=c),u!==void 0&&(t.overrideMaterial.depthNode=u),h!==void 0&&(t.overrideMaterial.fragmentNode=h),e.onAfterRender(this,t,i,n,s,r)}_renderObjectDirect(e,t,i,n,s,r,a){const l=this._objects.get(e,t,i,n,s,this._currentRenderContext,a);l.drawRange=e.geometry.drawRange,l.group=r;const c=this._nodes.needsRefresh(l);c&&(this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l)),this._pipelines.updateForRender(l),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(l),l.bundle=this._currentRenderBundle.scene),this.backend.draw(l,this.info),c&&this._nodes.updateAfter(l)}_createObjectPipeline(e,t,i,n,s,r){const a=this._objects.get(e,t,i,n,s,this._currentRenderContext,r);this._nodes.updateBefore(a),this._geometries.updateForRender(a),this._nodes.updateForRender(a),this._bindings.updateForRender(a),this._pipelines.getForRender(a,this._compilationPromises),this._nodes.updateAfter(a)}get compile(){return this.compileAsync}}class Kx{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function uG(o){return o+(Nr-o%Nr)%Nr}class NA extends Kx{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return uG(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class PA extends NA{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let dG=0;class IA extends PA{constructor(e,t){super("UniformBuffer_"+dG++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class fG extends PA{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,i=this.uniforms.length;t<i;t++){const n=this.uniforms[t],{boundary:s,itemSize:r}=n,a=e%Nr,l=Nr-a;a!==0&&l-s<0?e+=Nr-a:a%s!==0&&(e+=a%s),n.offset=e/this.bytesPerElement,e+=r*this.bytesPerElement}return Math.ceil(e/Nr)*Nr}update(){let e=!1;for(const t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset;if(i[s]!==n){const r=this.buffer;r[s]=i[s]=n,t=!0}return t}updateVector2(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset;if(i[s+0]!==n.x||i[s+1]!==n.y){const r=this.buffer;r[s+0]=i[s+0]=n.x,r[s+1]=i[s+1]=n.y,t=!0}return t}updateVector3(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset;if(i[s+0]!==n.x||i[s+1]!==n.y||i[s+2]!==n.z){const r=this.buffer;r[s+0]=i[s+0]=n.x,r[s+1]=i[s+1]=n.y,r[s+2]=i[s+2]=n.z,t=!0}return t}updateVector4(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset;if(i[s+0]!==n.x||i[s+1]!==n.y||i[s+2]!==n.z||i[s+4]!==n.w){const r=this.buffer;r[s+0]=i[s+0]=n.x,r[s+1]=i[s+1]=n.y,r[s+2]=i[s+2]=n.z,r[s+3]=i[s+3]=n.w,t=!0}return t}updateColor(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset;if(i[s+0]!==n.r||i[s+1]!==n.g||i[s+2]!==n.b){const r=this.buffer;r[s+0]=i[s+0]=n.r,r[s+1]=i[s+1]=n.g,r[s+2]=i[s+2]=n.b,t=!0}return t}updateMatrix3(e){let t=!1;const i=this.values,n=e.getValue().elements,s=e.offset;if(i[s+0]!==n[0]||i[s+1]!==n[1]||i[s+2]!==n[2]||i[s+4]!==n[3]||i[s+5]!==n[4]||i[s+6]!==n[5]||i[s+8]!==n[6]||i[s+9]!==n[7]||i[s+10]!==n[8]){const r=this.buffer;r[s+0]=i[s+0]=n[0],r[s+1]=i[s+1]=n[1],r[s+2]=i[s+2]=n[2],r[s+4]=i[s+4]=n[3],r[s+5]=i[s+5]=n[4],r[s+6]=i[s+6]=n[5],r[s+8]=i[s+8]=n[6],r[s+9]=i[s+9]=n[7],r[s+10]=i[s+10]=n[8],t=!0}return t}updateMatrix4(e){let t=!1;const i=this.values,n=e.getValue().elements,s=e.offset;return mG(i,n,s)===!1&&(this.buffer.set(n,s),pG(i,n,s),t=!0),t}}function pG(o,e,t){for(let i=0,n=e.length;i<n;i++)o[t+i]=e[i]}function mG(o,e,t){for(let i=0,n=e.length;i<n;i++)if(o[t+i]!==e[i])return!1;return!0}let gG=0;class DA extends fG{constructor(e,t){super(e),this.id=gG++,this.groupNode=t,this.isNodeUniformsGroup=!0}getNodes(){const e=[];for(const t of this.uniforms){const i=t.nodeUniform.node;if(!i)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(i)}return e}}let yG=0;class xG extends Kx{constructor(e,t){super(e),this.id=yG++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}}class fp extends xG{constructor(e,t,i,n=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=i,this.access=n}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class LA extends fp{constructor(e,t,i,n){super(e,t,i,n),this.isSampledCubeTexture=!0}}class FA extends fp{constructor(e,t,i,n){super(e,t,i,n),this.isSampledTexture3D=!0}}const _G={atan2:"atan",textureDimensions:"textureSize",equals:"equal"},vG={low:"lowp",medium:"mediump",high:"highp"},Lb={swizzleAssign:!0,storageBuffer:!1},Fb=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
`;class bG extends AA{constructor(e,t){super(e,t,new sG),this.uniformGroups={},this.transforms=[],this.extensions={},this.useComparisonMethod=!0}needsColorSpaceToLinearSRGB(e){return e.isVideoTexture===!0&&e.colorSpace!==ko}getMethod(e){return _G[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,i=this.flowShaderNode(e),n=[];for(const r of t.inputs)n.push(this.getType(r.type)+" "+r.name);return`${this.getType(t.type)} ${t.name}( ${n.join(", ")} ) {

	${i.vars}

${i.code}
	return ${i.result};

}`}setupPBO(e){const t=e.value;if(t.pbo===void 0){const i=t.array,n=t.count*t.itemSize,{itemSize:s}=t,r=t.array.constructor.name.toLowerCase().includes("int");let a=r?ux:hx;s===2?a=r?dx:zc:s===3?a=r?AD:cx:s===4&&(a=r?fx:vl);const l={Float32Array:Sn,Uint8Array:Ir,Uint16Array:Xa,Uint32Array:Ti,Int8Array:pc,Int16Array:mc,Int32Array:Wi,Uint8ClampedArray:Ir},c=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(n/s))));let h=Math.ceil(n/s/c);c*h*s<n&&h++;const u=c*h*s,d=new i.constructor(u);d.set(i,0),t.array=d;const f=new IL(t.array,c,h,a,l[t.array.constructor.name]||Sn);f.needsUpdate=!0,f.isPBOTexture=!0;const p=new vh(f,null,null);p.setPrecision("high"),t.pboNode=p,t.pbo=p.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:i}=e,n=t.value;if(this.renderer.backend.has(n)){const h=this.renderer.backend.get(n);h.pbo=n.pbo}const s=this.getUniformFromNode(n.pboNode,"texture",this.shaderStage,this.context.label),r=this.getPropertyName(s);this.increaseUsage(i);const a=i.build(this,"uint"),l=this.getDataFromNode(e);let c=l.propertyName;if(c===void 0){const h=this.getVarFromNode(e);c=this.getPropertyName(h);const u=this.getDataFromNode(t);let d=u.propertySizeName;d===void 0&&(d=c+"Size",this.getVarFromNode(t,d,"uint"),this.addLineFlowCode(`${d} = uint( textureSize( ${r}, 0 ).x )`,e),u.propertySizeName=d);const{itemSize:f}=n,p="."+Tl.join("").slice(0,f),m=`ivec2(${a} % ${d}, ${a} / ${d})`,g=this.generateTextureLoad(null,r,m,null,"0");let y="vec4";n.pbo.type===Ti?y="uvec4":n.pbo.type===Wi&&(y="ivec4"),this.addLineFlowCode(`${c} = ${y}(${g})${p}`,e),l.propertyName=c}return c}generateTextureLoad(e,t,i,n,s="0"){return n?`texelFetch( ${t}, ivec3( ${i}, ${n} ), ${s} )`:`texelFetch( ${t}, ${i}, ${s} )`}generateTexture(e,t,i,n){return e.isDepthTexture?`texture( ${t}, ${i} ).x`:(n&&(i=`vec3( ${i}, ${n} )`),`texture( ${t}, ${i} )`)}generateTextureLevel(e,t,i,n){return`textureLod( ${t}, ${i}, ${n} )`}generateTextureBias(e,t,i,n){return`texture( ${t}, ${i}, ${n} )`}generateTextureGrad(e,t,i,n){return`textureGrad( ${t}, ${i}, ${n[0]}, ${n[1]} )`}generateTextureCompare(e,t,i,n,s,r=this.shaderStage){if(r==="fragment")return`texture( ${t}, vec3( ${i}, ${n} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${r} shader.`)}getVars(e){const t=[],i=this.vars[e];if(i!==void 0)for(const n of i)t.push(`${this.getVar(n.type,n.name)};`);return t.join(`
	`)}getUniforms(e){const t=this.uniforms[e],i=[],n={};for(const r of t){let a=null,l=!1;if(r.type==="texture"){const h=r.node.value;let u="";h.isDataTexture===!0&&(h.type===Ti?u="u":h.type===Wi&&(u="i")),h.compareFunction?a=`sampler2DShadow ${r.name};`:h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0?a=`${u}sampler2DArray ${r.name};`:a=`${u}sampler2D ${r.name};`}else if(r.type==="cubeTexture")a=`samplerCube ${r.name};`;else if(r.type==="texture3D")a=`sampler3D ${r.name};`;else if(r.type==="buffer"){const h=r.node,u=this.getType(h.bufferType),d=h.bufferCount,f=d>0?d:"";a=`${h.name} {
	${u} ${r.name}[${f}];
};
`}else a=`${this.getVectorType(r.type)} ${this.getPropertyName(r,e)};`,l=!0;const c=r.node.precision;if(c!==null&&(a=vG[c]+" "+a),l){a="	"+a;const h=r.groupNode.name;(n[h]||(n[h]=[])).push(a)}else a="uniform "+a,i.push(a)}let s="";for(const r in n){const a=n[r];s+=this._getGLSLUniformStruct(e+"_"+r,a.join(`
`))+`
`}return s+=i.join(`
`),s}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==Wi){let i=e;e.isInterleavedBufferAttribute&&(i=e.data);const n=i.array;n instanceof Uint32Array||n instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){const i=this.getAttributesArray();let n=0;for(const s of i)t+=`layout( location = ${n++} ) in ${s.type} ${s.name};
`}return t}getStructMembers(e){const t=[],i=e.getMemberTypes();for(let n=0;n<i.length;n++){const s=i[n];t.push(`layout( location = ${n} ) out ${s} m${n};`)}return t.join(`
`)}getStructs(e){const t=[],i=this.structs[e];if(i.length===0)return`layout( location = 0 ) out vec4 fragColor;
`;for(let n=0,s=i.length;n<s;n++){const r=i[n];let a=`
`;a+=this.getStructMembers(r),a+=`
`,t.push(a)}return t.join(`

`)}getVaryings(e){let t="";const i=this.varyings;if(e==="vertex"||e==="compute")for(const n of i){e==="compute"&&(n.needsInterpolation=!0);const s=n.type,r=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${r}${n.needsInterpolation?"out":"/*out*/"} ${s} ${n.name};
`}else if(e==="fragment"){for(const n of i)if(n.needsInterpolation){const s=n.type,r=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${r}in ${s} ${n.name};
`}}return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((i,n)=>i*n,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,i=this.shaderStage){const n=this.extensions[i]||(this.extensions[i]=new Map);n.has(e)===!1&&n.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if(e==="vertex"){const n=this.renderer.backend.extensions;this.object.isBatchedMesh&&n.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const i=this.extensions[e];if(i!==void 0)for(const{name:n,behavior:s}of i.values())t.push(`#extension ${n} : ${s}`);return t.join(`
`)}isAvailable(e){let t=Lb[e];if(t===void 0){if(e==="float32Filterable"){const i=this.renderer.backend.extensions;i.has("OES_texture_float_linear")?(i.get("OES_texture_float_linear"),t=!0):t=!1}Lb[e]=t}return t}isFlipY(){return!0}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let i=0;i<e.length;i++){const n=e[i],s=this.getPropertyName(n.attributeNode);t+=`${n.varyingName} = ${s};
	`}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions 
${e.extensions}

// precision
${Fb}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// precision
${Fb}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let i=`// code

`;i+=this.flowCode[t];const n=this.flowNodes[t],s=n[n.length-1];for(const a of n){const l=this.getFlowData(a),c=a.name;c&&(i.length>0&&(i+=`
`),i+=`	// flow -> ${c}
	`),i+=`${l.code}
	`,a===s&&t!=="compute"&&(i+=`// result
	`,t==="vertex"?(i+="gl_Position = ",i+=`${l.result};`):t==="fragment"&&(a.outputNode.isOutputStructNode||(i+="fragColor = ",i+=`${l.result};`)))}const r=e[t];r.extensions=this.getExtensions(t),r.uniforms=this.getUniforms(t),r.attributes=this.getAttributes(t),r.varyings=this.getVaryings(t),r.vars=this.getVars(t),r.structs=this.getStructs(t),r.codes=this.getCodes(t),r.transforms=this.getTransforms(t),r.flow=i}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,i,n=null){const s=super.getUniformFromNode(e,t,i,n),r=this.getDataFromNode(e,i,this.globalCache);let a=r.uniformGPU;if(a===void 0){const l=e.groupNode,c=l.name,h=this.getBindGroupArray(c,i);if(t==="texture")a=new fp(s.name,s.node,l),h.push(a);else if(t==="cubeTexture")a=new LA(s.name,s.node,l),h.push(a);else if(t==="texture3D")a=new FA(s.name,s.node,l),h.push(a);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,s.name=`buffer${e.id}`;const u=new IA(e,l);u.name=e.name,h.push(u),a=u}else{const u=this.uniformGroups[i]||(this.uniformGroups[i]={});let d=u[c];d===void 0&&(d=new DA(i+"_"+c,l),u[c]=d,h.push(d)),a=this.getNodeUniform(s,t),d.addUniform(a)}r.uniformGPU=a}return s}}let og=null,ag=null,Fa=null;class UA{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(){}finish(){}draw(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}createRenderPipeline(){}createComputePipeline(){}destroyPipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}createDefaultTexture(){}createTexture(){}copyTextureToBuffer(){}createAttribute(){}createIndexAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}resolveTimestampAsync(){}hasFeatureAsync(){}hasFeature(){}getInstanceCount(e){const{object:t,geometry:i}=e;return i.isInstancedBufferGeometry?i.instanceCount:t.count>1?t.count:1}getDrawingBufferSize(){return og=og||new _t,this.renderer.getDrawingBufferSize(og)}getScissor(){return ag=ag||new Ct,this.renderer.getScissor(ag)}setScissorTest(){}getClearColor(){const e=this.renderer;return Fa=Fa||new Hx,e.getClearColor(Fa),Fa.getRGB(Fa,this.renderer.currentColorSpace),Fa}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:aL(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Jf} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let SG=0;class MG{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class TG{constructor(e){this.backend=e}createAttribute(e,t){const i=this.backend,{gl:n}=i,s=e.array,r=e.usage||n.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,l=i.get(a);let c=l.bufferGPU;c===void 0&&(c=this._createBuffer(n,t,s,r),l.bufferGPU=c,l.bufferType=t,l.version=a.version);let h;if(s instanceof Float32Array)h=n.FLOAT;else if(s instanceof Uint16Array)e.isFloat16BufferAttribute?h=n.HALF_FLOAT:h=n.UNSIGNED_SHORT;else if(s instanceof Int16Array)h=n.SHORT;else if(s instanceof Uint32Array)h=n.UNSIGNED_INT;else if(s instanceof Int32Array)h=n.INT;else if(s instanceof Int8Array)h=n.BYTE;else if(s instanceof Uint8Array)h=n.UNSIGNED_BYTE;else if(s instanceof Uint8ClampedArray)h=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+s);let u={bufferGPU:c,bufferType:t,type:h,byteLength:s.byteLength,bytesPerElement:s.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:h===n.INT||h===n.UNSIGNED_INT||e.gpuType===Wi,id:SG++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const d=this._createBuffer(n,t,s,r);u=new MG(u,d)}i.set(e,u)}updateAttribute(e){const t=this.backend,{gl:i}=t,n=e.array,s=e.isInterleavedBufferAttribute?e.data:e,r=t.get(s),a=r.bufferType,l=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(i.bindBuffer(a,r.bufferGPU),l.length===0)i.bufferSubData(a,0,n);else{for(let c=0,h=l.length;c<h;c++){const u=l[c];i.bufferSubData(a,u.start*n.BYTES_PER_ELEMENT,n,u.start,u.count)}s.clearUpdateRanges()}i.bindBuffer(a,null),r.version=s.version}destroyAttribute(e){const t=this.backend,{gl:i}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const n=t.get(e);i.deleteBuffer(n.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:i}=t,n=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:s}=t.get(n),r=e.array,a=r.byteLength;i.bindBuffer(i.COPY_READ_BUFFER,s);const l=i.createBuffer();i.bindBuffer(i.COPY_WRITE_BUFFER,l),i.bufferData(i.COPY_WRITE_BUFFER,a,i.STREAM_READ),i.copyBufferSubData(i.COPY_READ_BUFFER,i.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const c=new e.array.constructor(r.length);return i.bindBuffer(i.COPY_WRITE_BUFFER,l),i.getBufferSubData(i.COPY_WRITE_BUFFER,0,c),i.deleteBuffer(l),i.bindBuffer(i.COPY_READ_BUFFER,null),i.bindBuffer(i.COPY_WRITE_BUFFER,null),c.buffer}_createBuffer(e,t,i,n){const s=e.createBuffer();return e.bindBuffer(t,s),e.bufferData(t,i,n),e.bindBuffer(t,null),s}}let Ub=!1,lg,Jl;class wG{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},Ub===!1&&(this._init(this.gl),Ub=!0)}_init(e){lg={[Cr]:e.FUNC_ADD,[hT]:e.FUNC_SUBTRACT,[uT]:e.FUNC_REVERSE_SUBTRACT},Jl={[dT]:e.ZERO,[fT]:e.ONE,[pT]:e.SRC_COLOR,[sf]:e.SRC_ALPHA,[vT]:e.SRC_ALPHA_SATURATE,[xT]:e.DST_COLOR,[gT]:e.DST_ALPHA,[mT]:e.ONE_MINUS_SRC_COLOR,[rf]:e.ONE_MINUS_SRC_ALPHA,[_T]:e.ONE_MINUS_DST_COLOR,[yT]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==aD?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===lD?t.cullFace(t.BACK):e===cD?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:i}=this;e!==t&&(i.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,i,n,s,r,a,l){const{gl:c}=this;if(e===hl){this.currentBlendingEnabled===!0&&(this.disable(c.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(c.BLEND),this.currentBlendingEnabled=!0),e!==cT){if(e!==this.currentBlending||l!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==Cr||this.currentBlendEquationAlpha!==Cr)&&(c.blendEquation(c.FUNC_ADD),this.currentBlendEquation=Cr,this.currentBlendEquationAlpha=Cr),l)switch(e){case Pr:c.blendFuncSeparate(c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case ef:c.blendFunc(c.ONE,c.ONE);break;case tf:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case nf:c.blendFuncSeparate(c.ZERO,c.SRC_COLOR,c.ZERO,c.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case Pr:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case ef:c.blendFunc(c.SRC_ALPHA,c.ONE);break;case tf:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case nf:c.blendFunc(c.ZERO,c.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=l}return}s=s||t,r=r||i,a=a||n,(t!==this.currentBlendEquation||s!==this.currentBlendEquationAlpha)&&(c.blendEquationSeparate(lg[t],lg[s]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=s),(i!==this.currentBlendSrc||n!==this.currentBlendDst||r!==this.currentBlendSrcAlpha||a!==this.currentBlendDstAlpha)&&(c.blendFuncSeparate(Jl[i],Jl[n],Jl[r],Jl[a]),this.currentBlendSrc=i,this.currentBlendDst=n,this.currentBlendSrcAlpha=r,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case bT:t.depthFunc(t.NEVER);break;case ST:t.depthFunc(t.ALWAYS);break;case MT:t.depthFunc(t.LESS);break;case of:t.depthFunc(t.LEQUAL);break;case TT:t.depthFunc(t.EQUAL);break;case wT:t.depthFunc(t.GEQUAL);break;case AT:t.depthFunc(t.GREATER);break;case ET:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,i){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==i)&&(this.gl.stencilFunc(e,t,i),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=i)}setStencilOp(e,t,i){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==i)&&(this.gl.stencilOp(e,t,i),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=i)}setMaterial(e,t){const{gl:i}=this;e.side===Qa?this.disable(i.CULL_FACE):this.enable(i.CULL_FACE);let n=e.side===Zn;t&&(n=!n),this.setFlipSided(n),e.blending===Pr&&e.transparent===!1?this.setBlending(hl):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const s=e.stencilWrite;this.setStencilTest(s),s&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(i.SAMPLE_ALPHA_TO_COVERAGE):this.disable(i.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(e,t,i){const{gl:n}=this;e?(this.enable(n.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==i)&&(n.polygonOffset(t,i),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=i)):this.disable(n.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}bindFramebuffer(e,t){const{gl:i,currentBoundFramebuffers:n}=this;return n[e]!==t?(i.bindFramebuffer(e,t),n[e]=t,e===i.DRAW_FRAMEBUFFER&&(n[i.FRAMEBUFFER]=t),e===i.FRAMEBUFFER&&(n[i.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){const{gl:i}=this;let n=[],s=!1;if(e.textures!==null){n=this.currentDrawbuffers.get(t),n===void 0&&(n=[],this.currentDrawbuffers.set(t,n));const r=e.textures;if(n.length!==r.length||n[0]!==i.COLOR_ATTACHMENT0){for(let a=0,l=r.length;a<l;a++)n[a]=i.COLOR_ATTACHMENT0+a;n.length=r.length,s=!0}}else n[0]!==i.BACK&&(n[0]=i.BACK,s=!0);s&&i.drawBuffers(n)}activeTexture(e){const{gl:t,currentTextureSlot:i,maxTextures:n}=this;e===void 0&&(e=t.TEXTURE0+n-1),i!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,i){const{gl:n,currentTextureSlot:s,currentBoundTextures:r,maxTextures:a}=this;i===void 0&&(s===null?i=n.TEXTURE0+a-1:i=s);let l=r[i];l===void 0&&(l={type:void 0,texture:void 0},r[i]=l),(l.type!==e||l.texture!==t)&&(s!==i&&(n.activeTexture(i),this.currentTextureSlot=i),n.bindTexture(e,t),l.type=e,l.texture=t)}bindBufferBase(e,t,i){const{gl:n}=this,s=`${e}-${t}`;return this.currentBoundBufferBases[s]!==i?(n.bindBufferBase(e,t,i),this.currentBoundBufferBases[s]=i,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:i}=this,n=i[t];n!==void 0&&n.type!==void 0&&(e.bindTexture(n.type,null),n.type=void 0,n.texture=void 0)}}class AG{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=ko){const{gl:i,extensions:n}=this;let s;if(e===Ir)return i.UNSIGNED_BYTE;if(e===bD)return i.UNSIGNED_SHORT_4_4_4_4;if(e===SD)return i.UNSIGNED_SHORT_5_5_5_1;if(e===CT)return i.UNSIGNED_INT_5_9_9_9_REV;if(e===pc)return i.BYTE;if(e===mc)return i.SHORT;if(e===Xa)return i.UNSIGNED_SHORT;if(e===Wi)return i.INT;if(e===Ti)return i.UNSIGNED_INT;if(e===Sn)return i.FLOAT;if(e===Xs)return i.HALF_FLOAT;if(e===MD)return i.ALPHA;if(e===cx)return i.RGB;if(e===vl)return i.RGBA;if(e===TD)return i.LUMINANCE;if(e===wD)return i.LUMINANCE_ALPHA;if(e===Do)return i.DEPTH_COMPONENT;if(e===dl)return i.DEPTH_STENCIL;if(e===hx)return i.RED;if(e===ux)return i.RED_INTEGER;if(e===zc)return i.RG;if(e===dx)return i.RG_INTEGER;if(e===fx)return i.RGBA_INTEGER;if(e===am||e===rd||e===od||e===ad)if(t===We)if(s=n.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(e===am)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===rd)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===od)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===ad)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=n.get("WEBGL_compressed_texture_s3tc"),s!==null){if(e===am)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===rd)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===od)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===ad)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===j0||e===J0||e===Q0||e===ev)if(s=n.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(e===j0)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===J0)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Q0)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===ev)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===tv||e===Bg||e===Og)if(s=n.get("WEBGL_compressed_texture_etc"),s!==null){if(e===tv||e===Bg)return t===We?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(e===Og)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===zg||e===kg||e===Gg||e===Vg||e===Hg||e===Wg||e===$g||e===Xg||e===qg||e===Yg||e===Zg||e===Kg||e===jg||e===Jg)if(s=n.get("WEBGL_compressed_texture_astc"),s!==null){if(e===zg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===kg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Gg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Vg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Hg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Wg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===$g)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Xg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===qg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Yg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===Zg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===Kg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===jg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Jg)return t===We?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===lm)if(s=n.get("EXT_texture_compression_bptc"),s!==null){if(e===lm)return t===We?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===ED||e===iv||e===nv||e===sv)if(s=n.get("EXT_texture_compression_rgtc"),s!==null){if(e===lm)return s.COMPRESSED_RED_RGTC1_EXT;if(e===iv)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===nv)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===sv)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===fh?i.UNSIGNED_INT_24_8:i[e]!==void 0?i[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((i,n)=>{function s(){const r=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(r===e.WAIT_FAILED){e.deleteSync(t),n();return}if(r===e.TIMEOUT_EXPIRED){requestAnimationFrame(s);return}e.deleteSync(t),i()}s()})}}let Bb=!1,Yu,cg,Ob;class EG{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},Bb===!1&&(this._init(this.gl),Bb=!0)}_init(e){Yu={[af]:e.REPEAT,[$a]:e.CLAMP_TO_EDGE,[lf]:e.MIRRORED_REPEAT},cg={[Oi]:e.NEAREST,[Fg]:e.NEAREST_MIPMAP_NEAREST,[tl]:e.NEAREST_MIPMAP_LINEAR,[wn]:e.LINEAR,[Ug]:e.LINEAR_MIPMAP_NEAREST,[$s]:e.LINEAR_MIPMAP_LINEAR},Ob={[NT]:e.NEVER,[UT]:e.ALWAYS,[px]:e.LESS,[IT]:e.LEQUAL,[PT]:e.EQUAL,[FT]:e.GEQUAL,[DT]:e.GREATER,[LT]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===Oi||e===Fg||e===tl?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let i;return e.isCubeTexture===!0?i=t.TEXTURE_CUBE_MAP:e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?i=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?i=t.TEXTURE_3D:i=t.TEXTURE_2D,i}getInternalFormat(e,t,i,n,s=!1){const{gl:r,extensions:a}=this;if(e!==null){if(r[e]!==void 0)return r[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let l=t;return t===r.RED&&(i===r.FLOAT&&(l=r.R32F),i===r.HALF_FLOAT&&(l=r.R16F),i===r.UNSIGNED_BYTE&&(l=r.R8),i===r.UNSIGNED_SHORT&&(l=r.R16),i===r.UNSIGNED_INT&&(l=r.R32UI),i===r.BYTE&&(l=r.R8I),i===r.SHORT&&(l=r.R16I),i===r.INT&&(l=r.R32I)),t===r.RED_INTEGER&&(i===r.UNSIGNED_BYTE&&(l=r.R8UI),i===r.UNSIGNED_SHORT&&(l=r.R16UI),i===r.UNSIGNED_INT&&(l=r.R32UI),i===r.BYTE&&(l=r.R8I),i===r.SHORT&&(l=r.R16I),i===r.INT&&(l=r.R32I)),t===r.RG&&(i===r.FLOAT&&(l=r.RG32F),i===r.HALF_FLOAT&&(l=r.RG16F),i===r.UNSIGNED_BYTE&&(l=r.RG8),i===r.UNSIGNED_SHORT&&(l=r.RG16),i===r.UNSIGNED_INT&&(l=r.RG32UI),i===r.BYTE&&(l=r.RG8I),i===r.SHORT&&(l=r.RG16I),i===r.INT&&(l=r.RG32I)),t===r.RG_INTEGER&&(i===r.UNSIGNED_BYTE&&(l=r.RG8UI),i===r.UNSIGNED_SHORT&&(l=r.RG16UI),i===r.UNSIGNED_INT&&(l=r.RG32UI),i===r.BYTE&&(l=r.RG8I),i===r.SHORT&&(l=r.RG16I),i===r.INT&&(l=r.RG32I)),t===r.RGB&&(i===r.FLOAT&&(l=r.RGB32F),i===r.HALF_FLOAT&&(l=r.RGB16F),i===r.UNSIGNED_BYTE&&(l=r.RGB8),i===r.UNSIGNED_SHORT&&(l=r.RGB16),i===r.UNSIGNED_INT&&(l=r.RGB32UI),i===r.BYTE&&(l=r.RGB8I),i===r.SHORT&&(l=r.RGB16I),i===r.INT&&(l=r.RGB32I),i===r.UNSIGNED_BYTE&&(l=n===We&&s===!1?r.SRGB8:r.RGB8),i===r.UNSIGNED_SHORT_5_6_5&&(l=r.RGB565),i===r.UNSIGNED_SHORT_5_5_5_1&&(l=r.RGB5_A1),i===r.UNSIGNED_SHORT_4_4_4_4&&(l=r.RGB4),i===r.UNSIGNED_INT_5_9_9_9_REV&&(l=r.RGB9_E5)),t===r.RGB_INTEGER&&(i===r.UNSIGNED_BYTE&&(l=r.RGB8UI),i===r.UNSIGNED_SHORT&&(l=r.RGB16UI),i===r.UNSIGNED_INT&&(l=r.RGB32UI),i===r.BYTE&&(l=r.RGB8I),i===r.SHORT&&(l=r.RGB16I),i===r.INT&&(l=r.RGB32I)),t===r.RGBA&&(i===r.FLOAT&&(l=r.RGBA32F),i===r.HALF_FLOAT&&(l=r.RGBA16F),i===r.UNSIGNED_BYTE&&(l=r.RGBA8),i===r.UNSIGNED_SHORT&&(l=r.RGBA16),i===r.UNSIGNED_INT&&(l=r.RGBA32UI),i===r.BYTE&&(l=r.RGBA8I),i===r.SHORT&&(l=r.RGBA16I),i===r.INT&&(l=r.RGBA32I),i===r.UNSIGNED_BYTE&&(l=n===We&&s===!1?r.SRGB8_ALPHA8:r.RGBA8),i===r.UNSIGNED_SHORT_4_4_4_4&&(l=r.RGBA4),i===r.UNSIGNED_SHORT_5_5_5_1&&(l=r.RGB5_A1)),t===r.RGBA_INTEGER&&(i===r.UNSIGNED_BYTE&&(l=r.RGBA8UI),i===r.UNSIGNED_SHORT&&(l=r.RGBA16UI),i===r.UNSIGNED_INT&&(l=r.RGBA32UI),i===r.BYTE&&(l=r.RGBA8I),i===r.SHORT&&(l=r.RGBA16I),i===r.INT&&(l=r.RGBA32I)),t===r.DEPTH_COMPONENT&&(i===r.UNSIGNED_INT&&(l=r.DEPTH24_STENCIL8),i===r.FLOAT&&(l=r.DEPTH_COMPONENT32F)),t===r.DEPTH_STENCIL&&i===r.UNSIGNED_INT_24_8&&(l=r.DEPTH24_STENCIL8),(l===r.R16F||l===r.R32F||l===r.RG16F||l===r.RG32F||l===r.RGBA16F||l===r.RGBA32F)&&a.get("EXT_color_buffer_float"),l}setTextureParameters(e,t){const{gl:i,extensions:n,backend:s}=this;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,t.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,t.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,i.NONE),i.texParameteri(e,i.TEXTURE_WRAP_S,Yu[t.wrapS]),i.texParameteri(e,i.TEXTURE_WRAP_T,Yu[t.wrapT]),(e===i.TEXTURE_3D||e===i.TEXTURE_2D_ARRAY)&&i.texParameteri(e,i.TEXTURE_WRAP_R,Yu[t.wrapR]),i.texParameteri(e,i.TEXTURE_MAG_FILTER,cg[t.magFilter]);const r=t.mipmaps!==void 0&&t.mipmaps.length>0,a=t.minFilter===wn&&r?$s:t.minFilter;if(i.texParameteri(e,i.TEXTURE_MIN_FILTER,cg[a]),t.compareFunction&&(i.texParameteri(e,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(e,i.TEXTURE_COMPARE_FUNC,Ob[t.compareFunction])),n.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===Oi||t.minFilter!==tl&&t.minFilter!==$s||t.type===Sn&&n.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){const l=n.get("EXT_texture_filter_anisotropic");i.texParameterf(e,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,s.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:i,defaultTextures:n}=this,s=this.getGLTextureType(e);let r=n[s];r===void 0&&(r=t.createTexture(),i.state.bindTexture(s,r),t.texParameteri(s,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(s,t.TEXTURE_MAG_FILTER,t.NEAREST),n[s]=r),i.set(e,{textureGPU:r,glTextureType:s,isDefault:!0})}createTexture(e,t){const{gl:i,backend:n}=this,{levels:s,width:r,height:a,depth:l}=t,c=n.utils.convert(e.format,e.colorSpace),h=n.utils.convert(e.type),u=this.getInternalFormat(e.internalFormat,c,h,e.colorSpace,e.isVideoTexture),d=i.createTexture(),f=this.getGLTextureType(e);n.state.bindTexture(f,d),this.setTextureParameters(f,e),e.isDataArrayTexture||e.isCompressedArrayTexture?i.texStorage3D(i.TEXTURE_2D_ARRAY,s,u,r,a,l):e.isData3DTexture?i.texStorage3D(i.TEXTURE_3D,s,u,r,a,l):e.isVideoTexture||i.texStorage2D(f,s,u,r,a),n.set(e,{textureGPU:d,glTextureType:f,glFormat:c,glType:h,glInternalFormat:u})}copyBufferToTexture(e,t){const{gl:i,backend:n}=this,{textureGPU:s,glTextureType:r,glFormat:a,glType:l}=n.get(t),{width:c,height:h}=t.source.data;i.bindBuffer(i.PIXEL_UNPACK_BUFFER,e),n.state.bindTexture(r,s),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.texSubImage2D(r,0,0,0,c,h,a,l,0),i.bindBuffer(i.PIXEL_UNPACK_BUFFER,null),n.state.unbindTexture()}updateTexture(e,t){const{gl:i}=this,{width:n,height:s}=t,{textureGPU:r,glTextureType:a,glFormat:l,glType:c,glInternalFormat:h}=this.backend.get(e);if(e.isRenderTargetTexture||r===void 0)return;const u=d=>d.isDataTexture?d.image.data:d instanceof ImageBitmap||d instanceof OffscreenCanvas||d instanceof HTMLImageElement||d instanceof HTMLCanvasElement?d:d.data;if(this.backend.state.bindTexture(a,r),this.setTextureParameters(a,e),e.isCompressedTexture){const d=e.mipmaps,f=t.image;for(let p=0;p<d.length;p++){const m=d[p];e.isCompressedArrayTexture?e.format!==i.RGBA?l!==null?i.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,p,0,0,0,m.width,m.height,f.depth,l,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texSubImage3D(i.TEXTURE_2D_ARRAY,p,0,0,0,m.width,m.height,f.depth,l,c,m.data):l!==null?i.compressedTexSubImage2D(i.TEXTURE_2D,p,0,0,m.width,m.height,l,m.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const d=t.images;for(let f=0;f<6;f++){const p=u(d[f]);i.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,0,0,n,s,l,c,p)}}else if(e.isDataArrayTexture){const d=t.image;i.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,l,c,d.data)}else if(e.isData3DTexture){const d=t.image;i.texSubImage3D(i.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,l,c,d.data)}else if(e.isVideoTexture)e.update(),i.texImage2D(a,0,h,l,c,t.image);else{const d=u(t.image);i.texSubImage2D(a,0,0,0,n,s,l,c,d)}}generateMipmaps(e){const{gl:t,backend:i}=this,{textureGPU:n,glTextureType:s}=i.get(e);i.state.bindTexture(s,n),t.generateMipmap(s)}deallocateRenderBuffers(e){const{gl:t,backend:i}=this;if(e){const n=i.get(e);if(n.renderBufferStorageSetup=void 0,n.framebuffers){for(const s in n.framebuffers)t.deleteFramebuffer(n.framebuffers[s]);delete n.framebuffers}if(n.depthRenderbuffer&&(t.deleteRenderbuffer(n.depthRenderbuffer),delete n.depthRenderbuffer),n.stencilRenderbuffer&&(t.deleteRenderbuffer(n.stencilRenderbuffer),delete n.stencilRenderbuffer),n.msaaFrameBuffer&&(t.deleteFramebuffer(n.msaaFrameBuffer),delete n.msaaFrameBuffer),n.msaaRenderbuffers){for(let s=0;s<n.msaaRenderbuffers.length;s++)t.deleteRenderbuffer(n.msaaRenderbuffers[s]);delete n.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:i}=this,{textureGPU:n,renderTarget:s}=i.get(e);this.deallocateRenderBuffers(s),t.deleteTexture(n),i.delete(e)}copyTextureToTexture(e,t,i=null,n=null,s=0){const{gl:r,backend:a}=this,{state:l}=this.backend,{textureGPU:c,glTextureType:h,glType:u,glFormat:d}=a.get(t);let f,p,m,g,y,x;i!==null?(f=i.max.x-i.min.x,p=i.max.y-i.min.y,m=i.min.x,g=i.min.y):(f=e.image.width,p=e.image.height,m=0,g=0),n!==null?(y=n.x,x=n.y):(y=0,x=0),l.bindTexture(h,c),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,t.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment);const _=r.getParameter(r.UNPACK_ROW_LENGTH),v=r.getParameter(r.UNPACK_IMAGE_HEIGHT),A=r.getParameter(r.UNPACK_SKIP_PIXELS),T=r.getParameter(r.UNPACK_SKIP_ROWS),M=r.getParameter(r.UNPACK_SKIP_IMAGES),w=e.isCompressedTexture?e.mipmaps[s]:e.image;if(r.pixelStorei(r.UNPACK_ROW_LENGTH,w.width),r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,w.height),r.pixelStorei(r.UNPACK_SKIP_PIXELS,m),r.pixelStorei(r.UNPACK_SKIP_ROWS,g),e.isRenderTargetTexture||e.isDepthTexture){const S=a.get(e),b=a.get(t),N=a.get(S.renderTarget),z=a.get(b.renderTarget),L=N.framebuffers[S.cacheKey],k=z.framebuffers[b.cacheKey];l.bindFramebuffer(r.READ_FRAMEBUFFER,L),l.bindFramebuffer(r.DRAW_FRAMEBUFFER,k);let q=r.COLOR_BUFFER_BIT;e.isDepthTexture&&(q=r.DEPTH_BUFFER_BIT),r.blitFramebuffer(m,g,f,p,y,x,f,p,q,r.NEAREST),l.bindFramebuffer(r.READ_FRAMEBUFFER,null),l.bindFramebuffer(r.DRAW_FRAMEBUFFER,null)}else e.isDataTexture?r.texSubImage2D(r.TEXTURE_2D,s,y,x,f,p,d,u,w.data):e.isCompressedTexture?r.compressedTexSubImage2D(r.TEXTURE_2D,s,y,x,w.width,w.height,d,w.data):r.texSubImage2D(r.TEXTURE_2D,s,y,x,f,p,d,u,w);r.pixelStorei(r.UNPACK_ROW_LENGTH,_),r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,v),r.pixelStorei(r.UNPACK_SKIP_PIXELS,A),r.pixelStorei(r.UNPACK_SKIP_ROWS,T),r.pixelStorei(r.UNPACK_SKIP_IMAGES,M),s===0&&t.generateMipmaps&&r.generateMipmap(r.TEXTURE_2D),l.unbindTexture()}copyFramebufferToTexture(e,t,i){const{gl:n}=this,{state:s}=this.backend,{textureGPU:r}=this.backend.get(e),{x:a,y:l,z:c,w:h}=i,u=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,d=t.renderTarget?t.renderTarget.height:this.backend.gerDrawingBufferSize().y;if(u){const f=a!==0||l!==0;let p,m;if(e.isDepthTexture===!0?(p=n.DEPTH_BUFFER_BIT,m=n.DEPTH_ATTACHMENT,t.stencil&&(p|=n.STENCIL_BUFFER_BIT)):(p=n.COLOR_BUFFER_BIT,m=n.COLOR_ATTACHMENT0),f){const g=this.backend.get(t.renderTarget),y=g.framebuffers[t.getCacheKey()],x=g.msaaFrameBuffer;s.bindFramebuffer(n.DRAW_FRAMEBUFFER,y),s.bindFramebuffer(n.READ_FRAMEBUFFER,x);const _=d-l-h;n.blitFramebuffer(a,_,a+c,_+h,a,_,a+c,_+h,p,n.NEAREST),s.bindFramebuffer(n.READ_FRAMEBUFFER,y),s.bindTexture(n.TEXTURE_2D,r),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,_,c,h),s.unbindTexture()}else{const g=n.createFramebuffer();s.bindFramebuffer(n.DRAW_FRAMEBUFFER,g),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,m,n.TEXTURE_2D,r,0),n.blitFramebuffer(0,0,c,h,0,0,c,h,p,n.NEAREST),n.deleteFramebuffer(g)}}else s.bindTexture(n.TEXTURE_2D,r),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,d-h-l,c,h),s.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t){const{gl:i}=this,n=t.renderTarget,{samples:s,depthTexture:r,depthBuffer:a,stencilBuffer:l,width:c,height:h}=n;if(i.bindRenderbuffer(i.RENDERBUFFER,e),a&&!l){let u=i.DEPTH_COMPONENT24;s>0?(r&&r.isDepthTexture&&r.type===i.FLOAT&&(u=i.DEPTH_COMPONENT32F),i.renderbufferStorageMultisample(i.RENDERBUFFER,s,u,c,h)):i.renderbufferStorage(i.RENDERBUFFER,u,c,h),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,e)}else a&&l&&(s>0?i.renderbufferStorageMultisample(i.RENDERBUFFER,s,i.DEPTH24_STENCIL8,c,h):i.renderbufferStorage(i.RENDERBUFFER,i.DEPTH_STENCIL,c,h),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,i,n,s,r){const{backend:a,gl:l}=this,{textureGPU:c,glFormat:h,glType:u}=this.backend.get(e),d=l.createFramebuffer();l.bindFramebuffer(l.READ_FRAMEBUFFER,d);const f=e.isCubeTexture?l.TEXTURE_CUBE_MAP_POSITIVE_X+r:l.TEXTURE_2D;l.framebufferTexture2D(l.READ_FRAMEBUFFER,l.COLOR_ATTACHMENT0,f,c,0);const p=this._getTypedArrayType(u),m=this._getBytesPerTexel(u,h),y=n*s*m,x=l.createBuffer();l.bindBuffer(l.PIXEL_PACK_BUFFER,x),l.bufferData(l.PIXEL_PACK_BUFFER,y,l.STREAM_READ),l.readPixels(t,i,n,s,h,u,0),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const _=new p(y/p.BYTES_PER_ELEMENT);return l.bindBuffer(l.PIXEL_PACK_BUFFER,x),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,_),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),l.deleteFramebuffer(d),_}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:i}=this;let n=0;if(e===i.UNSIGNED_BYTE&&(n=1),(e===i.UNSIGNED_SHORT_4_4_4_4||e===i.UNSIGNED_SHORT_5_5_5_1||e===i.UNSIGNED_SHORT_5_6_5||e===i.UNSIGNED_SHORT||e===i.HALF_FLOAT)&&(n=2),(e===i.UNSIGNED_INT||e===i.FLOAT)&&(n=4),t===i.RGBA)return n*4;if(t===i.RGB)return n*3;if(t===i.ALPHA)return n}}class CG{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class RG{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){const i=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const zb={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class NG{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:i,mode:n,object:s,type:r,info:a,index:l}=this;l!==0?i.drawElements(n,t,r,e):i.drawArrays(n,e,t),a.update(s,t,n,1)}renderInstances(e,t,i){const{gl:n,mode:s,type:r,index:a,object:l,info:c}=this;i!==0&&(a!==0?n.drawElementsInstanced(s,t,r,e,i):n.drawArraysInstanced(s,e,t,i),c.update(l,t,s,i))}renderMultiDraw(e,t,i){const{extensions:n,mode:s,object:r,info:a}=this;if(i===0)return;const l=n.get("WEBGL_multi_draw");if(l===null)for(let c=0;c<i;c++)this.render(e[c],t[c]);else{this.index!==0?l.multiDrawElementsWEBGL(s,t,0,this.type,e,0,i):l.multiDrawArraysWEBGL(s,e,0,t,0,i);let c=0;for(let h=0;h<i;h++)c+=t[h];a.update(r,c,s,1)}}renderMultiDrawInstances(e,t,i,n){const{extensions:s,mode:r,object:a,info:l}=this;if(i===0)return;const c=s.get("WEBGL_multi_draw");if(c===null)for(let h=0;h<i;h++)this.renderInstances(e[h],t[h],n[h]);else{this.index!==0?c.multiDrawElementsInstancedWEBGL(r,t,0,this.type,e,0,n,0,i):c.multiDrawArraysInstancedWEBGL(r,e,0,t,0,n,0,i);let h=0;for(let u=0;u<i;u++)h+=t[u]*n[u];l.update(a,h,r,1)}}}class kb extends UA{constructor(e={}){super(e),this.isWebGLBackend=!0}init(e){super.init(e);const t=this.parameters,i=t.context!==void 0?t.context:e.domElement.getContext("webgl2");function n(s){s.preventDefault();const r={api:"WebGL",message:s.statusMessage||"Unknown reason",reason:null,originalEvent:s};e.onDeviceLost(r)}this._onContextLost=n,e.domElement.addEventListener("webglcontextlost",n,!1),this.gl=i,this.extensions=new CG(this),this.capabilities=new RG(this),this.attributeUtils=new TG(this),this.textureUtils=new EG(this),this.bufferRenderer=new NG(this),this.state=new wG(this),this.utils=new AG(this),this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.trackTimestamp=t.trackTimestamp===!0,this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile"),this._knownBindings=new WeakSet,this._currentContext=null}get coordinateSystem(){return qn}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(this.queryRunning){t.queryQueue||(t.queryQueue=[]),t.queryQueue.push(e);return}t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.activeQuery=null),t.activeQuery=this.gl.createQuery(),t.activeQuery!==null&&(this.gl.beginQuery(this.disjoint.TIME_ELAPSED_EXT,t.activeQuery),this.queryRunning=!0)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.gpuQueries||(t.gpuQueries=[]),t.gpuQueries.push({query:t.activeQuery}),t.activeQuery=null,this.queryRunning=!1,t.queryQueue&&t.queryQueue.length>0)){const i=t.queryQueue.shift();this.initTimestampQuery(i)}}async resolveTimestampAsync(e,t="render"){if(!this.disjoint||!this.trackTimestamp)return;const i=this.get(e);i.gpuQueries||(i.gpuQueries=[]);for(let n=0;n<i.gpuQueries.length;n++){const s=i.gpuQueries[n],r=this.gl.getQueryParameter(s.query,this.gl.QUERY_RESULT_AVAILABLE),a=this.gl.getParameter(this.disjoint.GPU_DISJOINT_EXT);if(r&&!a){const l=this.gl.getQueryParameter(s.query,this.gl.QUERY_RESULT),c=Number(l)/1e6;this.gl.deleteQuery(s.query),i.gpuQueries.splice(n,1),n--,this.renderer.info.updateTimestamp(t,c)}}}getContext(){return this.gl}beginRender(e){const{gl:t}=this,i=this.get(e);if(this.initTimestampQuery(e),i.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),e.scissor){const{x:s,y:r,width:a,height:l}=e.scissorValue;t.scissor(s,e.height-l-r,a,l)}const n=e.occlusionQueryCount;n>0&&(i.currentOcclusionQueries=i.occlusionQueries,i.currentOcclusionQueryObjects=i.occlusionQueryObjects,i.lastOcclusionObject=null,i.occlusionQueries=new Array(n),i.occlusionQueryObjects=new Array(n),i.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:i}=this,n=this.get(e),s=n.previousContext,r=e.occlusionQueryCount;r>0&&(r>n.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(a!==null)for(let l=0;l<a.length;l++){const c=a[l];c.generateMipmaps&&this.generateMipmaps(c)}if(this._currentContext=s,e.textures!==null&&e.renderTarget){const l=this.get(e.renderTarget),{samples:c}=e.renderTarget;if(c>0){const h=l.framebuffers[e.getCacheKey()],u=t.COLOR_BUFFER_BIT,d=l.msaaFrameBuffer,f=e.textures;i.bindFramebuffer(t.READ_FRAMEBUFFER,d),i.bindFramebuffer(t.DRAW_FRAMEBUFFER,h);for(let p=0;p<f.length;p++)if(e.scissor){const{x:m,y:g,width:y,height:x}=e.scissorValue,_=e.height-x-g;t.blitFramebuffer(m,_,m+y,_+x,m,_,m+y,_+x,u,t.NEAREST),t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,l.invalidationArray,m,_,y,x)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,u,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,l.invalidationArray)}}s!==null&&(this._setFramebuffer(s),s.viewport?this.updateViewport(s):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:i,currentOcclusionQueryObjects:n}=t;if(i&&n){const s=new WeakSet,{gl:r}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const a=()=>{let l=0;for(let c=0;c<i.length;c++){const h=i[c];h!==null&&r.getQueryParameter(h,r.QUERY_RESULT_AVAILABLE)&&(r.getQueryParameter(h,r.QUERY_RESULT)>0&&s.add(n[c]),i[c]=null,r.deleteQuery(h),l++)}l<i.length?requestAnimationFrame(a):t.occluded=s};a()}}isOccluded(e,t){const i=this.get(e);return i.occluded&&i.occluded.has(t)}updateViewport(e){const t=this.gl,{x:i,y:n,width:s,height:r}=e.viewportValue;t.viewport(i,e.height-r-n,s,r)}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}clear(e,t,i,n=null,s=!0){const{gl:r}=this;if(n===null){const l=this.getClearColor();l.r*=l.a,l.g*=l.a,l.b*=l.a,n={textures:null,clearColorValue:l}}let a=0;if(e&&(a|=r.COLOR_BUFFER_BIT),t&&(a|=r.DEPTH_BUFFER_BIT),i&&(a|=r.STENCIL_BUFFER_BIT),a!==0){let l;if(n.clearColorValue?l=n.clearColorValue:(l=this.getClearColor(),l.r*=l.a,l.g*=l.a,l.b*=l.a),t&&this.state.setDepthMask(!0),n.textures===null)r.clearColor(l.r,l.g,l.b,l.a),r.clear(a);else{if(s&&this._setFramebuffer(n),e)for(let c=0;c<n.textures.length;c++)r.clearBufferfv(r.COLOR,c,[l.r,l.g,l.b,l.a]);t&&i?r.clearBufferfi(r.DEPTH_STENCIL,0,1,0):t?r.clearBufferfv(r.DEPTH,0,[1]):i&&r.clearBufferiv(r.STENCIL,0,[0])}}}beginCompute(e){const{state:t,gl:i}=this;t.bindFramebuffer(i.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,i,n){const{state:s,gl:r}=this;this.discard||(r.enable(r.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:a,transformBuffers:l,attributes:c}=this.get(n),h=this._getVaoKey(null,c),u=this.vaoCache[h];u===void 0?this._createVao(null,c):r.bindVertexArray(u),s.useProgram(a),this._bindUniforms(i);const d=this._getTransformFeedback(l);r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,d),r.beginTransformFeedback(r.POINTS),c[0].isStorageInstancedBufferAttribute?r.drawArraysInstanced(r.POINTS,0,1,t.count):r.drawArrays(r.POINTS,0,t.count),r.endTransformFeedback(),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null);for(let f=0;f<l.length;f++){const p=l[f];p.pbo&&this.textureUtils.copyBufferToTexture(p.transformBuffer,p.pbo),p.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}draw(e){const{object:t,pipeline:i,material:n,context:s}=e,{programGPU:r}=this.get(i),{gl:a,state:l}=this,c=this.get(s),h=e.getDrawParameters();if(h===null)return;this._bindUniforms(e.getBindings());const u=t.isMesh&&t.matrixWorld.determinant()<0;l.setMaterial(n,u),l.useProgram(r);let d=e.staticVao;if(d===void 0){const _=this._getVaoKey(e.getIndex(),e.getAttributes());if(d=this.vaoCache[_],d===void 0){let v;({vaoGPU:d,staticVao:v}=this._createVao(e.getIndex(),e.getAttributes())),v&&(e.staticVao=d)}}a.bindVertexArray(d);const f=e.getIndex(),p=c.lastOcclusionObject;if(p!==t&&p!==void 0){if(p!==null&&p.occlusionTest===!0&&(a.endQuery(a.ANY_SAMPLES_PASSED),c.occlusionQueryIndex++),t.occlusionTest===!0){const _=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,_),c.occlusionQueries[c.occlusionQueryIndex]=_,c.occlusionQueryObjects[c.occlusionQueryIndex]=t}c.lastOcclusionObject=t}const m=this.bufferRenderer;t.isPoints?m.mode=a.POINTS:t.isLineSegments?m.mode=a.LINES:t.isLine?m.mode=a.LINE_STRIP:t.isLineLoop?m.mode=a.LINE_LOOP:n.wireframe===!0?(l.setLineWidth(n.wireframeLinewidth*this.renderer.getPixelRatio()),m.mode=a.LINES):m.mode=a.TRIANGLES;const{vertexCount:g,instanceCount:y}=h;let{firstVertex:x}=h;if(m.object=t,f!==null){x*=f.array.BYTES_PER_ELEMENT;const _=this.get(f);m.index=f.count,m.type=_.type}else m.index=0;t.isBatchedMesh?t._multiDrawInstances!==null?m.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?m.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):lL("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):y>1?m.renderInstances(x,g,y):m.render(x,g),a.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,i,n,s,r){return this.textureUtils.copyTextureToBuffer(e,t,i,n,s,r)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new bG(e,t)}createProgram(e){const t=this.gl,{stage:i,code:n}=e,s=i==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(s,n),t.compileShader(s),this.set(e,{shaderGPU:s})}destroyProgram(){console.warn("Abstract class.")}createRenderPipeline(e,t){const i=this.gl,n=e.pipeline,{fragmentProgram:s,vertexProgram:r}=n,a=i.createProgram(),l=this.get(s).shaderGPU,c=this.get(r).shaderGPU;if(i.attachShader(a,l),i.attachShader(a,c),i.linkProgram(a),this.set(n,{programGPU:a,fragmentShader:l,vertexShader:c}),t!==null&&this.parallel){const h=new Promise(u=>{const d=this.parallel,f=()=>{i.getProgramParameter(a,d.COMPLETION_STATUS_KHR)?(this._completeCompile(e,n),u()):requestAnimationFrame(f)};f()});t.push(h);return}this._completeCompile(e,n)}_handleSource(e,t){const i=e.split(`
`),n=[],s=Math.max(t-6,0),r=Math.min(t+6,i.length);for(let a=s;a<r;a++){const l=a+1;n.push(`${l===t?">":" "} ${l}: ${i[a]}`)}return n.join(`
`)}_getShaderErrors(e,t,i){const n=e.getShaderParameter(t,e.COMPILE_STATUS),s=e.getShaderInfoLog(t).trim();if(n&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const a=parseInt(r[1]);return i.toUpperCase()+`

`+s+`

`+this._handleSource(e.getShaderSource(t),a)}else return s}_logProgramError(e,t,i){if(this.renderer.debug.checkShaderErrors){const n=this.gl,s=n.getProgramInfoLog(e).trim();if(n.getProgramParameter(e,n.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(n,e,i,t);else{const r=this._getShaderErrors(n,i,"vertex"),a=this._getShaderErrors(n,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(e,n.VALIDATE_STATUS)+`

Program Info Log: `+s+`
`+r+`
`+a)}else s!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",s)}}_completeCompile(e,t){const{state:i,gl:n}=this,s=this.get(t),{programGPU:r,fragmentShader:a,vertexShader:l}=s;n.getProgramParameter(r,n.LINK_STATUS)===!1&&this._logProgramError(r,a,l),i.useProgram(r);const c=e.getBindings();this._setupBindings(c,r),this.set(t,{programGPU:r})}createComputePipeline(e,t){const{state:i,gl:n}=this,s={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(s);const{computeProgram:r}=e,a=n.createProgram(),l=this.get(s).shaderGPU,c=this.get(r).shaderGPU,h=r.transforms,u=[],d=[];for(let g=0;g<h.length;g++){const y=h[g];u.push(y.varyingName),d.push(y.attributeNode)}n.attachShader(a,l),n.attachShader(a,c),n.transformFeedbackVaryings(a,u,n.SEPARATE_ATTRIBS),n.linkProgram(a),n.getProgramParameter(a,n.LINK_STATUS)===!1&&this._logProgramError(a,l,c),i.useProgram(a),this._setupBindings(t,a);const f=r.attributes,p=[],m=[];for(let g=0;g<f.length;g++){const y=f[g].node.attribute;p.push(y),this.has(y)||this.attributeUtils.createAttribute(y,n.ARRAY_BUFFER)}for(let g=0;g<d.length;g++){const y=d[g].attribute;this.has(y)||this.attributeUtils.createAttribute(y,n.ARRAY_BUFFER);const x=this.get(y);m.push(x)}this.set(e,{programGPU:a,transformBuffers:m,attributes:p})}createBindings(e,t){if(this._knownBindings.has(t)===!1){this._knownBindings.add(t);let i=0,n=0;for(const s of t){this.set(s,{textures:n,uniformBuffers:i});for(const r of s.bindings)r.isUniformBuffer&&i++,r.isSampledTexture&&n++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,i=this.get(e);let n=i.uniformBuffers,s=i.textures;for(const r of e.bindings)if(r.isUniformsGroup||r.isUniformBuffer){const a=r.buffer,l=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,l),t.bufferData(t.UNIFORM_BUFFER,a,t.DYNAMIC_DRAW),this.set(r,{index:n++,bufferGPU:l})}else if(r.isSampledTexture){const{textureGPU:a,glTextureType:l}=this.get(r.texture);this.set(r,{index:s++,textureGPU:a,glTextureType:l})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const n=this.get(e).bufferGPU,s=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,n),t.bufferData(t.UNIFORM_BUFFER,s,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){}hasFeature(e){const t=Object.keys(zb).filter(n=>zb[n]===e),i=this.extensions;for(let n=0;n<t.length;n++)if(i.has(t[n]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,i,n,s){this.textureUtils.copyTextureToTexture(e,t,i,n,s)}copyFramebufferToTexture(e,t,i){this.textureUtils.copyFramebufferToTexture(e,t,i)}_setFramebuffer(e){const{gl:t,state:i}=this;let n=null;if(e.textures!==null){const s=e.renderTarget,r=this.get(s),{samples:a,depthBuffer:l,stencilBuffer:c}=s,h=s.isWebGLCubeRenderTarget===!0;let u=r.msaaFrameBuffer,d=r.depthRenderbuffer;const f=xA(e);let p;if(h?(r.cubeFramebuffers||(r.cubeFramebuffers={}),p=r.cubeFramebuffers[f]):(r.framebuffers||(r.framebuffers={}),p=r.framebuffers[f]),p===void 0){p=t.createFramebuffer(),i.bindFramebuffer(t.FRAMEBUFFER,p);const m=e.textures;if(h){r.cubeFramebuffers[f]=p;const{textureGPU:g}=this.get(m[0]),y=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+y,g,0)}else{r.framebuffers[f]=p;for(let g=0;g<m.length;g++){const y=m[g],x=this.get(y);x.renderTarget=e.renderTarget,x.cacheKey=f;const _=t.COLOR_ATTACHMENT0+g;t.framebufferTexture2D(t.FRAMEBUFFER,_,t.TEXTURE_2D,x.textureGPU,0)}i.drawBuffers(e,p)}if(e.depthTexture!==null){const g=this.get(e.depthTexture),y=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;g.renderTarget=e.renderTarget,g.cacheKey=f,t.framebufferTexture2D(t.FRAMEBUFFER,y,t.TEXTURE_2D,g.textureGPU,0)}}if(a>0){if(u===void 0){const m=[];u=t.createFramebuffer(),i.bindFramebuffer(t.FRAMEBUFFER,u);const g=[],y=e.textures;for(let x=0;x<y.length;x++){if(g[x]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,g[x]),m.push(t.COLOR_ATTACHMENT0+x),l){const A=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;m.push(A)}const _=e.textures[x],v=this.get(_);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,v.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+x,t.RENDERBUFFER,g[x])}if(r.msaaFrameBuffer=u,r.msaaRenderbuffers=g,d===void 0){d=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(d,e),r.depthRenderbuffer=d;const x=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;m.push(x)}r.invalidationArray=m}n=r.msaaFrameBuffer}else n=p}i.bindFramebuffer(t.FRAMEBUFFER,n)}_getVaoKey(e,t){let i=[];if(e!==null){const n=this.get(e);i+=":"+n.id}for(let n=0;n<t.length;n++){const s=this.get(t[n]);i+=":"+s.id}return i}_createVao(e,t){const{gl:i}=this,n=i.createVertexArray();let s="",r=!0;if(i.bindVertexArray(n),e!==null){const a=this.get(e);i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,a.bufferGPU),s+=":"+a.id}for(let a=0;a<t.length;a++){const l=t[a],c=this.get(l);s+=":"+c.id,i.bindBuffer(i.ARRAY_BUFFER,c.bufferGPU),i.enableVertexAttribArray(a),(l.isStorageBufferAttribute||l.isStorageInstancedBufferAttribute)&&(r=!1);let h,u;l.isInterleavedBufferAttribute===!0?(h=l.data.stride*c.bytesPerElement,u=l.offset*c.bytesPerElement):(h=0,u=0),c.isInteger?i.vertexAttribIPointer(a,l.itemSize,c.type,h,u):i.vertexAttribPointer(a,l.itemSize,c.type,l.normalized,h,u),l.isInstancedBufferAttribute&&!l.isInterleavedBufferAttribute?i.vertexAttribDivisor(a,l.meshPerAttribute):l.isInterleavedBufferAttribute&&l.data.isInstancedInterleavedBuffer&&i.vertexAttribDivisor(a,l.data.meshPerAttribute)}return i.bindBuffer(i.ARRAY_BUFFER,null),this.vaoCache[s]=n,{vaoGPU:n,staticVao:r}}_getTransformFeedback(e){let t="";for(let s=0;s<e.length;s++)t+=":"+e[s].id;let i=this.transformFeedbackCache[t];if(i!==void 0)return i;const{gl:n}=this;i=n.createTransformFeedback(),n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,i);for(let s=0;s<e.length;s++){const r=e[s];n.bindBufferBase(n.TRANSFORM_FEEDBACK_BUFFER,s,r.transformBuffer)}return n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=i,i}_setupBindings(e,t){const i=this.gl;for(const n of e)for(const s of n.bindings){const a=this.get(s).index;if(s.isUniformsGroup||s.isUniformBuffer){const l=i.getUniformBlockIndex(t,s.name);i.uniformBlockBinding(t,l,a)}else if(s.isSampledTexture){const l=i.getUniformLocation(t,s.name);i.uniform1i(l,a)}}}_bindUniforms(e){const{gl:t,state:i}=this;for(const n of e)for(const s of n.bindings){const r=this.get(s),a=r.index;s.isUniformsGroup||s.isUniformBuffer?i.bindBufferBase(t.UNIFORM_BUFFER,a,r.bufferGPU):s.isSampledTexture&&i.bindTexture(r.glTextureType,r.textureGPU,t.TEXTURE0+a)}}dispose(){this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}class PG extends Kx{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class IG extends PG{constructor(e,t,i){super(e,t?t.value:null),this.textureNode=t,this.groupNode=i}update(){this.texture=this.textureNode.value}}class DG extends NA{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let LG=0;class FG extends DG{constructor(e,t){super("StorageBuffer_"+LG++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:py.Storage,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class UG extends Xr{constructor(e){super(),this.device=e;const t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,i=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:bo.Linear}),this.flipYSampler=e.createSampler({minFilter:bo.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:i}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:n})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Ka.TriangleStrip,stripIndexFormat:ml.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Ka.TriangleStrip,stripIndexFormat:ml.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,i=0){const n=t.format,{width:s,height:r}=t.size,a=this.getTransferPipeline(n),l=this.getFlipYPipeline(n),c=this.device.createTexture({size:{width:s,height:r,depthOrArrayLayers:1},format:n,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),h=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Rn.TwoD,baseArrayLayer:i}),u=c.createView({baseMipLevel:0,mipLevelCount:1,dimension:Rn.TwoD,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),f=(p,m,g)=>{const y=p.getBindGroupLayout(0),x=this.device.createBindGroup({layout:y,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:m}]}),_=d.beginRenderPass({colorAttachments:[{view:g,loadOp:ti.Clear,storeOp:Si.Store,clearValue:[0,0,0,0]}]});_.setPipeline(p),_.setBindGroup(0,x),_.draw(4,1,0,0),_.end()};f(a,h,u),f(l,u,h),this.device.queue.submit([d.finish()]),c.destroy()}generateMipmaps(e,t,i=0){const n=this.get(e);n.useCount===void 0&&(n.useCount=0,n.layers=[]);const s=n.layers[i]||this._mipmapCreateBundles(e,t,i),r=this.device.createCommandEncoder({});this._mipmapRunBundles(r,s),this.device.queue.submit([r.finish()]),n.useCount!==0&&(n.layers[i]=s),n.useCount++}_mipmapCreateBundles(e,t,i){const n=this.getTransferPipeline(t.format),s=n.getBindGroupLayout(0);let r=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Rn.TwoD,baseArrayLayer:i});const a=[];for(let l=1;l<t.mipLevelCount;l++){const c=this.device.createBindGroup({layout:s,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:r}]}),h=e.createView({baseMipLevel:l,mipLevelCount:1,dimension:Rn.TwoD,baseArrayLayer:i}),u={colorAttachments:[{view:h,loadOp:ti.Clear,storeOp:Si.Store,clearValue:[0,0,0,0]}]},d=this.device.createRenderBundleEncoder({colorFormats:[t.format]});d.setPipeline(n),d.setBindGroup(0,c),d.draw(4,1,0,0),a.push({renderBundles:[d.finish()],passDescriptor:u}),r=h}return a}_mipmapRunBundles(e,t){const i=t.length;for(let n=0;n<i;n++){const s=t[n],r=e.beginRenderPass(s.passDescriptor);r.executeBundles(s.renderBundles),r.end()}}}const BG={[NT]:"never",[px]:"less",[PT]:"equal",[IT]:"less-equal",[DT]:"greater",[FT]:"greater-equal",[UT]:"always",[LT]:"not-equal"},OG=[0,1,3,2,4,5];class zG{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new Ml,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,i=t.device,n=t.get(e),s={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};s.magFilter===bo.Linear&&s.minFilter===bo.Linear&&s.mipmapFilter===bo.Linear&&(s.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(s.compare=BG[e.compareFunction]),n.sampler=i.createSampler(s)}createDefaultTexture(e){let t;const i=yy(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(i):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(i),this.backend.get(e).texture=t}createTexture(e,t={}){const i=this.backend,n=i.get(e);if(n.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);const{width:s,height:r,depth:a,levels:l}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const c=this._getDimension(e),h=e.internalFormat||t.format||yy(e,i.device);n.format=h;let u=t.sampleCount!==void 0?t.sampleCount:1;u=i.utils.getSampleCount(u);const d=e.isRenderTargetTexture&&!e.isMultisampleRenderTargetTexture?1:u;let f=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(f|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&(f|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:s,height:r,depthOrArrayLayers:a},mipLevelCount:l,sampleCount:d,dimension:c,format:h,usage:f};if(e.isVideoTexture){const m=e.source.data,g=new VideoFrame(m);p.size.width=g.displayWidth,p.size.height=g.displayHeight,g.close(),n.externalTexture=m}else{if(h===void 0)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);n.texture=i.device.createTexture(p)}if(e.isRenderTargetTexture&&u>1&&!e.isMultisampleRenderTargetTexture){const m=Object.assign({},p);m.label=m.label+"-msaa",m.sampleCount=u,n.msaaTexture=i.device.createTexture(m)}n.initialized=!0,n.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,i=t.get(e);i.texture.destroy(),i.msaaTexture!==void 0&&i.msaaTexture.destroy(),t.delete(e)}destroySampler(e){const i=this.backend.get(e);delete i.sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let i=0;i<6;i++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,i);else{const i=e.image.depth||1;for(let n=0;n<i;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:i}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:i,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const i=this.backend,{width:n,height:s}=i.getDrawingBufferSize(),r=this.depthTexture,a=i.get(r).texture;let l,c;if(t?(l=dl,c=fh):e&&(l=Do,c=Ti),a!==void 0){if(r.image.width===n&&r.image.height===s&&r.format===l&&r.type===c)return a;this.destroyTexture(r)}return r.name="depthBuffer",r.format=l,r.type=c,r.image.width=n,r.image.height=s,this.createTexture(r,{sampleCount:i.utils.getSampleCount(i.renderer.samples),width:n,height:s}),i.get(r).texture}updateTexture(e,t){const i=this.backend.get(e),{textureDescriptorGPU:n}=i;if(!(e.isRenderTargetTexture||n===void 0)){if(e.isDataTexture)this._copyBufferToTexture(t.image,i.texture,n,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let s=0;s<t.image.depth;s++)this._copyBufferToTexture(t.image,i.texture,n,s,e.flipY,s);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,i.texture,n);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,i.texture,n,e.flipY);else if(e.isVideoTexture){const s=e.source.data;i.externalTexture=s}else this._copyImageToTexture(t.image,i.texture,n,0,e.flipY);i.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,i,n,s,r){const a=this.backend.device,l=this.backend.get(e),c=l.texture,h=l.textureDescriptorGPU.format,u=this._getBytesPerTexel(h);let d=n*u;d=Math.ceil(d/256)*256;const f=a.createBuffer({size:n*s*u,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:c,origin:{x:t,y:i,z:r}},{buffer:f,bytesPerRow:d},{width:n,height:s});const m=this._getTypedArrayType(h);a.queue.submit([p.finish()]),await f.mapAsync(GPUMapMode.READ);const g=f.getMappedRange();return new m(g)}_isEnvironmentTexture(e){const t=e.mapping;return t===uh||t===dh||t===zo||t===ul}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const i=new Zi;i.minFilter=Oi,i.magFilter=Oi,this.createTexture(i,{width:1,height:1,format:e}),this.defaultTexture[e]=t=i}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const i=new yx;i.minFilter=Oi,i.magFilter=Oi,this.createTexture(i,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=i}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(e===null){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,i,n){for(let s=0;s<6;s++){const r=e[s],a=n===!0?OG[s]:s;r.isDataTexture?this._copyBufferToTexture(r.image,t,i,a,n):this._copyImageToTexture(r,t,i,a,n)}}_copyImageToTexture(e,t,i,n,s){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},{width:e.width,height:e.height,depthOrArrayLayers:1}),s===!0&&this._flipY(t,i,n)}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new UG(this.backend.device)),e}_generateMipmaps(e,t,i=0){this._getPassUtils().generateMipmaps(e,t,i)}_flipY(e,t,i=0){this._getPassUtils().flipY(e,t,i)}_copyBufferToTexture(e,t,i,n,s,r=0){const a=this.backend.device,l=e.data,c=this._getBytesPerTexel(i.format),h=e.width*c;a.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},l,{offset:e.width*e.height*c*r,bytesPerRow:h},{width:e.width,height:e.height,depthOrArrayLayers:1}),s===!0&&this._flipY(t,i,n)}_copyCompressedBufferToTexture(e,t,i){const n=this.backend.device,s=this._getBlockData(i.format),r=i.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const l=e[a],c=l.width,h=l.height,u=r?i.size.depthOrArrayLayers:1,d=Math.ceil(c/s.width)*s.byteLength,f=d*Math.ceil(h/s.height);for(let p=0;p<u;p++)n.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:p}},l.data,{offset:p*f,bytesPerRow:d,rowsPerImage:Math.ceil(h/s.height)},{width:Math.ceil(c/s.width)*s.width,height:Math.ceil(h/s.height)*s.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===D.BC1RGBAUnorm||e===D.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===D.BC2RGBAUnorm||e===D.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===D.BC3RGBAUnorm||e===D.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===D.BC4RUnorm||e===D.BC4RSNorm)return{byteLength:8,width:4,height:4};if(e===D.BC5RGUnorm||e===D.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===D.BC6HRGBUFloat||e===D.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===D.BC7RGBAUnorm||e===D.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===D.ETC2RGB8Unorm||e===D.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===D.ETC2RGB8A1Unorm||e===D.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===D.ETC2RGBA8Unorm||e===D.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===D.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===D.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===D.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===D.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===D.ASTC4x4Unorm||e===D.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===D.ASTC5x4Unorm||e===D.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===D.ASTC5x5Unorm||e===D.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===D.ASTC6x5Unorm||e===D.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===D.ASTC6x6Unorm||e===D.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===D.ASTC8x5Unorm||e===D.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===D.ASTC8x6Unorm||e===D.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===D.ASTC8x8Unorm||e===D.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===D.ASTC10x5Unorm||e===D.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===D.ASTC10x6Unorm||e===D.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===D.ASTC10x8Unorm||e===D.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===D.ASTC10x10Unorm||e===D.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===D.ASTC12x10Unorm||e===D.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===D.ASTC12x12Unorm||e===D.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=Zm.ClampToEdge;return e===af?t=Zm.Repeat:e===lf&&(t=Zm.MirrorRepeat),t}_convertFilterMode(e){let t=bo.Linear;return(e===Oi||e===Fg||e===tl)&&(t=bo.Nearest),t}_getBytesPerTexel(e){if(e===D.R8Unorm||e===D.R8Snorm||e===D.R8Uint||e===D.R8Sint)return 1;if(e===D.R16Uint||e===D.R16Sint||e===D.R16Float||e===D.RG8Unorm||e===D.RG8Snorm||e===D.RG8Uint||e===D.RG8Sint)return 2;if(e===D.R32Uint||e===D.R32Sint||e===D.R32Float||e===D.RG16Uint||e===D.RG16Sint||e===D.RG16Float||e===D.RGBA8Unorm||e===D.RGBA8UnormSRGB||e===D.RGBA8Snorm||e===D.RGBA8Uint||e===D.RGBA8Sint||e===D.BGRA8Unorm||e===D.BGRA8UnormSRGB||e===D.RGB9E5UFloat||e===D.RGB10A2Unorm||e===D.RG11B10UFloat||e===D.Depth32Float||e===D.Depth24Plus||e===D.Depth24PlusStencil8||e===D.Depth32FloatStencil8)return 4;if(e===D.RG32Uint||e===D.RG32Sint||e===D.RG32Float||e===D.RGBA16Uint||e===D.RGBA16Sint||e===D.RGBA16Float)return 8;if(e===D.RGBA32Uint||e===D.RGBA32Sint||e===D.RGBA32Float)return 16}_getTypedArrayType(e){if(e===D.R8Uint)return Uint8Array;if(e===D.R8Sint)return Int8Array;if(e===D.R8Unorm)return Uint8Array;if(e===D.R8Snorm)return Int8Array;if(e===D.RG8Uint)return Uint8Array;if(e===D.RG8Sint)return Int8Array;if(e===D.RG8Unorm)return Uint8Array;if(e===D.RG8Snorm)return Int8Array;if(e===D.RGBA8Uint)return Uint8Array;if(e===D.RGBA8Sint)return Int8Array;if(e===D.RGBA8Unorm)return Uint8Array;if(e===D.RGBA8Snorm)return Int8Array;if(e===D.R16Uint)return Uint16Array;if(e===D.R16Sint)return Int16Array;if(e===D.RG16Uint)return Uint16Array;if(e===D.RG16Sint)return Int16Array;if(e===D.RGBA16Uint)return Uint16Array;if(e===D.RGBA16Sint)return Int16Array;if(e===D.R16Float||e===D.RG16Float||e===D.RGBA16Float)return Uint16Array;if(e===D.R32Uint)return Uint32Array;if(e===D.R32Sint)return Int32Array;if(e===D.R32Float)return Float32Array;if(e===D.RG32Uint)return Uint32Array;if(e===D.RG32Sint)return Int32Array;if(e===D.RG32Float)return Float32Array;if(e===D.RGBA32Uint)return Uint32Array;if(e===D.RGBA32Sint)return Int32Array;if(e===D.RGBA32Float)return Float32Array;if(e===D.BGRA8Unorm||e===D.BGRA8UnormSRGB)return Uint8Array;if(e===D.RGB10A2Unorm||e===D.RGB9E5UFloat||e===D.RG11B10UFloat)return Uint32Array;if(e===D.Depth32Float)return Float32Array;if(e===D.Depth24Plus||e===D.Depth24PlusStencil8)return Uint32Array;if(e===D.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.isData3DTexture?t=vb.ThreeD:t=vb.TwoD,t}}function yy(o,e=null){const t=o.format,i=o.type,n=o.colorSpace;let s;if(o.isCompressedTexture===!0||o.isCompressedArrayTexture===!0)switch(t){case rd:s=n===We?D.BC1RGBAUnormSRGB:D.BC1RGBAUnorm;break;case od:s=n===We?D.BC2RGBAUnormSRGB:D.BC2RGBAUnorm;break;case ad:s=n===We?D.BC3RGBAUnormSRGB:D.BC3RGBAUnorm;break;case Bg:s=n===We?D.ETC2RGB8UnormSRGB:D.ETC2RGB8Unorm;break;case Og:s=n===We?D.ETC2RGBA8UnormSRGB:D.ETC2RGBA8Unorm;break;case zg:s=n===We?D.ASTC4x4UnormSRGB:D.ASTC4x4Unorm;break;case kg:s=n===We?D.ASTC5x4UnormSRGB:D.ASTC5x4Unorm;break;case Gg:s=n===We?D.ASTC5x5UnormSRGB:D.ASTC5x5Unorm;break;case Vg:s=n===We?D.ASTC6x5UnormSRGB:D.ASTC6x5Unorm;break;case Hg:s=n===We?D.ASTC6x6UnormSRGB:D.ASTC6x6Unorm;break;case Wg:s=n===We?D.ASTC8x5UnormSRGB:D.ASTC8x5Unorm;break;case $g:s=n===We?D.ASTC8x6UnormSRGB:D.ASTC8x6Unorm;break;case Xg:s=n===We?D.ASTC8x8UnormSRGB:D.ASTC8x8Unorm;break;case qg:s=n===We?D.ASTC10x5UnormSRGB:D.ASTC10x5Unorm;break;case Yg:s=n===We?D.ASTC10x6UnormSRGB:D.ASTC10x6Unorm;break;case Zg:s=n===We?D.ASTC10x8UnormSRGB:D.ASTC10x8Unorm;break;case Kg:s=n===We?D.ASTC10x10UnormSRGB:D.ASTC10x10Unorm;break;case jg:s=n===We?D.ASTC12x10UnormSRGB:D.ASTC12x10Unorm;break;case Jg:s=n===We?D.ASTC12x12UnormSRGB:D.ASTC12x12Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case vl:switch(i){case pc:s=D.RGBA8Snorm;break;case mc:s=D.RGBA16Sint;break;case Xa:s=D.RGBA16Uint;break;case Ti:s=D.RGBA32Uint;break;case Wi:s=D.RGBA32Sint;break;case Ir:s=n===We?D.RGBA8UnormSRGB:D.RGBA8Unorm;break;case Xs:s=D.RGBA16Float;break;case Sn:s=D.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",i)}break;case cx:switch(i){case CT:s=D.RGB9E5UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",i)}break;case hx:switch(i){case pc:s=D.R8Snorm;break;case mc:s=D.R16Sint;break;case Xa:s=D.R16Uint;break;case Ti:s=D.R32Uint;break;case Wi:s=D.R32Sint;break;case Ir:s=D.R8Unorm;break;case Xs:s=D.R16Float;break;case Sn:s=D.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",i)}break;case zc:switch(i){case pc:s=D.RG8Snorm;break;case mc:s=D.RG16Sint;break;case Xa:s=D.RG16Uint;break;case Ti:s=D.RG32Uint;break;case Wi:s=D.RG32Sint;break;case Ir:s=D.RG8Unorm;break;case Xs:s=D.RG16Float;break;case Sn:s=D.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",i)}break;case Do:switch(i){case Xa:s=D.Depth16Unorm;break;case Ti:s=D.Depth24Plus;break;case Sn:s=D.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",i)}break;case dl:switch(i){case fh:s=D.Depth24PlusStencil8;break;case Sn:e&&e.features.has(my.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),s=D.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",i)}break;case ux:switch(i){case Wi:s=D.R32Sint;break;case Ti:s=D.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",i)}break;case dx:switch(i){case Wi:s=D.RG32Sint;break;case Ti:s=D.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",i)}break;case fx:switch(i){case Wi:s=D.RGBA32Sint;break;case Ti:s=D.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",i)}break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}return s}const kG=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,GG=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,Gb={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},VG=o=>{o=o.trim();const e=o.match(kG);if(e!==null&&e.length===4){const t=e[2],i=[];let n=null;for(;(n=GG.exec(t))!==null;)i.push({name:n[1],type:n[2]});const s=[];for(let h=0;h<i.length;h++){const{name:u,type:d}=i[h];let f=d;f.startsWith("ptr")?f="pointer":(f.startsWith("texture")&&(f=d.split("<")[0]),f=Gb[f]),s.push(new Yx(f,u))}const r=o.substring(e[0].length),a=e[3]||"void",l=e[1]!==void 0?e[1]:"";return{type:Gb[a]||a,inputs:s,name:l,inputsCode:t,blockCode:r,outputType:a}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class HG extends Zx{constructor(e){const{type:t,inputs:i,name:n,inputsCode:s,blockCode:r,outputType:a}=VG(e);super(t,i,n),this.inputsCode=s,this.blockCode=r,this.outputType=a}getCode(e=this.name){const t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class WG extends CA{parseFunction(e){return new HG(e)}}const Ua=self.GPUShaderStage,Zu={vertex:Ua?Ua.VERTEX:1,fragment:Ua?Ua.FRAGMENT:2,compute:Ua?Ua.COMPUTE:4},Vb={instance:!0,swizzleAssign:!1,storageBuffer:!0},$G={"^^":"tsl_xor"},XG={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},Ls={tsl_xor:new Bi("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Bi("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Bi("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Bi("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Bi("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Bi("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Bi("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Bi("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Bi("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping:new Bi(`
fn tsl_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {

	let uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );

	return ( ( uvScaled % dimension ) + dimension ) % dimension;

}
`),biquadraticTexture:new Bi(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, level : i32 ) -> vec4f {

	let iRes = vec2i( textureDimensions( map, level ) );
	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2i( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2i( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2i( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2i( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},sc={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};/Windows/g.test(navigator.userAgent)&&(Ls.pow_float=new Bi("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),Ls.pow_vec2=new Bi("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[Ls.pow_float]),Ls.pow_vec3=new Bi("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[Ls.pow_float]),Ls.pow_vec4=new Bi("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[Ls.pow_float]),sc.pow_float="tsl_pow_float",sc.pow_vec2="tsl_pow_vec2",sc.pow_vec3="tsl_pow_vec3",sc.pow_vec4="tsl_pow_vec4");let BA="";/Firefox|Deno/g.test(navigator.userAgent)!==!0&&(BA+=`diagnostic( off, derivative_uniformity );
`);class qG extends AA{constructor(e,t){super(e,t,new WG),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==ko}_generateTextureSample(e,t,i,n,s=this.shaderStage){return s==="fragment"?n?`textureSample( ${t}, ${t}_sampler, ${i}, ${n} )`:`textureSample( ${t}, ${t}_sampler, ${i} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,i):this.generateTextureLod(e,t,i,"0")}_generateVideoSample(e,t,i=this.shaderStage){if(i==="fragment")return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${i} shader.`)}_generateTextureSampleLevel(e,t,i,n,s,r=this.shaderStage){return r==="fragment"&&this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${i}, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,i,n):this.generateTextureLod(e,t,i,n)}generateFilteredTexture(e,t,i,n="0"){return this._include("biquadraticTexture"),`tsl_biquadraticTexture( ${t}, ${i}, i32( ${n} ) )`}generateTextureLod(e,t,i,n="0"){this._include("repeatWrapping");const s=e.isMultisampleRenderTargetTexture===!0?`textureDimensions( ${t} )`:`textureDimensions( ${t}, 0 )`;return`textureLoad( ${t}, tsl_repeatWrapping( ${i}, ${s} ), i32( ${n} ) )`}generateTextureLoad(e,t,i,n,s="0u"){return n?`textureLoad( ${t}, ${i}, ${n}, ${s} )`:`textureLoad( ${t}, ${i}, ${s} )`}generateTextureStore(e,t,i,n){return`textureStore( ${t}, ${i}, ${n} )`}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===Sn||e.isMultisampleRenderTargetTexture===!0}generateTexture(e,t,i,n,s=this.shaderStage){let r=null;return e.isVideoTexture===!0?r=this._generateVideoSample(t,i,s):this.isUnfilterable(e)?r=this.generateTextureLod(e,t,i,"0",n,s):r=this._generateTextureSample(e,t,i,n,s),r}generateTextureGrad(e,t,i,n,s,r=this.shaderStage){if(r==="fragment")return`textureSampleGrad( ${t}, ${t}_sampler, ${i},  ${n[0]}, ${n[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${r} shader.`)}generateTextureCompare(e,t,i,n,s,r=this.shaderStage){if(r==="fragment")return`textureSampleCompare( ${t}, ${t}_sampler, ${i}, ${n} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${r} shader.`)}generateTextureLevel(e,t,i,n,s,r=this.shaderStage){let a=null;return e.isVideoTexture===!0?a=this._generateVideoSample(t,i,r):a=this._generateTextureSampleLevel(e,t,i,n,s,r),a}generateTextureBias(e,t,i,n,s,r=this.shaderStage){if(r==="fragment")return`textureSampleBias( ${t}, ${t}_sampler, ${i}, ${n} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${r} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const i=e.name,n=e.type;return n==="texture"||n==="cubeTexture"||n==="storageTexture"||n==="texture3D"?i:n==="buffer"||n==="storageBuffer"||n==="indirectStorageBuffer"?`NodeBuffer_${e.id}.${i}`:e.groupNode.name+"."+i}return super.getPropertyName(e)}getOutputStructName(){return"output"}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){const t=$G[e];return t!==void 0?(this._include(t),t):null}getStorageAccess(e){if(e.isStorageTextureNode)switch(e.access){case _b.ReadOnly:return"read";case _b.WriteOnly:return"write";default:return"read_write"}else switch(e.access){case py.Storage:return"read_write";case py.ReadOnlyStorage:return"read";default:return"write"}}getUniformFromNode(e,t,i,n=null){const s=super.getUniformFromNode(e,t,i,n),r=this.getDataFromNode(e,i,this.globalCache);if(r.uniformGPU===void 0){let a;const l=e.groupNode,c=l.name,h=this.getBindGroupArray(c,i);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let u=null;if(t==="texture"||t==="storageTexture"?u=new fp(s.name,s.node,l,e.access?e.access:null):t==="cubeTexture"?u=new LA(s.name,s.node,l,e.access?e.access:null):t==="texture3D"&&(u=new FA(s.name,s.node,l,e.access?e.access:null)),u.store=e.isStorageTextureNode===!0,u.setVisibility(Zu[i]),i==="fragment"&&this.isUnfilterable(e.value)===!1&&u.store===!1){const d=new IG(`${s.name}_sampler`,s.node,l);d.setVisibility(Zu[i]),h.push(d,u),a=[d,u]}else h.push(u),a=[u]}else if(t==="buffer"||t==="storageBuffer"||t==="indirectStorageBuffer"){const u=t==="buffer"?IA:FG,d=new u(e,l);d.setVisibility(Zu[i]),h.push(d),a=d}else{const u=this.uniformGroups[i]||(this.uniformGroups[i]={});let d=u[c];d===void 0&&(d=new DA(c,l),d.setVisibility(Zu[i]),u[c]=d,h.push(d)),a=this.getNodeUniform(s,t),d.addUniform(a)}r.uniformGPU=a}return s}getBuiltin(e,t,i,n=this.shaderStage){const s=this.builtins[n]||(this.builtins[n]=new Map);return s.has(e)===!1&&s.set(e,{name:e,property:t,type:i}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,i=this.flowShaderNode(e),n=[];for(const r of t.inputs)n.push(r.name+" : "+this.getType(r.type));let s=`fn ${t.name}( ${n.join(", ")} ) -> ${this.getType(t.type)} {
${i.vars}
${i.code}
`;return i.result&&(s+=`	return ${i.result};
`),s+=`
}
`,s}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],i=this.directives[e];if(i!==void 0)for(const n of i)t.push(`enable ${n};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}getBuiltins(e){const t=[],i=this.builtins[e];if(i!==void 0)for(const{name:n,property:s,type:r}of i.values())t.push(`@builtin( ${n} ) ${s} : ${r}`);return t.join(`,
	`)}getScopedArray(e,t,i,n){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:i,bufferCount:n}),e}getScopedArrays(e){if(e!=="compute")return;const t=[];for(const{name:i,scope:n,bufferType:s,bufferCount:r}of this.scopedArrays.values()){const a=this.getType(s);t.push(`var<${n}> ${i}: array< ${a}, ${r} >;`)}return t.join(`
`)}getAttributes(e){const t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const i=this.getBuiltins("attribute");i&&t.push(i);const n=this.getAttributesArray();for(let s=0,r=n.length;s<r;s++){const a=n[s],l=a.name,c=this.getType(a.type);t.push(`@location( ${s} ) ${l} : ${c}`)}}return t.join(`,
	`)}getStructMembers(e){const t=[],i=e.getMemberTypes();for(let s=0;s<i.length;s++){const r=i[s];t.push(`	@location( ${s} ) m${s} : ${r}<f32>`)}const n=this.getBuiltins("output");return n&&t.push("	"+n),t.join(`,
`)}getStructs(e){const t=[],i=this.structs[e];for(let n=0,s=i.length;n<s;n++){const r=i[n],a=r.name;let l=`struct ${a} {
`;l+=this.getStructMembers(r),l+=`
}`,t.push(l),t.push(`
var<private> output : ${a};

`)}return t.join(`

`)}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],i=this.vars[e];if(i!==void 0)for(const n of i)t.push(`	${this.getVar(n.type,n.name)};`);return`
${t.join(`
`)}
`}getVaryings(e){const t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const s=this.varyings,r=this.vars[e];for(let a=0;a<s.length;a++){const l=s[a];if(l.needsInterpolation){let c=`@location( ${a} )`;/^(int|uint|ivec|uvec)/.test(l.type)&&(c+=" @interpolate( flat )"),t.push(`${c} ${l.name} : ${this.getType(l.type)}`)}else e==="vertex"&&r.includes(l)===!1&&r.push(l)}}const i=this.getBuiltins(e);i&&t.push(i);const n=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+n):n}getUniforms(e){const t=this.uniforms[e],i=[],n=[],s=[],r={};for(const l of t){const c=l.groupNode.name,h=this.bindingsIndexes[c];if(l.type==="texture"||l.type==="cubeTexture"||l.type==="storageTexture"||l.type==="texture3D"){const u=l.node.value;e==="fragment"&&this.isUnfilterable(u)===!1&&l.node.isStorageTextureNode!==!0&&(u.isDepthTexture===!0&&u.compareFunction!==null?i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${l.name}_sampler : sampler_comparison;`):i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${l.name}_sampler : sampler;`));let d,f="";if(u.isMultisampleRenderTargetTexture===!0&&(f="_multisampled"),u.isCubeTexture===!0)d="texture_cube<f32>";else if(u.isDataArrayTexture===!0||u.isCompressedArrayTexture===!0)d="texture_2d_array<f32>";else if(u.isDepthTexture===!0)d=`texture_depth${f}_2d`;else if(u.isVideoTexture===!0)d="texture_external";else if(u.isData3DTexture===!0)d="texture_3d<f32>";else if(l.node.isStorageTextureNode===!0){const p=yy(u),m=this.getStorageAccess(l.node);d=`texture_storage_2d<${p}, ${m}>`}else{const p=this.getComponentTypeFromTexture(u).charAt(0);d=`texture${f}_2d<${p}32>`}i.push(`@binding( ${h.binding++} ) @group( ${h.group} ) var ${l.name} : ${d};`)}else if(l.type==="buffer"||l.type==="storageBuffer"||l.type==="indirectStorageBuffer"){const u=l.node,d=this.getType(u.bufferType),f=u.bufferCount,p=f>0&&l.type==="buffer"?", "+f:"",m=u.isAtomic?`atomic<${d}>`:`${d}`,g=`	${l.name} : array< ${m}${p} >
`,y=u.isStorageBufferNode?`storage, ${this.getStorageAccess(u)}`:"uniform";n.push(this._getWGSLStructBinding("NodeBuffer_"+u.id,g,y,h.binding++,h.group))}else{const u=this.getType(this.getVectorType(l.type)),d=l.groupNode.name;(r[d]||(r[d]={index:h.binding++,id:h.group,snippets:[]})).snippets.push(`	${l.name} : ${u}`)}}for(const l in r){const c=r[l];s.push(this._getWGSLStructBinding(l,c.snippets.join(`,
`),"uniform",c.index,c.id))}let a=i.join(`
`);return a+=n.join(`
`),a+=s.join(`
`),a}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){const i=e[t];i.uniforms=this.getUniforms(t),i.attributes=this.getAttributes(t),i.varyings=this.getVaryings(t),i.structs=this.getStructs(t),i.vars=this.getVars(t),i.codes=this.getCodes(t),i.directives=this.getDirectives(t),i.scopedArrays=this.getScopedArrays(t);let n=`// code

`;n+=this.flowCode[t];const s=this.flowNodes[t],r=s[s.length-1],a=r.outputNode,l=a!==void 0&&a.isOutputStructNode===!0;for(const c of s){const h=this.getFlowData(c),u=c.name;if(u&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${u}
	`),n+=`${h.code}
	`,c===r&&t!=="compute"){if(n+=`// result

	`,t==="vertex")n+=`varyings.Vertex = ${h.result};`;else if(t==="fragment")if(l)i.returnType=a.nodeType,n+=`return ${h.result};`;else{let d="	@location(0) color: vec4<f32>";const f=this.getBuiltins("output");f&&(d+=`,
	`+f),i.returnType="OutputStruct",i.structs+=this._getWGSLStruct("OutputStruct",d),i.structs+=`
var<private> output : OutputStruct;

`,n+=`output.color = ${h.result};

	return output;`}}}i.flow=n}this.material!==null?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let i;return t!==null&&(i=this._getWGSLMethod(e+"_"+t)),i===void 0&&(i=this._getWGSLMethod(e)),i||e}getType(e){return XG[e]||e}isAvailable(e){let t=Vb[e];return t===void 0&&(e==="float32Filterable"&&(t=this.renderer.hasFeature("float32-filterable")),Vb[e]=t),t}_getWGSLMethod(e){return Ls[e]!==void 0&&this._include(e),sc[e]}_include(e){const t=Ls[e];return t.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${BA}

// uniforms
${e.uniforms}

// structs
${e.structs}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${t} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = id.x + id.y * numWorkgroups.x * u32(${t}) + id.z * numWorkgroups.x * numWorkgroups.y * u32(${t});

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,i,n=0,s=0){const r=e+"Struct";return`${this._getWGSLStruct(r,t)}
@binding( ${n} ) @group( ${s} )
var<${i}> ${e} : ${r};`}}class YG{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=D.Depth24PlusStencil8:e.depth&&(t=D.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return Ka.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return Ka.LineList;if(e.isLine)return Ka.LineStrip;if(e.isMesh)return Ka.TriangleList}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),t===2&&(t=4)),t}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){return navigator.userAgent.includes("Quest")?D.BGRA8Unorm:navigator.gpu.getPreferredCanvasFormat()}}const ZG=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),KG=new Map([[GT,["float16"]]]),jG=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class JG{constructor(e){this.backend=e}createAttribute(e,t){const i=this._getBufferAttribute(e),n=this.backend,s=n.get(i);let r=s.buffer;if(r===void 0){const a=n.device;let l=i.array;if(e.normalized===!1&&(l.constructor===Int16Array||l.constructor===Uint16Array)){const h=new Uint32Array(l.length);for(let u=0;u<l.length;u++)h[u]=l[u];l=h}if(i.array=l,(i.isStorageBufferAttribute||i.isStorageInstancedBufferAttribute)&&i.itemSize===3){l=new l.constructor(i.count*4);for(let h=0;h<i.count;h++)l.set(i.array.subarray(h*3,h*3+3),h*4);i.itemSize=4,i.array=l}const c=l.byteLength+(4-l.byteLength%4)%4;r=a.createBuffer({label:i.name,size:c,usage:t,mappedAtCreation:!0}),new l.constructor(r.getMappedRange()).set(l),r.unmap(),s.buffer=r}}updateAttribute(e){const t=this._getBufferAttribute(e),i=this.backend,n=i.device,s=i.get(t).buffer,r=t.array,a=t.updateRanges;if(a.length===0)n.queue.writeBuffer(s,0,r,0);else{for(let l=0,c=a.length;l<c;l++){const h=a[l];n.queue.writeBuffer(s,0,r,h.start*r.BYTES_PER_ELEMENT,h.count*r.BYTES_PER_ELEMENT)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),i=new Map;for(let n=0;n<t.length;n++){const s=t[n],r=s.array.BYTES_PER_ELEMENT,a=this._getBufferAttribute(s);let l=i.get(a);if(l===void 0){let u,d;s.isInterleavedBufferAttribute===!0?(u=s.data.stride*r,d=s.data.isInstancedInterleavedBuffer?ku.Instance:ku.Vertex):(u=s.itemSize*r,d=s.isInstancedBufferAttribute?ku.Instance:ku.Vertex),s.normalized===!1&&(s.array.constructor===Int16Array||s.array.constructor===Uint16Array)&&(u=4),l={arrayStride:u,attributes:[],stepMode:d},i.set(a,l)}const c=this._getVertexFormat(s),h=s.isInterleavedBufferAttribute===!0?s.offset*r:0;l.attributes.push({shaderLocation:n,offset:h,format:c})}return Array.from(i.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,i=t.device,s=t.get(this._getBufferAttribute(e)).buffer,r=s.size,a=i.createBuffer({label:e.name,size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),l=i.createCommandEncoder({});l.copyBufferToBuffer(s,0,a,0,r),a.unmap();const c=l.finish();return i.queue.submit([c]),await a.mapAsync(GPUMapMode.READ),a.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:i}=e,n=e.array.constructor,s=e.constructor;let r;if(t==1)r=jG.get(n);else{const l=(KG.get(s)||ZG.get(n))[i?1:0];if(l){const c=n.BYTES_PER_ELEMENT*t,u=Math.floor((c+3)/4)*4/n.BYTES_PER_ELEMENT;if(u%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");r=`${l}x${u}`}}return r||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),r}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class QG{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const i=this.backend.device,n=[];let s=0;for(const r of e.bindings){const a={binding:s++,visibility:r.visibility};if(r.isUniformBuffer||r.isStorageBuffer){const l={};r.isStorageBuffer&&(l.type=r.access),a.buffer=l}else if(r.isSampler){const l={};r.texture.isDepthTexture&&r.texture.compareFunction!==null&&(l.type="comparison"),a.sampler=l}else if(r.isSampledTexture&&r.texture.isVideoTexture)a.externalTexture={};else if(r.isSampledTexture&&r.store){const l=this.backend.get(r.texture).texture.format,c=r.access;a.storageTexture={format:l,access:c}}else if(r.isSampledTexture){const l={};if(r.texture.isMultisampleRenderTargetTexture===!0&&(l.multisampled=!0),r.texture.isDepthTexture)l.sampleType=Kl.Depth;else if(r.texture.isDataTexture||r.texture.isDataArrayTexture||r.texture.isData3DTexture){const c=r.texture.type;c===Wi?l.sampleType=Kl.SInt:c===Ti?l.sampleType=Kl.UInt:c===Sn&&(this.backend.hasFeature("float32-filterable")?l.sampleType=Kl.Float:l.sampleType=Kl.UnfilterableFloat)}r.isSampledCubeTexture?l.viewDimension=Rn.Cube:r.texture.isDataArrayTexture||r.texture.isCompressedArrayTexture?l.viewDimension=Rn.TwoDArray:r.isSampledTexture3D&&(l.viewDimension=Rn.ThreeD),a.texture=l}else console.error(`WebGPUBindingUtils: Unsupported binding "${r}".`);n.push(a)}return i.createBindGroupLayout({entries:n})}createBindings(e){const{backend:t,bindGroupLayoutCache:i}=this,n=t.get(e);let s=i.get(e.bindingsReference);s===void 0&&(s=this.createBindingsLayout(e),i.set(e.bindingsReference,s));const r=this.createBindGroup(e,s);n.layout=s,n.group=r}updateBinding(e){const t=this.backend,i=t.device,n=e.buffer,s=t.get(e).buffer;i.queue.writeBuffer(s,0,n,0)}createBindGroup(e,t){const i=this.backend,n=i.device;let s=0;const r=[];for(const a of e.bindings){if(a.isUniformBuffer){const l=i.get(a);if(l.buffer===void 0){const c=a.byteLength,h=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,u=n.createBuffer({label:"bindingBuffer_"+a.name,size:c,usage:h});l.buffer=u}r.push({binding:s,resource:{buffer:l.buffer}})}else if(a.isStorageBuffer){const l=i.get(a);if(l.buffer===void 0){const c=a.attribute;l.buffer=i.get(c).buffer}r.push({binding:s,resource:{buffer:l.buffer}})}else if(a.isSampler){const l=i.get(a.texture);r.push({binding:s,resource:l.sampler})}else if(a.isSampledTexture){const l=i.get(a.texture);let c;if(l.externalTexture!==void 0)c=n.importExternalTexture({source:l.externalTexture});else{const h=a.store?1:l.texture.mipLevelCount,u=`view-${l.texture.width}-${l.texture.height}-${h}`;if(c=l[u],c===void 0){const d=kz.All;let f;a.isSampledCubeTexture?f=Rn.Cube:a.isSampledTexture3D?f=Rn.ThreeD:a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?f=Rn.TwoDArray:f=Rn.TwoD,c=l[u]=l.texture.createView({aspect:d,dimension:f,mipLevelCount:h})}}r.push({binding:s,resource:c})}s++}return n.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:r})}}class eV{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:i,material:n,geometry:s,pipeline:r}=e,{vertexProgram:a,fragmentProgram:l}=r,c=this.backend,h=c.device,u=c.utils,d=c.get(r),f=[];for(const L of e.getBindings()){const k=c.get(L);f.push(k.layout)}const p=c.attributeUtils.createShaderVertexBuffers(e);let m;n.transparent===!0&&n.blending!==hl&&(m=this._getBlending(n));let g={};n.stencilWrite===!0&&(g={compare:this._getStencilCompare(n),failOp:this._getStencilOperation(n.stencilFail),depthFailOp:this._getStencilOperation(n.stencilZFail),passOp:this._getStencilOperation(n.stencilZPass)});const y=this._getColorWriteMask(n),x=[];if(e.context.textures!==null){const L=e.context.textures;for(let k=0;k<L.length;k++){const q=u.getTextureFormatGPU(L[k]);x.push({format:q,blend:m,writeMask:y})}}else{const L=u.getCurrentColorFormat(e.context);x.push({format:L,blend:m,writeMask:y})}const _=c.get(a).module,v=c.get(l).module,A=this._getPrimitiveState(i,s,n),T=this._getDepthCompare(n),M=u.getCurrentDepthStencilFormat(e.context),w=this._getSampleCount(e.context),S={label:`renderPipeline_${n.name||n.type}_${n.id}`,vertex:Object.assign({},_,{buffers:p}),fragment:Object.assign({},v,{targets:x}),primitive:A,multisample:{count:w,alphaToCoverageEnabled:n.alphaToCoverage&&w>1},layout:h.createPipelineLayout({bindGroupLayouts:f})},b={},N=e.context.depth,z=e.context.stencil;if((N===!0||z===!0)&&(N===!0&&(b.format=M,b.depthWriteEnabled=n.depthWrite,b.depthCompare=T),z===!0&&(b.stencilFront=g,b.stencilBack={},b.stencilReadMask=n.stencilFuncMask,b.stencilWriteMask=n.stencilWriteMask),S.depthStencil=b),t===null)d.pipeline=h.createRenderPipeline(S);else{const L=new Promise(k=>{h.createRenderPipelineAsync(S).then(q=>{d.pipeline=q,k()})});t.push(L)}}createBundleEncoder(e){const t=this.backend,{utils:i,device:n}=t,s=i.getCurrentDepthStencilFormat(e),r=i.getCurrentColorFormat(e),a=this._getSampleCount(e),l={label:"renderBundleEncoder",colorFormats:[r],depthStencilFormat:s,sampleCount:a};return n.createRenderBundleEncoder(l)}createComputePipeline(e,t){const i=this.backend,n=i.device,s=i.get(e.computeProgram).module,r=i.get(e),a=[];for(const l of t){const c=i.get(l);a.push(c.layout)}r.pipeline=n.createComputePipeline({compute:s,layout:n.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,i;const n=e.blending,s=e.blendSrc,r=e.blendDst,a=e.blendEquation;if(n===cT){const l=e.blendSrcAlpha!==null?e.blendSrcAlpha:s,c=e.blendDstAlpha!==null?e.blendDstAlpha:r,h=e.blendEquationAlpha!==null?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(s),dstFactor:this._getBlendFactor(r),operation:this._getBlendOperation(a)},i={srcFactor:this._getBlendFactor(l),dstFactor:this._getBlendFactor(c),operation:this._getBlendOperation(h)}}else{const l=e.premultipliedAlpha,c=(h,u,d,f)=>{t={srcFactor:h,dstFactor:u,operation:uo.Add},i={srcFactor:d,dstFactor:f,operation:uo.Add}};if(l)switch(n){case Pr:c(je.One,je.OneMinusSrcAlpha,je.One,je.OneMinusSrcAlpha);break;case ef:c(je.One,je.One,je.One,je.One);break;case tf:c(je.Zero,je.OneMinusSrc,je.Zero,je.One);break;case nf:c(je.Zero,je.Src,je.Zero,je.SrcAlpha);break}else switch(n){case Pr:c(je.SrcAlpha,je.OneMinusSrcAlpha,je.One,je.OneMinusSrcAlpha);break;case ef:c(je.SrcAlpha,je.One,je.SrcAlpha,je.One);break;case tf:c(je.Zero,je.OneMinusSrc,je.Zero,je.One);break;case nf:c(je.Zero,je.Src,je.Zero,je.Src);break}}if(t!==void 0&&i!==void 0)return{color:t,alpha:i};console.error("THREE.WebGPURenderer: Invalid blending: ",n)}_getBlendFactor(e){let t;switch(e){case dT:t=je.Zero;break;case fT:t=je.One;break;case pT:t=je.Src;break;case mT:t=je.OneMinusSrc;break;case sf:t=je.SrcAlpha;break;case rf:t=je.OneMinusSrcAlpha;break;case xT:t=je.Dst;break;case _T:t=je.OneMinusDstColor;break;case gT:t=je.DstAlpha;break;case yT:t=je.OneMinusDstAlpha;break;case vT:t=je.SrcAlphaSaturated;break;case pz:t=je.Constant;break;case mz:t=je.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const i=e.stencilFunc;switch(i){case UD:t=bi.Never;break;case Qg:t=bi.Always;break;case BD:t=bi.Less;break;case zD:t=bi.LessEqual;break;case OD:t=bi.Equal;break;case VD:t=bi.GreaterEqual;break;case kD:t=bi.Greater;break;case GD:t=bi.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",i)}return t}_getStencilOperation(e){let t;switch(e){case mo:t=br.Keep;break;case RD:t=br.Zero;break;case ND:t=br.Replace;break;case FD:t=br.Invert;break;case PD:t=br.IncrementClamp;break;case ID:t=br.DecrementClamp;break;case DD:t=br.IncrementWrap;break;case LD:t=br.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case Cr:t=uo.Add;break;case hT:t=uo.Subtract;break;case uT:t=uo.ReverseSubtract;break;case uD:t=uo.Min;break;case dD:t=uo.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,i){const n={},s=this.backend.utils;switch(n.topology=s.getPrimitiveTopology(e,i),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(n.stripIndexFormat=t.index.array instanceof Uint16Array?ml.Uint16:ml.Uint32),i.side){case cl:n.frontFace=qm.CCW,n.cullMode=Ym.Back;break;case Zn:n.frontFace=qm.CCW,n.cullMode=Ym.Front;break;case Qa:n.frontFace=qm.CCW,n.cullMode=Ym.None;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",i.side);break}return n}_getColorWriteMask(e){return e.colorWrite===!0?xb.All:xb.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=bi.Always;else{const i=e.depthFunc;switch(i){case bT:t=bi.Never;break;case ST:t=bi.Always;break;case MT:t=bi.Less;break;case of:t=bi.LessEqual;break;case TT:t=bi.Equal;break;case wT:t=bi.GreaterEqual;break;case AT:t=bi.Greater;break;case ET:t=bi.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",i)}}return t}}class tV extends UA{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.trackTimestamp=e.trackTimestamp===!0,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new YG(this),this.attributeUtils=new JG(this),this.bindingUtils=new QG(this),this.pipelineUtils=new eV(this),this.textureUtils=new zG(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let i;if(t.device===void 0){const r={powerPreference:t.powerPreference},a=await navigator.gpu.requestAdapter(r);if(a===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const l=Object.values(my),c=[];for(const u of l)a.features.has(u)&&c.push(u);const h={requiredFeatures:c,requiredLimits:t.requiredLimits};i=await a.requestDevice(h)}else i=t.device;i.lost.then(r=>{const a={api:"WebGPU",message:r.message||"Unknown reason",reason:r.reason||null,originalEvent:r};e.onDeviceLost(a)});const n=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=i,this.context=n;const s=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(my.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:s}),this.updateSize()}get coordinateSystem(){return Go}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const i=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(i.depth,i.stencil).createView()});const n=e.colorAttachments[0];this.renderer.samples>0?n.view=this.colorBuffer.createView():n.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e){const t=e.renderTarget,i=this.get(t);let n=i.descriptors;if(n===void 0||i.width!==t.width||i.height!==t.height||i.activeMipmapLevel!==t.activeMipmapLevel||i.samples!==t.samples){n={},i.descriptors=n;const a=()=>{t.removeEventListener("dispose",a),this.delete(t)};t.addEventListener("dispose",a)}const s=e.getCacheKey();let r=n[s];if(r===void 0){const a=e.textures,l=[];for(let c=0;c<a.length;c++){const h=this.get(a[c]),u=h.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:Rn.TwoD});let d,f;h.msaaTexture!==void 0?(d=h.msaaTexture.createView(),f=u):(d=u,f=void 0),l.push({view:d,resolveTarget:f,loadOp:ti.Load,storeOp:Si.Store})}if(r={colorAttachments:l},e.depth){const h={view:this.get(e.depthTexture).texture.createView()};r.depthStencilAttachment=h}n[s]=r,i.width=t.width,i.height=t.height,i.samples=t.samples,i.activeMipmapLevel=t.activeMipmapLevel}return r}beginRender(e){const t=this.get(e),i=this.device,n=e.occlusionQueryCount;let s;n>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,s=i.createQuerySet({type:"occlusion",count:n}),t.occlusionQuerySet=s,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(n),t.lastOcclusionObject=null);let r;e.textures===null?r=this._getDefaultRenderPassDescriptor():r=this._getRenderPassDescriptor(e),this.initTimestampQuery(e,r),r.occlusionQuerySet=s;const a=r.depthStencilAttachment;if(e.textures!==null){const h=r.colorAttachments;for(let u=0;u<h.length;u++){const d=h[u];e.clearColor?(d.clearValue=u===0?e.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=ti.Clear,d.storeOp=Si.Store):(d.loadOp=ti.Load,d.storeOp=Si.Store)}}else{const h=r.colorAttachments[0];e.clearColor?(h.clearValue=e.clearColorValue,h.loadOp=ti.Clear,h.storeOp=Si.Store):(h.loadOp=ti.Load,h.storeOp=Si.Store)}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=ti.Clear,a.depthStoreOp=Si.Store):(a.depthLoadOp=ti.Load,a.depthStoreOp=Si.Store)),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=ti.Clear,a.stencilStoreOp=Si.Store):(a.stencilLoadOp=ti.Load,a.stencilStoreOp=Si.Store));const l=i.createCommandEncoder({label:"renderContext_"+e.id}),c=l.beginRenderPass(r);if(t.descriptor=r,t.encoder=l,t.currentPass=c,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){const{x:h,y:u,width:d,height:f}=e.scissorValue;c.setScissorRect(h,u,d,f)}}finishRender(e){const t=this.get(e),i=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),i>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),i>0){const n=i*8;let s=this.occludedResolveCache.get(n);s===void 0&&(s=this.device.createBuffer({size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(n,s));const r=this.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,i,s,0),t.encoder.copyBufferToBuffer(s,0,r,0,n),t.occlusionQueryBuffer=r,this.resolveOccludedAsync(e)}if(this.prepareTimestampBuffer(e,t.encoder),this.device.queue.submit([t.encoder.finish()]),e.textures!==null){const n=e.textures;for(let s=0;s<n.length;s++){const r=n[s];r.generateMipmaps===!0&&this.textureUtils.generateMipmaps(r)}}}isOccluded(e,t){const i=this.get(e);return i.occluded&&i.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:i,currentOcclusionQueryObjects:n}=t;if(i&&n){const s=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await i.mapAsync(GPUMapMode.READ);const r=i.getMappedRange(),a=new BigUint64Array(r);for(let l=0;l<n.length;l++)a[l]!==BigInt(0)&&s.add(n[l]);i.destroy(),t.occluded=s}}updateViewport(e){const{currentPass:t}=this.get(e),{x:i,y:n,width:s,height:r,minDepth:a,maxDepth:l}=e.viewportValue;t.setViewport(i,n,s,r,a,l)}clear(e,t,i,n=null){const s=this.device,r=this.renderer;let a=[],l,c,h,u;if(e){const p=this.getClearColor();if(this.renderer.alpha===!0){const m=p.a;c={r:p.r*m,g:p.g*m,b:p.b*m,a:m}}else c={r:p.r,g:p.g,b:p.b,a:p.a}}if(n===null){h=r.depth,u=r.stencil;const p=this._getDefaultRenderPassDescriptor();if(e){a=p.colorAttachments;const m=a[0];m.clearValue=c,m.loadOp=ti.Clear,m.storeOp=Si.Store}(h||u)&&(l=p.depthStencilAttachment)}else{if(h=n.depth,u=n.stencil,e)for(const p of n.textures){const m=this.get(p),g=m.texture.createView();let y,x;m.msaaTexture!==void 0?(y=m.msaaTexture.createView(),x=g):(y=g,x=void 0),a.push({view:y,resolveTarget:x,clearValue:c,loadOp:ti.Clear,storeOp:Si.Store})}(h||u)&&(l={view:this.get(n.depthTexture).texture.createView()})}h&&(t?(l.depthLoadOp=ti.Clear,l.depthClearValue=r.getClearDepth(),l.depthStoreOp=Si.Store):(l.depthLoadOp=ti.Load,l.depthStoreOp=Si.Store)),u&&(i?(l.stencilLoadOp=ti.Clear,l.stencilClearValue=r.getClearStencil(),l.stencilStoreOp=Si.Store):(l.stencilLoadOp=ti.Load,l.stencilStoreOp=Si.Store));const d=s.createCommandEncoder({});d.beginRenderPass({colorAttachments:a,depthStencilAttachment:l}).end(),s.queue.submit([d.finish()])}beginCompute(e){const t=this.get(e),i={};this.initTimestampQuery(e,i),t.cmdEncoderGPU=this.device.createCommandEncoder(),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(i)}compute(e,t,i,n){const{passEncoderGPU:s}=this.get(e),r=this.get(n).pipeline;s.setPipeline(r);for(let h=0,u=i.length;h<u;h++){const d=i[h],f=this.get(d);s.setBindGroup(h,f.group)}const a=this.device.limits.maxComputeWorkgroupsPerDimension,l=this.get(t);l.dispatchSize===void 0&&(l.dispatchSize={x:0,y:1,z:1});const{dispatchSize:c}=l;t.dispatchCount>a?(c.x=Math.min(t.dispatchCount,a),c.y=Math.ceil(t.dispatchCount/a)):c.x=t.dispatchCount,s.dispatchWorkgroups(c.x,c.y,c.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.prepareTimestampBuffer(e,t.cmdEncoderGPU),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:i,context:n,pipeline:s}=e,r=e.getBindings(),a=this.get(n),l=this.get(s).pipeline,c=a.currentSets,h=a.currentPass,u=e.getDrawParameters();if(u===null)return;c.pipeline!==l&&(h.setPipeline(l),c.pipeline=l);const d=c.bindingGroups;for(let g=0,y=r.length;g<y;g++){const x=r[g],_=this.get(x);d[x.index]!==x.id&&(h.setBindGroup(x.index,_.group),d[x.index]=x.id)}const f=e.getIndex(),p=f!==null;if(p===!0&&c.index!==f){const g=this.get(f).buffer,y=f.array instanceof Uint16Array?ml.Uint16:ml.Uint32;h.setIndexBuffer(g,y),c.index=f}const m=e.getVertexBuffers();for(let g=0,y=m.length;g<y;g++){const x=m[g];if(c.attributes[g]!==x){const _=this.get(x).buffer;h.setVertexBuffer(g,_),c.attributes[g]=x}}if(a.occlusionQuerySet!==void 0){const g=a.lastOcclusionObject;g!==i&&(g!==null&&g.occlusionTest===!0&&(h.endOcclusionQuery(),a.occlusionQueryIndex++),i.occlusionTest===!0&&(h.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=i),a.lastOcclusionObject=i)}if(i.isBatchedMesh===!0){const g=i._multiDrawStarts,y=i._multiDrawCounts,x=i._multiDrawCount,_=i._multiDrawInstances,v=p?f.array.BYTES_PER_ELEMENT:1;for(let A=0;A<x;A++){const T=_?_[A]:1,M=T>1?0:A;h.drawIndexed(y[A],T,g[A]/v,0,M)}}else if(p===!0){const{vertexCount:g,instanceCount:y,firstVertex:x}=u,_=e.getIndirect();if(_!==null){const v=this.get(_).buffer;h.drawIndexedIndirect(v,0)}else h.drawIndexed(g,y,x,0,0);t.update(i,g,y)}else{const{vertexCount:g,instanceCount:y,firstVertex:x}=u,_=e.getIndirect();if(_!==null){const v=this.get(_).buffer;h.drawIndirect(v,0)}else h.draw(g,y,x,0);t.update(i,g,y)}}needsRenderUpdate(e){const t=this.get(e),{object:i,material:n}=e,s=this.utils,r=s.getSampleCountRenderContext(e.context),a=s.getCurrentColorSpace(e.context),l=s.getCurrentColorFormat(e.context),c=s.getCurrentDepthStencilFormat(e.context),h=s.getPrimitiveTopology(i,n);let u=!1;return(t.material!==n||t.materialVersion!==n.version||t.transparent!==n.transparent||t.blending!==n.blending||t.premultipliedAlpha!==n.premultipliedAlpha||t.blendSrc!==n.blendSrc||t.blendDst!==n.blendDst||t.blendEquation!==n.blendEquation||t.blendSrcAlpha!==n.blendSrcAlpha||t.blendDstAlpha!==n.blendDstAlpha||t.blendEquationAlpha!==n.blendEquationAlpha||t.colorWrite!==n.colorWrite||t.depthWrite!==n.depthWrite||t.depthTest!==n.depthTest||t.depthFunc!==n.depthFunc||t.stencilWrite!==n.stencilWrite||t.stencilFunc!==n.stencilFunc||t.stencilFail!==n.stencilFail||t.stencilZFail!==n.stencilZFail||t.stencilZPass!==n.stencilZPass||t.stencilFuncMask!==n.stencilFuncMask||t.stencilWriteMask!==n.stencilWriteMask||t.side!==n.side||t.alphaToCoverage!==n.alphaToCoverage||t.sampleCount!==r||t.colorSpace!==a||t.colorFormat!==l||t.depthStencilFormat!==c||t.primitiveTopology!==h||t.clippingContextCacheKey!==e.clippingContext.cacheKey)&&(t.material=n,t.materialVersion=n.version,t.transparent=n.transparent,t.blending=n.blending,t.premultipliedAlpha=n.premultipliedAlpha,t.blendSrc=n.blendSrc,t.blendDst=n.blendDst,t.blendEquation=n.blendEquation,t.blendSrcAlpha=n.blendSrcAlpha,t.blendDstAlpha=n.blendDstAlpha,t.blendEquationAlpha=n.blendEquationAlpha,t.colorWrite=n.colorWrite,t.depthWrite=n.depthWrite,t.depthTest=n.depthTest,t.depthFunc=n.depthFunc,t.stencilWrite=n.stencilWrite,t.stencilFunc=n.stencilFunc,t.stencilFail=n.stencilFail,t.stencilZFail=n.stencilZFail,t.stencilZPass=n.stencilZPass,t.stencilFuncMask=n.stencilFuncMask,t.stencilWriteMask=n.stencilWriteMask,t.side=n.side,t.alphaToCoverage=n.alphaToCoverage,t.sampleCount=r,t.colorSpace=a,t.colorFormat=l,t.depthStencilFormat=c,t.primitiveTopology=h,t.clippingContextCacheKey=e.clippingContext.cacheKey,u=!0),u}getRenderCacheKey(e){const{object:t,material:i}=e,n=this.utils,s=e.context;return[i.transparent,i.blending,i.premultipliedAlpha,i.blendSrc,i.blendDst,i.blendEquation,i.blendSrcAlpha,i.blendDstAlpha,i.blendEquationAlpha,i.colorWrite,i.depthWrite,i.depthTest,i.depthFunc,i.stencilWrite,i.stencilFunc,i.stencilFail,i.stencilZFail,i.stencilZPass,i.stencilFuncMask,i.stencilWriteMask,i.side,n.getSampleCountRenderContext(s),n.getCurrentColorSpace(s),n.getCurrentColorFormat(s),n.getCurrentDepthStencilFormat(s),n.getPrimitiveTopology(t,i),e.getGeometryCacheKey(),e.clippingContext.cacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,i,n,s,r){return this.textureUtils.copyTextureToBuffer(e,t,i,n,s,r)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const i=this.get(e);if(!i.timeStampQuerySet){const n=this.device.createQuerySet({type:"timestamp",count:2});Object.assign(t,{timestampWrites:{querySet:n,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}}),i.timeStampQuerySet=n}}prepareTimestampBuffer(e,t){if(!this.trackTimestamp)return;const i=this.get(e),n=2*BigInt64Array.BYTES_PER_ELEMENT;i.currentTimestampQueryBuffers===void 0&&(i.currentTimestampQueryBuffers={resolveBuffer:this.device.createBuffer({label:"timestamp resolve buffer",size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),resultBuffer:this.device.createBuffer({label:"timestamp result buffer",size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),isMappingPending:!1});const{resolveBuffer:s,resultBuffer:r,isMappingPending:a}=i.currentTimestampQueryBuffers;a!==!0&&(t.resolveQuerySet(i.timeStampQuerySet,0,2,s,0),t.copyBufferToBuffer(s,0,r,0,n))}async resolveTimestampAsync(e,t="render"){if(!this.trackTimestamp)return;const i=this.get(e);if(i.currentTimestampQueryBuffers===void 0)return;const{resultBuffer:n,isMappingPending:s}=i.currentTimestampQueryBuffers;s!==!0&&(i.currentTimestampQueryBuffers.isMappingPending=!0,n.mapAsync(GPUMapMode.READ).then(()=>{const r=new BigUint64Array(n.getMappedRange()),a=Number(r[1]-r[0])/1e6;this.renderer.info.updateTimestamp(t,a),n.unmap(),i.currentTimestampQueryBuffers.isMappingPending=!1}))}createNodeBuilder(e,t){return new qG(e,t)}createProgram(e){const t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const i=this.get(e),s=i.currentPass.finish();this.get(t).bundleGPU=s,i.currentSets=i._currentSets,i.currentPass=i._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e){this.bindingUtils.createBindings(e)}updateBindings(e){this.bindingUtils.createBindings(e)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,i=null,n=null,s=0){let r=0,a=0,l=0,c=0,h=0,u=0,d=e.image.width,f=e.image.height;i!==null&&(c=i.x,h=i.y,u=i.z||0,d=i.width,f=i.height),n!==null&&(r=n.x,a=n.y,l=n.z||0);const p=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),m=this.get(e).texture,g=this.get(t).texture;p.copyTextureToTexture({texture:m,mipLevel:s,origin:{x:c,y:h,z:u}},{texture:g,mipLevel:s,origin:{x:r,y:a,z:l}},[d,f,1]),this.device.queue.submit([p.finish()])}copyFramebufferToTexture(e,t,i){const n=this.get(t);let s=null;t.renderTarget?e.isDepthTexture?s=this.get(t.depthTexture).texture:s=this.get(t.textures[0]).texture:e.isDepthTexture?s=this.textureUtils.getDepthBuffer(t.depth,t.stencil):s=this.context.getCurrentTexture();const r=this.get(e).texture;if(s.format!==r.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",s.format,r.format);return}let a;if(n.currentPass?(n.currentPass.end(),a=n.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:s,origin:{x:i.x,y:i.y,z:0}},{texture:r},[i.z,i.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),n.currentPass){const{descriptor:l}=n;for(let c=0;c<l.colorAttachments.length;c++)l.colorAttachments[c].loadOp=ti.Load;t.depth&&(l.depthStencilAttachment.depthLoadOp=ti.Load),t.stencil&&(l.depthStencilAttachment.stencilLoadOp=ti.Load),n.currentPass=a.beginRenderPass(l),n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null}}else this.device.queue.submit([a.finish()])}}class iV extends sw{constructor(e,t,i,n,s,r){super(e,t,i,n,s,r),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class nV extends RA{constructor(){super(),this.addMaterial(rO,JT),this.addMaterial(mA,bx),this.addMaterial($O,jT),this.addMaterial(ZO,QT),this.addMaterial(J3,ep),this.addMaterial(nO,tw),this.addMaterial(X3,ew),this.addMaterial(QO,iw),this.addMaterial(G3,_x),this.addMaterial(H3,nw),this.addMaterial(tz,ZT),this.addMaterial(rz,qT),this.addMaterial(lz,KT),this.addLight(xk,kL),this.addLight(Yk,VL),this.addLight(Zk,WL),this.addLight(EA,sw),this.addLight(jk,HL),this.addLight(Jk,BL),this.addLight(Qk,XL),this.addLight(Kk,iV),this.addToneMapping(Hz,mD),this.addToneMapping(Wz,gD),this.addToneMapping($z,yD),this.addToneMapping(qz,xD),this.addToneMapping(jz,_D),this.addToneMapping(Jz,vD)}}class hH extends hG{constructor(e={}){let t;e.forceWebGL?t=kb:(t=tV,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new kb(e)));const i=new t(e);super(i,e),this.library=new nV,this.isWebGPURenderer=!0}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Jf}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Jf);const hg={type:"change"},jx={type:"start"},Jx={type:"end"},Hb=1e-6,wt={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM_PAN:4},Ku=new Z,Mr=new Z,sV=new R,ju=new R,ug=new R,Ba=new hi,Wb=new R,Ju=new R,dg=new R,Qu=new R;class uH extends jf{constructor(e,t=null){super(e,t),this.enabled=!0,this.screen={left:0,top:0,width:0,height:0},this.rotateSpeed=1,this.zoomSpeed=1.2,this.panSpeed=.3,this.noRotate=!1,this.noZoom=!1,this.noPan=!1,this.staticMoving=!1,this.dynamicDampingFactor=.2,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.keys=["KeyA","KeyS","KeyD"],this.mouseButtons={LEFT:Mn.ROTATE,MIDDLE:Mn.DOLLY,RIGHT:Mn.PAN},this.state=wt.NONE,this.keyState=wt.NONE,this.target=new R,this._lastPosition=new R,this._lastZoom=1,this._touchZoomDistanceStart=0,this._touchZoomDistanceEnd=0,this._lastAngle=0,this._eye=new R,this._movePrev=new Z,this._moveCurr=new Z,this._lastAxis=new R,this._zoomStart=new Z,this._zoomEnd=new Z,this._panStart=new Z,this._panEnd=new Z,this._pointers=[],this._pointerPositions={},this._onPointerMove=oV.bind(this),this._onPointerDown=rV.bind(this),this._onPointerUp=aV.bind(this),this._onPointerCancel=lV.bind(this),this._onContextMenu=mV.bind(this),this._onMouseWheel=pV.bind(this),this._onKeyDown=hV.bind(this),this._onKeyUp=cV.bind(this),this._onTouchStart=gV.bind(this),this._onTouchMove=yV.bind(this),this._onTouchEnd=xV.bind(this),this._onMouseDown=uV.bind(this),this._onMouseMove=dV.bind(this),this._onMouseUp=fV.bind(this),this._target0=this.target.clone(),this._position0=this.object.position.clone(),this._up0=this.object.up.clone(),this._zoom0=this.object.zoom,t!==null&&(this.connect(),this.handleResize()),this.update()}connect(){window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="none"}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}handleResize(){const e=this.domElement.getBoundingClientRect(),t=this.domElement.ownerDocument.documentElement;this.screen.left=e.left+window.pageXOffset-t.clientLeft,this.screen.top=e.top+window.pageYOffset-t.clientTop,this.screen.width=e.width,this.screen.height=e.height}update(){this._eye.subVectors(this.object.position,this.target),this.noRotate||this._rotateCamera(),this.noZoom||this._zoomCamera(),this.noPan||this._panCamera(),this.object.position.addVectors(this.target,this._eye),this.object.isPerspectiveCamera?(this._checkDistances(),this.object.lookAt(this.target),this._lastPosition.distanceToSquared(this.object.position)>Hb&&(this.dispatchEvent(hg),this._lastPosition.copy(this.object.position))):this.object.isOrthographicCamera?(this.object.lookAt(this.target),(this._lastPosition.distanceToSquared(this.object.position)>Hb||this._lastZoom!==this.object.zoom)&&(this.dispatchEvent(hg),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom)):console.warn("THREE.TrackballControls: Unsupported camera type.")}reset(){this.state=wt.NONE,this.keyState=wt.NONE,this.target.copy(this._target0),this.object.position.copy(this._position0),this.object.up.copy(this._up0),this.object.zoom=this._zoom0,this.object.updateProjectionMatrix(),this._eye.subVectors(this.object.position,this.target),this.object.lookAt(this.target),this.dispatchEvent(hg),this._lastPosition.copy(this.object.position),this._lastZoom=this.object.zoom}_panCamera(){if(Mr.copy(this._panEnd).sub(this._panStart),Mr.lengthSq()){if(this.object.isOrthographicCamera){const e=(this.object.right-this.object.left)/this.object.zoom/this.domElement.clientWidth,t=(this.object.top-this.object.bottom)/this.object.zoom/this.domElement.clientWidth;Mr.x*=e,Mr.y*=t}Mr.multiplyScalar(this._eye.length()*this.panSpeed),ju.copy(this._eye).cross(this.object.up).setLength(Mr.x),ju.add(sV.copy(this.object.up).setLength(Mr.y)),this.object.position.add(ju),this.target.add(ju),this.staticMoving?this._panStart.copy(this._panEnd):this._panStart.add(Mr.subVectors(this._panEnd,this._panStart).multiplyScalar(this.dynamicDampingFactor))}}_rotateCamera(){Qu.set(this._moveCurr.x-this._movePrev.x,this._moveCurr.y-this._movePrev.y,0);let e=Qu.length();e?(this._eye.copy(this.object.position).sub(this.target),Wb.copy(this._eye).normalize(),Ju.copy(this.object.up).normalize(),dg.crossVectors(Ju,Wb).normalize(),Ju.setLength(this._moveCurr.y-this._movePrev.y),dg.setLength(this._moveCurr.x-this._movePrev.x),Qu.copy(Ju.add(dg)),ug.crossVectors(Qu,this._eye).normalize(),e*=this.rotateSpeed,Ba.setFromAxisAngle(ug,e),this._eye.applyQuaternion(Ba),this.object.up.applyQuaternion(Ba),this._lastAxis.copy(ug),this._lastAngle=e):!this.staticMoving&&this._lastAngle&&(this._lastAngle*=Math.sqrt(1-this.dynamicDampingFactor),this._eye.copy(this.object.position).sub(this.target),Ba.setFromAxisAngle(this._lastAxis,this._lastAngle),this._eye.applyQuaternion(Ba),this.object.up.applyQuaternion(Ba)),this._movePrev.copy(this._moveCurr)}_zoomCamera(){let e;this.state===wt.TOUCH_ZOOM_PAN?(e=this._touchZoomDistanceStart/this._touchZoomDistanceEnd,this._touchZoomDistanceStart=this._touchZoomDistanceEnd,this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=Rc.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")):(e=1+(this._zoomEnd.y-this._zoomStart.y)*this.zoomSpeed,e!==1&&e>0&&(this.object.isPerspectiveCamera?this._eye.multiplyScalar(e):this.object.isOrthographicCamera?(this.object.zoom=Rc.clamp(this.object.zoom/e,this.minZoom,this.maxZoom),this._lastZoom!==this.object.zoom&&this.object.updateProjectionMatrix()):console.warn("THREE.TrackballControls: Unsupported camera type")),this.staticMoving?this._zoomStart.copy(this._zoomEnd):this._zoomStart.y+=(this._zoomEnd.y-this._zoomStart.y)*this.dynamicDampingFactor)}_getMouseOnScreen(e,t){return Ku.set((e-this.screen.left)/this.screen.width,(t-this.screen.top)/this.screen.height),Ku}_getMouseOnCircle(e,t){return Ku.set((e-this.screen.width*.5-this.screen.left)/(this.screen.width*.5),(this.screen.height+2*(this.screen.top-t))/this.screen.width),Ku}_addPointer(e){this._pointers.push(e)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t].pointerId==e.pointerId){this._pointers.splice(t,1);return}}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new Z,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0].pointerId?this._pointers[1]:this._pointers[0];return this._pointerPositions[t.pointerId]}_checkDistances(){(!this.noZoom||!this.noPan)&&(this._eye.lengthSq()>this.maxDistance*this.maxDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.maxDistance)),this._zoomStart.copy(this._zoomEnd)),this._eye.lengthSq()<this.minDistance*this.minDistance&&(this.object.position.addVectors(this.target,this._eye.setLength(this.minDistance)),this._zoomStart.copy(this._zoomEnd)))}}function rV(o){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(o.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),this._addPointer(o),o.pointerType==="touch"?this._onTouchStart(o):this._onMouseDown(o))}function oV(o){this.enabled!==!1&&(o.pointerType==="touch"?this._onTouchMove(o):this._onMouseMove(o))}function aV(o){this.enabled!==!1&&(o.pointerType==="touch"?this._onTouchEnd(o):this._onMouseUp(),this._removePointer(o),this._pointers.length===0&&(this.domElement.releasePointerCapture(o.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp)))}function lV(o){this._removePointer(o)}function cV(){this.enabled!==!1&&(this.keyState=wt.NONE,window.addEventListener("keydown",this._onKeyDown))}function hV(o){this.enabled!==!1&&(window.removeEventListener("keydown",this._onKeyDown),this.keyState===wt.NONE&&(o.code===this.keys[wt.ROTATE]&&!this.noRotate?this.keyState=wt.ROTATE:o.code===this.keys[wt.ZOOM]&&!this.noZoom?this.keyState=wt.ZOOM:o.code===this.keys[wt.PAN]&&!this.noPan&&(this.keyState=wt.PAN)))}function uV(o){let e;switch(o.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Mn.DOLLY:this.state=wt.ZOOM;break;case Mn.ROTATE:this.state=wt.ROTATE;break;case Mn.PAN:this.state=wt.PAN;break;default:this.state=wt.NONE}const t=this.keyState!==wt.NONE?this.keyState:this.state;t===wt.ROTATE&&!this.noRotate?(this._moveCurr.copy(this._getMouseOnCircle(o.pageX,o.pageY)),this._movePrev.copy(this._moveCurr)):t===wt.ZOOM&&!this.noZoom?(this._zoomStart.copy(this._getMouseOnScreen(o.pageX,o.pageY)),this._zoomEnd.copy(this._zoomStart)):t===wt.PAN&&!this.noPan&&(this._panStart.copy(this._getMouseOnScreen(o.pageX,o.pageY)),this._panEnd.copy(this._panStart)),this.dispatchEvent(jx)}function dV(o){const e=this.keyState!==wt.NONE?this.keyState:this.state;e===wt.ROTATE&&!this.noRotate?(this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(o.pageX,o.pageY))):e===wt.ZOOM&&!this.noZoom?this._zoomEnd.copy(this._getMouseOnScreen(o.pageX,o.pageY)):e===wt.PAN&&!this.noPan&&this._panEnd.copy(this._getMouseOnScreen(o.pageX,o.pageY))}function fV(){this.state=wt.NONE,this.dispatchEvent(Jx)}function pV(o){if(this.enabled!==!1&&this.noZoom!==!0){switch(o.preventDefault(),o.deltaMode){case 2:this._zoomStart.y-=o.deltaY*.025;break;case 1:this._zoomStart.y-=o.deltaY*.01;break;default:this._zoomStart.y-=o.deltaY*25e-5;break}this.dispatchEvent(jx),this.dispatchEvent(Jx)}}function mV(o){this.enabled!==!1&&o.preventDefault()}function gV(o){switch(this._trackPointer(o),this._pointers.length){case 1:this.state=wt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(this._pointers[0].pageX,this._pointers[0].pageY)),this._movePrev.copy(this._moveCurr);break;default:this.state=wt.TOUCH_ZOOM_PAN;const e=this._pointers[0].pageX-this._pointers[1].pageX,t=this._pointers[0].pageY-this._pointers[1].pageY;this._touchZoomDistanceEnd=this._touchZoomDistanceStart=Math.sqrt(e*e+t*t);const i=(this._pointers[0].pageX+this._pointers[1].pageX)/2,n=(this._pointers[0].pageY+this._pointers[1].pageY)/2;this._panStart.copy(this._getMouseOnScreen(i,n)),this._panEnd.copy(this._panStart);break}this.dispatchEvent(jx)}function yV(o){switch(this._trackPointer(o),this._pointers.length){case 1:this._movePrev.copy(this._moveCurr),this._moveCurr.copy(this._getMouseOnCircle(o.pageX,o.pageY));break;default:const e=this._getSecondPointerPosition(o),t=o.pageX-e.x,i=o.pageY-e.y;this._touchZoomDistanceEnd=Math.sqrt(t*t+i*i);const n=(o.pageX+e.x)/2,s=(o.pageY+e.y)/2;this._panEnd.copy(this._getMouseOnScreen(n,s));break}}function xV(o){switch(this._pointers.length){case 0:this.state=wt.NONE;break;case 1:this.state=wt.TOUCH_ROTATE,this._moveCurr.copy(this._getMouseOnCircle(o.pageX,o.pageY)),this._movePrev.copy(this._moveCurr);break;case 2:this.state=wt.TOUCH_ZOOM_PAN;for(let e=0;e<this._pointers.length;e++)if(this._pointers[e].pointerId!==o.pointerId){const t=this._pointerPositions[this._pointers[e].pointerId];this._moveCurr.copy(this._getMouseOnCircle(t.x,t.y)),this._movePrev.copy(this._moveCurr);break}break}this.dispatchEvent(Jx)}const $b={type:"change"},Qx={type:"start"},OA={type:"end"},ed=new qo,Xb=new Fs,_V=Math.cos(70*Rc.DEG2RAD),li=new R,tn=2*Math.PI,Lt={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},fg=1e-6;class dH extends jf{constructor(e,t=null){super(e,t),this.state=Lt.NONE,this.enabled=!0,this.target=new R,this.cursor=new R,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Mn.ROTATE,MIDDLE:Mn.DOLLY,RIGHT:Mn.PAN},this.touches={ONE:Mo.ROTATE,TWO:Mo.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new R,this._lastQuaternion=new hi,this._lastTargetPosition=new R,this._quat=new hi().setFromUnitVectors(e.up,new R(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new Ig,this._sphericalDelta=new Ig,this._scale=1,this._panOffset=new R,this._rotateStart=new Z,this._rotateEnd=new Z,this._rotateDelta=new Z,this._panStart=new Z,this._panEnd=new Z,this._panDelta=new Z,this._dollyStart=new Z,this._dollyEnd=new Z,this._dollyDelta=new Z,this._dollyDirection=new R,this._mouse=new Z,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=bV.bind(this),this._onPointerDown=vV.bind(this),this._onPointerUp=SV.bind(this),this._onContextMenu=RV.bind(this),this._onMouseWheel=wV.bind(this),this._onKeyDown=AV.bind(this),this._onTouchStart=EV.bind(this),this._onTouchMove=CV.bind(this),this._onMouseDown=MV.bind(this),this._onMouseMove=TV.bind(this),this._interceptControlDown=NV.bind(this),this._interceptControlUp=PV.bind(this),this.domElement!==null&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent($b),this.update(),this.state=Lt.NONE}update(e=null){const t=this.object.position;li.copy(t).sub(this.target),li.applyQuaternion(this._quat),this._spherical.setFromVector3(li),this.autoRotate&&this.state===Lt.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,n=this.maxAzimuthAngle;isFinite(i)&&isFinite(n)&&(i<-Math.PI?i+=tn:i>Math.PI&&(i-=tn),n<-Math.PI?n+=tn:n>Math.PI&&(n-=tn),i<=n?this._spherical.theta=Math.max(i,Math.min(n,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(i+n)/2?Math.max(i,this._spherical.theta):Math.min(n,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let s=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const r=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),s=r!=this._spherical.radius}if(li.setFromSpherical(this._spherical),li.applyQuaternion(this._quatInverse),t.copy(this.target).add(li),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let r=null;if(this.object.isPerspectiveCamera){const a=li.length();r=this._clampDistance(a*this._scale);const l=a-r;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),s=!!l}else if(this.object.isOrthographicCamera){const a=new R(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),s=l!==this.object.zoom;const c=new R(this._mouse.x,this._mouse.y,0);c.unproject(this.object),this.object.position.sub(c).add(a),this.object.updateMatrixWorld(),r=li.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;r!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(r).add(this.object.position):(ed.origin.copy(this.object.position),ed.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(ed.direction))<_V?this.object.lookAt(this.target):(Xb.setFromNormalAndCoplanarPoint(this.object.up,this.target),ed.intersectPlane(Xb,this.target))))}else if(this.object.isOrthographicCamera){const r=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),r!==this.object.zoom&&(this.object.updateProjectionMatrix(),s=!0)}return this._scale=1,this._performCursorZoom=!1,s||this._lastPosition.distanceToSquared(this.object.position)>fg||8*(1-this._lastQuaternion.dot(this.object.quaternion))>fg||this._lastTargetPosition.distanceToSquared(this.target)>fg?(this.dispatchEvent($b),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?tn/60*this.autoRotateSpeed*e:tn/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){li.setFromMatrixColumn(t,0),li.multiplyScalar(-e),this._panOffset.add(li)}_panUp(e,t){this.screenSpacePanning===!0?li.setFromMatrixColumn(t,1):(li.setFromMatrixColumn(t,0),li.crossVectors(this.object.up,li)),li.multiplyScalar(e),this._panOffset.add(li)}_pan(e,t){const i=this.domElement;if(this.object.isPerspectiveCamera){const n=this.object.position;li.copy(n).sub(this.target);let s=li.length();s*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*s/i.clientHeight,this.object.matrix),this._panUp(2*t*s/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),n=e-i.left,s=t-i.top,r=i.width,a=i.height;this._mouse.x=n/r*2-1,this._mouse.y=-(s/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(tn*this._rotateDelta.x/t.clientHeight),this._rotateUp(tn*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateUp(tn*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateUp(-tn*this.rotateSpeed/this.domElement.clientHeight):this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateLeft(tn*this.rotateSpeed/this.domElement.clientHeight):this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this._rotateLeft(-tn*this.rotateSpeed/this.domElement.clientHeight):this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._rotateStart.set(i,n)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panStart.set(i,n)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,s=Math.sqrt(i*i+n*n);this._dollyStart.set(0,s)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const i=this._getSecondPointerPosition(e),n=.5*(e.pageX+i.x),s=.5*(e.pageY+i.y);this._rotateEnd.set(n,s)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(tn*this._rotateDelta.x/t.clientHeight),this._rotateUp(tn*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panEnd.set(i,n)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,s=Math.sqrt(i*i+n*n);this._dollyEnd.set(0,s),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const r=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(r,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new Z,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}}function vV(o){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(o.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(o)&&(this._addPointer(o),o.pointerType==="touch"?this._onTouchStart(o):this._onMouseDown(o)))}function bV(o){this.enabled!==!1&&(o.pointerType==="touch"?this._onTouchMove(o):this._onMouseMove(o))}function SV(o){switch(this._removePointer(o),this._pointers.length){case 0:this.domElement.releasePointerCapture(o.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(OA),this.state=Lt.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function MV(o){let e;switch(o.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Mn.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(o),this.state=Lt.DOLLY;break;case Mn.ROTATE:if(o.ctrlKey||o.metaKey||o.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(o),this.state=Lt.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(o),this.state=Lt.ROTATE}break;case Mn.PAN:if(o.ctrlKey||o.metaKey||o.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(o),this.state=Lt.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(o),this.state=Lt.PAN}break;default:this.state=Lt.NONE}this.state!==Lt.NONE&&this.dispatchEvent(Qx)}function TV(o){switch(this.state){case Lt.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(o);break;case Lt.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(o);break;case Lt.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(o);break}}function wV(o){this.enabled===!1||this.enableZoom===!1||this.state!==Lt.NONE||(o.preventDefault(),this.dispatchEvent(Qx),this._handleMouseWheel(this._customWheelEvent(o)),this.dispatchEvent(OA))}function AV(o){this.enabled===!1||this.enablePan===!1||this._handleKeyDown(o)}function EV(o){switch(this._trackPointer(o),this._pointers.length){case 1:switch(this.touches.ONE){case Mo.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(o),this.state=Lt.TOUCH_ROTATE;break;case Mo.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(o),this.state=Lt.TOUCH_PAN;break;default:this.state=Lt.NONE}break;case 2:switch(this.touches.TWO){case Mo.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(o),this.state=Lt.TOUCH_DOLLY_PAN;break;case Mo.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(o),this.state=Lt.TOUCH_DOLLY_ROTATE;break;default:this.state=Lt.NONE}break;default:this.state=Lt.NONE}this.state!==Lt.NONE&&this.dispatchEvent(Qx)}function CV(o){switch(this._trackPointer(o),this.state){case Lt.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(o),this.update();break;case Lt.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(o),this.update();break;case Lt.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(o),this.update();break;case Lt.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(o),this.update();break;default:this.state=Lt.NONE}}function RV(o){this.enabled!==!1&&o.preventDefault()}function NV(o){o.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function PV(o){o.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const IV={type:"change"},qb=1e-6,Yb=new hi;class fH extends jf{constructor(e,t=null){super(e,t),this.movementSpeed=1,this.rollSpeed=.005,this.dragToLook=!1,this.autoForward=!1,this._moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},this._moveVector=new R(0,0,0),this._rotationVector=new R(0,0,0),this._lastQuaternion=new hi,this._lastPosition=new R,this._status=0,this._onKeyDown=DV.bind(this),this._onKeyUp=LV.bind(this),this._onPointerMove=UV.bind(this),this._onPointerDown=FV.bind(this),this._onPointerUp=BV.bind(this),this._onPointerCancel=OV.bind(this),this._onContextMenu=zV.bind(this),t!==null&&this.connect()}connect(){window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.addEventListener("pointercancel",this._onPointerCancel),this.domElement.addEventListener("contextmenu",this._onContextMenu)}disconnect(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerCancel),this.domElement.removeEventListener("contextmenu",this._onContextMenu)}dispose(){this.disconnect()}update(e){if(this.enabled===!1)return;const t=this.object,i=e*this.movementSpeed,n=e*this.rollSpeed;t.translateX(this._moveVector.x*i),t.translateY(this._moveVector.y*i),t.translateZ(this._moveVector.z*i),Yb.set(this._rotationVector.x*n,this._rotationVector.y*n,this._rotationVector.z*n,1).normalize(),t.quaternion.multiply(Yb),(this._lastPosition.distanceToSquared(t.position)>qb||8*(1-this._lastQuaternion.dot(t.quaternion))>qb)&&(this.dispatchEvent(IV),this._lastQuaternion.copy(t.quaternion),this._lastPosition.copy(t.position))}_updateMovementVector(){const e=this._moveState.forward||this.autoForward&&!this._moveState.back?1:0;this._moveVector.x=-this._moveState.left+this._moveState.right,this._moveVector.y=-this._moveState.down+this._moveState.up,this._moveVector.z=-e+this._moveState.back}_updateRotationVector(){this._rotationVector.x=-this._moveState.pitchDown+this._moveState.pitchUp,this._rotationVector.y=-this._moveState.yawRight+this._moveState.yawLeft,this._rotationVector.z=-this._moveState.rollRight+this._moveState.rollLeft}_getContainerDimensions(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}}}function DV(o){if(!(o.altKey||this.enabled===!1)){switch(o.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=.1;break;case"KeyW":this._moveState.forward=1;break;case"KeyS":this._moveState.back=1;break;case"KeyA":this._moveState.left=1;break;case"KeyD":this._moveState.right=1;break;case"KeyR":this._moveState.up=1;break;case"KeyF":this._moveState.down=1;break;case"ArrowUp":this._moveState.pitchUp=1;break;case"ArrowDown":this._moveState.pitchDown=1;break;case"ArrowLeft":this._moveState.yawLeft=1;break;case"ArrowRight":this._moveState.yawRight=1;break;case"KeyQ":this._moveState.rollLeft=1;break;case"KeyE":this._moveState.rollRight=1;break}this._updateMovementVector(),this._updateRotationVector()}}function LV(o){if(this.enabled!==!1){switch(o.code){case"ShiftLeft":case"ShiftRight":this.movementSpeedMultiplier=1;break;case"KeyW":this._moveState.forward=0;break;case"KeyS":this._moveState.back=0;break;case"KeyA":this._moveState.left=0;break;case"KeyD":this._moveState.right=0;break;case"KeyR":this._moveState.up=0;break;case"KeyF":this._moveState.down=0;break;case"ArrowUp":this._moveState.pitchUp=0;break;case"ArrowDown":this._moveState.pitchDown=0;break;case"ArrowLeft":this._moveState.yawLeft=0;break;case"ArrowRight":this._moveState.yawRight=0;break;case"KeyQ":this._moveState.rollLeft=0;break;case"KeyE":this._moveState.rollRight=0;break}this._updateMovementVector(),this._updateRotationVector()}}function FV(o){if(this.enabled!==!1)if(this.dragToLook)this._status++;else{switch(o.button){case 0:this._moveState.forward=1;break;case 2:this._moveState.back=1;break}this._updateMovementVector()}}function UV(o){if(this.enabled!==!1&&(!this.dragToLook||this._status>0)){const e=this._getContainerDimensions(),t=e.size[0]/2,i=e.size[1]/2;this._moveState.yawLeft=-(o.pageX-e.offset[0]-t)/t,this._moveState.pitchDown=(o.pageY-e.offset[1]-i)/i,this._updateRotationVector()}}function BV(o){if(this.enabled!==!1){if(this.dragToLook)this._status--,this._moveState.yawLeft=this._moveState.pitchDown=0;else{switch(o.button){case 0:this._moveState.forward=0;break;case 2:this._moveState.back=0;break}this._updateMovementVector()}this._updateRotationVector()}}function OV(){this.enabled!==!1&&(this.dragToLook?(this._status=0,this._moveState.yawLeft=this._moveState.pitchDown=0):(this._moveState.forward=0,this._moveState.back=0,this._updateMovementVector()),this._updateRotationVector())}function zV(o){this.enabled!==!1&&o.preventDefault()}const kV={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class pp{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const GV=new sh(-1,1,1,-1,0,1);class VV extends ct{constructor(){super(),this.setAttribute("position",new Ne([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Ne([0,2,0,0,2,0],2))}}const HV=new VV;class WV{constructor(e){this._mesh=new Kt(HV,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,GV)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class $V extends pp{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof cn?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=th.clone(e.uniforms),this.material=new cn({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new WV(this.material)}render(e,t,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class Zb extends pp{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,i){const n=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let r,a;this.inverse?(r=0,a=1):(r=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),s.buffers.stencil.setFunc(n.ALWAYS,r,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(i),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.color.setMask(!0),s.buffers.depth.setMask(!0),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(n.EQUAL,1,4294967295),s.buffers.stencil.setOp(n.KEEP,n.KEEP,n.KEEP),s.buffers.stencil.setLocked(!0)}}class XV extends pp{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class pH{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const i=e.getSize(new Z);this._width=i.width,this._height=i.height,t=new Dn(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:$o}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new $V(kV),this.copyPass.material.blending=hs,this.clock=new sx}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let i=!1;for(let n=0,s=this.passes.length;n<s;n++){const r=this.passes[n];if(r.enabled!==!1){if(r.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(n),r.render(this.renderer,this.writeBuffer,this.readBuffer,e,i),r.needsSwap){if(i){const a=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}Zb!==void 0&&(r instanceof Zb?i=!0:r instanceof XV&&(i=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new Z);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const i=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget1.setSize(i,n),this.renderTarget2.setSize(i,n);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(i,n)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class mH extends pp{constructor(e,t,i=null,n=null,s=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=i,this.clearColor=n,this.clearAlpha=s,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Ce}render(e,t,i){const n=e.autoClear;e.autoClear=!1;let s,r;this.overrideMaterial!==null&&(r=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor,e.getClearAlpha())),this.clearAlpha!==null&&(s=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:i),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(s),this.overrideMaterial!==null&&(this.scene.overrideMaterial=r),e.autoClear=n}}export{nH as $,SS as A,ct as B,Ce as C,ss as D,Yn as E,rn as F,eh as G,$o as H,zf as I,Ha as J,Kt as K,Nf as L,zi as M,Hs as N,sh as O,wi as P,hi as Q,qi as R,hM as S,xi as T,fs as U,ns as V,JP as W,UM as X,aH as Y,lH as Z,rH as _,A2 as a,Pn as a$,Yy as a0,Ji as a1,xs as a2,DM as a3,sn as a4,_l as a5,Nt as a6,SM as a7,Jn as a8,Br as a9,XM as aA,qM as aB,IM as aC,gM as aD,Ur as aE,i2 as aF,rh as aG,os as aH,Mc as aI,Gy as aJ,Ky as aK,vt as aL,mM as aM,xM as aN,_M as aO,Ff as aP,Bc as aQ,ky as aR,Yd as aS,Ci as aT,_y as aU,rc as aV,ka as aW,Nn as aX,Tc as aY,wc as aZ,js as a_,Co as aa,cn as ab,Zf as ac,oH as ad,sD as ae,lT as af,Yi as ag,bt as ah,Vr as ai,hH as aj,pH as ak,mH as al,uH as am,dH as an,fH as ao,ys as ap,Mn as aq,NS as ar,_g as as,PS as at,qo as au,Fs as av,Mo as aw,un as ax,Ng as ay,er as az,Jb as b,Uc as b0,Fc as b1,hh as b2,ch as b3,Pf as c,HA as d,xy as e,R as f,Z as g,sx as h,iH as i,WM as j,KI as k,Dn as l,ci as m,Uy as n,lI as o,mi as p,gi as q,Rc as r,ZM as s,YM as t,vf as u,sH as v,Ye as w,gt as x,Ig as y,Ne as z};
